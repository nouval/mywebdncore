Find all "ServiceChannel.Return<", Subfolders, Find Results 1, Entire Solution, "*.cs"
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\CorporateFxPayment\CorporateFxReceiptManager.cs(18):			Stream stream = ServiceChannel.Return<IReportingService, Stream>(service => service.GetCorporateFxReceipts(request));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\Documents\HelpAndTipsManager.cs(12):			List<HelpAndTipsInfo> helpAndTips = ServiceChannel.Return<IDocumentService, List<HelpAndTipsInfo>>(service => service.GetHelpAndTips());
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\ForeignExchange\ForeignExchangeManager.cs(33):			List<FXTickets1Info> agentTicketInfo = ServiceChannel.Return<IForeignExchange, List<FXTickets1Info>>(service => service.GetFXTicketsForAgent(agentId, startDate, endDate));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\ForeignExchange\ForeignExchangeManager.cs(39):			List<FXTickets2Info> ticketDetailInfo = ServiceChannel.Return<IForeignExchange, List<FXTickets2Info>>(service => service.GetAllFXTickets2(ticketIds));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\ForeignExchange\ForeignExchangeManager.cs(45):			ResellerInfo resellerInfo = ServiceChannel.Return<IForeignExchange, ResellerInfo>(service => service.GetReseller(agentId));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Bll\ForeignExchange\FXTicketVoidManager.cs(14):			List<FXTicketsInfo> tickets = ServiceChannel.Return<IForeignExchange, List<FXTicketsInfo>>(service => service.GetFXTicketsByDate(userId, agentId, date, showAllUsers));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Agents\Providers\Finance\LimitValidationManager.cs(335):				decimal agentUsdTotalToday = ServiceChannel.Return<IAccountingService, decimal>(service => service.GetTransactionSummaryTotalsByAgent(receivingAgentInfo.AgentID,
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Agents\Providers\Finance\LimitValidationManager.cs(403):			TransactionSummaryTotalInfo info = ServiceChannel.Return<IAccountingService, TransactionSummaryTotalInfo>(service => service.GetTransactionSummaryTotalsByAgent(payingAgentId, currency, false, false, DateTime.Today, false));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Agents\Providers\Finance\LimitValidationManager.cs(416):			TransactionSummaryTotalInfo info = ServiceChannel.Return<IAccountingService, TransactionSummaryTotalInfo>(service => service.GetTransactionSummaryTotalsByAgentLocation(payingAgentId, payingAgentLocationId, currency, false, false, DateTime.Today, false));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Agents\Providers\Finance\LimitValidationManager.cs(432):			parentDepartment = ServiceChannel.Return<IAccountingService, DepartmentInfo>(service => service.GetParentDepartment(ContactManager.Get(agentId).DepartmentID)).DepartmentID;
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(109):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetPreOrderDisclosureReceipt(request));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(139):				receiptDataStream = ServiceChannel.Return<IReportingService, Stream>(service => service.GetReceivingAgentCustomerReceipt(orderReceiptInfo, SetReportOptions(locale, renderFormat),
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(172):				receiptDataStream = ServiceChannel.Return<IReportingService, Stream>(service => service.GetSSRSComplianceForm(orderReceiptInfo, SetReportOptions(locale, renderFormat), applicationFEDBId, Info, PrintingType, userId, agentId, agentId));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(241):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetPEPReceipt(orderReceiptInfo, SetReportOptions(locale, ReportRenderTypes.PDF)));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(969):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetReceivingAgentCustomerReceipt(orderReceiptInfo, SetReportOptions(locale, renderformat), printingType, applicationFEDBId, userId, agentId, agentLocId));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(974):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetConsumerReceipt(orderReceiptInfo, SetReportOptions(locale, renderFormat), printingType, applicationFEDBId));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\CustomerReceiptManager.cs(979):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetOrderOtherReceipt(orderReceiptInfo, SetReportOptions(locale, renderFormat), formType));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Reports\ManualOrderReceiptManager.cs(158):			return ServiceChannel.Return<IReportingService, Stream>(service => service.GetReceivingAgentManualReceipt(orderManualReceiptInfo,
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Validation\OfacValidator.cs(40):			var response = ServiceChannel.Return<IOfacService, ValidationResponse>(service => service.Match2(ofacUserCan));
  C:\Users\nhussein\Source\Repos\FxOnline\Web\FxCorp\FxCorporate.Orders\Providers\Validation\SarValidator.cs(132):			SarValidationResponse sarValidationResponse = ServiceChannel.Return<ISarService, SarValidationResponse>(service => service.Validate(sarValidationRequest));
  Matching lines: 20    Matching files: 9    Total files searched: 672
