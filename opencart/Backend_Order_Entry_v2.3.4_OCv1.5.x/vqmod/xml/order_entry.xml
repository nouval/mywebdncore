<modification>
	<id>Backend Order Entry</id>
	<version>2.3.4</version>
	<vqmver>2.x</vqmver>
	<author>ACFD Development</author>

	<file name="admin/controller/common/header.php">
		<operation>
			<search position="before"><![CDATA[
				$this->data['description'] = $this->document->getDescription();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && !isset($this->request->get['order_entry'])) {
					unset($this->session->data['customer_info']);
					unset($this->session->data['guest']);
					unset($this->session->data['cart']);
					unset($this->session->data['voucher']);
					unset($this->session->data['vouchers']);
					unset($this->session->data['reward']);
					unset($this->session->data['coupon']);
					unset($this->session->data['advanced_coupon']);
					unset($this->session->data['payment_address']);
					unset($this->session->data['payment_address_id']);
					unset($this->session->data['payment_country_id']);
					unset($this->session->data['payment_zone_id']);
					unset($this->session->data['payment_methods']);
					unset($this->session->data['payment_method']);
					unset($this->session->data['payment_date']);
					unset($this->session->data['shipping_address']);
					unset($this->session->data['shipping_address_id']);
					unset($this->session->data['shipping_country_id']);
					unset($this->session->data['shipping_zone_id']);
					unset($this->session->data['shipping_postcode']);
					unset($this->session->data['shipping_methods']);
					unset($this->session->data['shipping_method']);
					unset($this->session->data['chosen_method']);
					unset($this->session->data['comment']);
					unset($this->session->data['catalog_model']);
					unset($this->session->data['override_price']);
					unset($this->session->data['override_special']);
					unset($this->session->data['override_name']);
					unset($this->session->data['override_model']);
					unset($this->session->data['override_weight']);
					unset($this->session->data['override_weight_id']);
					unset($this->session->data['override_location']);
					unset($this->session->data['override_upc']);
					unset($this->session->data['override_ship']);
					unset($this->session->data['override_sku']);
					unset($this->session->data['override_total']);
					unset($this->session->data['tax_exempt']);
					unset($this->session->data['use_store_credit']);
					unset($this->session->data['use_reward_points']);
					unset($this->session->data['edit_order']);
					unset($this->session->data['quote']);
					unset($this->session->data['oe_quote']);
					unset($this->session->data['custom_ship']);
					unset($this->session->data['custom_shipping']);
					unset($this->session->data['product_info']);
					unset($this->session->data['key']);
					unset($this->session->data['taxed']);
					unset($this->session->data['custom_product']);
					unset($this->session->data['custom_image']);
					unset($this->session->data['store_id']);
					unset($this->session->data['store_config']);
					unset($this->session->data['optional_fees']);
					unset($this->session->data['selected_currency']);
					unset($this->session->data['customer_ref']);
					unset($this->session->data['order_paid']);
					unset($this->session->data['override_tax']);
					unset($this->session->data['store_credit']);
					unset($this->session->data['check']);
					unset($this->session->data['purchase_order']);
					unset($this->session->data['po_number']);
					unset($this->session->data['customer_id']);
					unset($this->session->data['cart_weight']);
					unset($this->session->data['quantity']);
					unset($this->session->data['add_emails']);
					unset($this->session->data['invoice_number']);
					unset($this->session->data['invoice_date']);
					unset($this->session->data['custom_order_date']);
					unset($this->session->data['edit_reward']);
					unset($this->session->data['notify']);
					unset($this->session->data['convert']);
					unset($this->session->data['dropship']);
					unset($this->session->data['language']);
					unset($this->session->data['language_id']);
					unset($this->session->data['prev_order_total']);
					unset($this->session->data['layaway_deposit']);
					unset($this->session->data['layaway_amount']);
					unset($this->session->data['layaway_payments']);
					unset($this->session->data['affiliate']);
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$this->data['text_zone'] = $this->language->get('text_zone');
			]]></search>
			<add><![CDATA[
				$this->data['text_order_entry'] = $this->language->get('text_order_entry');
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$this->data['home'] = $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL');
			]]></search>
			<add><![CDATA[
				$this->data['order_entry'] = $this->url->link('sale/order_entry', 'token=' . $this->session->data['token'], 'SSL');
			]]></add>
		</operation>
	</file>

	<file name="admin/controller/common/home.php">
		<operation>
			<search position="after"><![CDATA[
				$this->data['heading_title'] = $this->language->get('heading_title');
			]]></search>
			<add><![CDATA[
				$this->load->language('sale/order_entry');
				$this->load->model('sale/order_entry');
				$this->data['text_total_quotes'] = $this->language->get('text_total_quotes');
				$this->data['text_total_quotes_year'] = $this->language->get('text_total_quotes_year');
				$this->data['text_number_quotes'] = $this->language->get('text_number_quotes');
				$this->data['total_quotes'] = $this->currency->format($this->model_sale_order_entry->getTotalQuotes(), $this->config->get('config_currency'));
				$this->data['total_quotes_year'] = $this->currency->format($this->model_sale_order_entry->getTotalQuotesByYear(date('Y')), $this->config->get('config_currency'));
				$this->data['number_quotes'] = $this->model_sale_order_entry->getNumberQuotes();
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				=> $this->currency->format($result['total'], $result['currency_code'], $result['currency_value']),
			]]></search>
			<add><![CDATA[
				'converted'		=> $this->currency->format($result['total']),
			]]></add>
		</operation>
	</file>

	<file name="admin/controller/payment/*.php">
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
				$this->document->setTitle($this->language->get('heading_title'));
			]]></search>
			<add><![CDATA[
				$this->data['entry_paid_status'] = $this->language->get('entry_paid_status');
				$this->data['text_paid'] = $this->language->get('text_paid');
				$this->data['text_unpaid'] = $this->language->get('text_unpaid');
				$classname = str_replace('vq2-admin_controller_payment_', '', basename(__FILE__, '.php'));
				$this->data['classname'] = $classname;
				if (isset($this->request->post[$classname . '_paid_status'])) {
					$this->data['field_value'] = $this->request->post[$classname . '_paid_status'];
				} else {
					$this->data['field_value'] = $this->config->get($classname . '_paid_status');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				$text_strings = array(
			]]></search>
			<add><![CDATA[
				$this->data['entry_paid_status'] = $this->language->get('entry_paid_status');
				$this->data['text_paid'] = $this->language->get('text_paid');
				$this->data['text_unpaid'] = $this->language->get('text_unpaid');
				$classname = str_replace('vq2-admin_controller_payment_', '', basename(__FILE__, '.php'));
				$this->data['classname'] = $classname;
				if (isset($this->request->post[$classname . '_paid_status'])) {
					$this->data['field_value'] = $this->request->post[$classname . '_paid_status'];
				} else {
					$this->data['field_value'] = $this->config->get($classname . '_paid_status');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				$this->getSubscriptionProducts();
			]]></search>
			<add><![CDATA[
				$this->data['entry_paid_status'] = $this->language->get('entry_paid_status');
				$this->data['text_paid'] = $this->language->get('text_paid');
				$this->data['text_unpaid'] = $this->language->get('text_unpaid');
				$classname = str_replace('vq2-admin_controller_payment_', '', basename(__FILE__, '.php'));
				$this->data['classname'] = $classname;
				if (isset($this->request->post[$classname . '_paid_status'])) {
					$this->data['field_value'] = $this->request->post[$classname . '_paid_status'];
				} else {
					$this->data['field_value'] = $this->config->get($classname . '_paid_status');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="1"><![CDATA[
				'entry'			=> $this->language->get('entry_sort_order'),
			]]></search>
			<add><![CDATA[
				$this->data['fields'][] = array(
					'entry' 		=> $this->language->get('entry_paid_status'),
					'type'			=> 'select',
					'name' 			=> $this->name . '_paid_status',
					'value' 		=> (isset($this->request->post[$this->name . '_paid_statust'])) ? $this->request->post[$this->name . '_paid_status'] : $this->config->get($this->name . '_paid_status'),
					'required' 		=> false,
					'options'		=> array(
						'0' => $this->language->get('text_unpaid'),
						'1' => $this->language->get('text_paid')
					)
				);
			]]></add>
		</operation>
	</file>

	<file name="admin/controller/sale/customer.php">
		<operation>
			<search position="before" index="2"><![CDATA[
				$this->data['breadcrumbs'] = array();
			]]></search>
			<add><![CDATA[
				if (isset($this->request->get['order_entry'])) {
					$url .= '&order_entry=1';
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$this->redirect($this->url->link('sale/customer', 'token=' . $this->session->data['token'] . $url, 'SSL'));
			]]></search>
			<add><![CDATA[
				if (isset($this->request->get['order_entry'])) {
					$url .= '&order_entry=1';
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$this->data['entry_customer_group'] = $this->language->get('entry_customer_group');
			]]></search>
			<add><![CDATA[
				$this->data['entry_additional_email'] = $this->language->get('entry_additional_email');
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if (isset($this->request->post['newsletter'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->request->post['additional_emails'])) {
					$this->data['additional_emails'] = $this->request->post['additional_emails'];
				} elseif (!empty($customer_info['additional_emails'])) {
					$this->data['additional_emails'] = unserialize($customer_info['additional_emails']);
				} else {
					$this->data['additional_emails'] = array();
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$this->data['heading_title'] = $this->language->get('heading_title');
			]]></search>
			<add><![CDATA[
				$this->data['agent_id'] = $this->user->getId();
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="2"><![CDATA[
				if ((utf8_strlen($this->request->post['email']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $this->request->post['email'])) {
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_require_email') || $this->request->post['email'] != "") {
					if ((utf8_strlen($this->request->post['email']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $this->request->post['email'])) {
						$this->error['email'] = $this->language->get('error_email');
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="2"><![CDATA[
				if ((strlen(utf8_decode($this->request->post['email'])) > 96) || (!preg_match('/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i', $this->request->post['email']))) {
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_require_email') || $this->request->post['email'] != "") {
					if ((strlen(utf8_decode($this->request->post['email'])) > 96) || (!preg_match('/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/i', $this->request->post['email']))) {
						$this->error['email'] = $this->language->get('error_email');
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="admin/controller/sale/order.php">
		<operation>
			<search position="after"><![CDATA[
				$total_data = $this->model_sale_order->getOrderTotals($order_id);
			]]></search>
			<add><![CDATA[
				$pos = strpos($order_info['store_url'], "admin/");
				if ($pos !== false) {
					$store_url = str_replace("/admin/", "", $order_info['store_url']);
				} else {
					$store_url = rtrim($order_info['store_url'], '/');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> rtrim($order_info['store_url'], '/'),
			]]></search>
			<add><![CDATA[
				=> $store_url,
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="1"><![CDATA[
				if ($order_info['invoice_no']) {
			]]></search>
			<add><![CDATA[
				if ($order_info['invoice_number'] != "") {
					$this->data['invoice_no'] = $order_info['invoice_number'];
				} elseif ($order_info['invoice_no']) {
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="2"><![CDATA[
				if ($order_info['invoice_no']) {
			]]></search>
			<add><![CDATA[
				if ($order_info['invoice_number'] != "") {
					$invoice_no = $order_info['invoice_number'];
				} elseif ($order_info['invoice_no']) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="5"><![CDATA[
				if($this->hasAction('payment/' . $order_info['payment_code'] . '/orderAction') == true){
			]]></search>
			<add><![CDATA[
				if (file_exists(DIR_APPLICATION . "controller/payment/" . $order_info['payment_code'])) {
					if ($this->hasAction('payment/' . $order_info['payment_code'] . '/orderAction') == true) {
						$this->data['payment_action'] = $this->getChild('payment/' . $order_info['payment_code'] . '/orderAction');
					} else {
						$this->data['payment_action'] = '';
					}
				} else {
					$this->data['payment_action'] = '';
				}
			]]></add>
		</operation>
	</file>

	<file name="admin/controller/setting/setting.php">
		<operation>
			<search position="after"><![CDATA[
				$this->data['heading_title'] = $this->language->get('heading_title');
			]]></search>
			<add><![CDATA[
				$this->data['text_auto_invoice'] = $this->language->get('text_auto_invoice');
				$this->data['text_disable_items'] = $this->language->get('text_disable_items');
				$this->data['text_save_and_close'] = $this->language->get('text_save_and_close');
				$this->data['text_save_and_stay'] = $this->language->get('text_save_and_stay');
				$this->data['text_sort_by_name'] = $this->language->get('text_sort_by_name');
				$this->data['text_sort_by_order'] = $this->language->get('text_sort_by_order');
				$this->data['entry_default_store'] = $this->language->get('entry_default_store');
				$this->data['entry_disabled_items'] = $this->language->get('entry_disabled_items');
				$this->data['entry_dis_user_group'] = $this->language->get('entry_dis_user_group');
				$this->data['entry_dis_order_button'] = $this->language->get('entry_dis_order_button');
				$this->data['entry_dis_quote_button'] = $this->language->get('entry_dis_quote_button');
				$this->data['entry_dis_customer_button'] = $this->language->get('entry_dis_customer_button');
				$this->data['entry_dis_dropship'] = $this->language->get('entry_dis_dropship');
				$this->data['entry_dis_order_options'] = $this->language->get('entry_dis_order_options');
				$this->data['entry_dis_order_credits'] = $this->language->get('entry_dis_order_credits');
				$this->data['entry_dis_optional_fees'] = $this->language->get('entry_dis_optional_fees');
				$this->data['entry_dis_order_history'] = $this->language->get('entry_dis_order_history');
				$this->data['entry_shipping_tax'] = $this->language->get('entry_shipping_tax');
				$this->data['entry_shipping_plus_tax'] = $this->language->get('entry_shipping_plus_tax');
				$this->data['entry_subtotal_plus_tax'] = $this->language->get('entry_subtotal_plus_tax');
				$this->data['entry_product_form_cols'] = $this->language->get('entry_product_form_cols');
				$this->data['entry_order_list_font'] = $this->language->get('entry_order_list_font');
				$this->data['entry_quote_order_status'] = $this->language->get('entry_quote_order_status');
				$this->data['entry_optional_fees_tax'] = $this->language->get('entry_optional_fees_tax');
				$this->data['entry_hide_zones'] = $this->language->get('entry_hide_zones');
				$this->data['entry_zero_options'] = $this->language->get('entry_zero_options');
				$this->data['entry_product_sort'] = $this->language->get('entry_product_sort');
				$this->data['entry_disabled_products'] = $this->language->get('entry_disabled_products');
				$this->data['entry_zero_qty_products'] = $this->language->get('entry_zero_qty_products');
				$this->data['entry_option_popup'] = $this->language->get('entry_option_popup');
				$this->data['entry_product_name_field'] = $this->language->get('entry_product_name_field');
				$this->data['entry_product_line_tax'] = $this->language->get('entry_product_line_tax');
				$this->data['entry_product_price_tax'] = $this->language->get('entry_product_price_tax');
				$this->data['entry_product_images'] = $this->language->get('entry_product_images');
				$this->data['entry_product_popups'] = $this->language->get('entry_product_popups');
				$this->data['entry_show_coupon'] = $this->language->get('entry_show_coupon');
				$this->data['entry_show_voucher'] = $this->language->get('entry_show_voucher');
				$this->data['entry_show_cusref'] = $this->language->get('entry_show_cusref');
				$this->data['entry_show_po'] = $this->language->get('entry_show_po');
				$this->data['entry_show_taxexempt'] = $this->language->get('entry_show_taxexempt');
				$this->data['entry_show_optional'] = $this->language->get('entry_show_optional');
				$this->data['entry_show_currency'] = $this->language->get('entry_show_currency');
				$this->data['entry_show_language'] = $this->language->get('entry_show_language');
				$this->data['entry_show_affiliates'] = $this->language->get('entry_show_affiliates');
				$this->data['entry_show_invoice'] = $this->language->get('entry_show_invoice');
				$this->data['entry_show_order_date'] = $this->language->get('entry_show_order_date');
				$this->data['entry_show_cart_weight'] = $this->language->get('entry_show_cart_weight');
				$this->data['entry_auto_invoice'] = $this->language->get('entry_auto_invoice');
				$this->data['entry_show_missing'] = $this->language->get('entry_show_missing');
				$this->data['entry_require_email'] = $this->language->get('entry_require_email');
				$this->data['entry_require_shipping'] = $this->language->get('entry_require_shipping');
				$this->data['entry_require_telephone'] = $this->language->get('entry_require_telephone');
				$this->data['entry_quote_subtract'] = $this->language->get('entry_quote_subtract');
				$this->data['entry_color_code_totals'] = $this->language->get('entry_color_code_totals');
				$this->data['entry_notify_default'] = $this->language->get('entry_notify_default');
				$this->data['entry_save_close'] = $this->language->get('entry_save_close');
				$this->data['entry_disable_dropdowns'] = $this->language->get('entry_disable_dropdowns');
				$this->data['entry_hide_orders'] = $this->language->get('entry_hide_orders');
				$this->data['entry_hide_cheque'] = $this->language->get('entry_hide_cheque');
				$this->data['entry_order_list_cols'] = $this->language->get('entry_order_list_cols');
				$this->data['entry_cash_payment'] = $this->language->get('entry_cash_payment');
				$this->data['entry_cc_offline_payment'] = $this->language->get('entry_cc_offline_payment');
				$this->data['entry_pending_payment'] = $this->language->get('entry_pending_payment');
				$this->data['entry_pp_link_payment'] = $this->language->get('entry_pp_link_payment');
				$this->data['entry_button_link'] = $this->language->get('entry_button_link');
				$this->data['entry_choose_button'] = $this->language->get('entry_choose_button');
				$this->data['entry_packing_columns'] = $this->language->get('entry_packing_columns');
				$this->data['entry_search_contains'] = $this->language->get('entry_search_contains');
				$this->data['entry_export_order_fields'] = $this->language->get('entry_export_order_fields');
				$this->data['entry_export_firstlast'] = $this->language->get('entry_export_firstlast');
				$this->data['text_order_date'] = $this->language->get('text_order_date');
				$this->data['text_payment_date'] = $this->language->get('text_payment_date');
				$this->data['text_order_id'] = $this->language->get('text_order_id');
				$this->data['text_invoice_no'] = $this->language->get('text_invoice_no');
				$this->data['text_sales_agent'] = $this->language->get('text_sales_agent');
				$this->data['text_po'] = $this->language->get('text_po');
				$this->data['text_order_balance'] = $this->language->get('text_order_balance');
				$this->data['text_products'] = $this->language->get('text_products');
				$this->data['text_quantity'] = $this->language->get('text_quantity');
				$this->data['text_option'] = $this->language->get('text_option');
				$this->data['text_customer'] = $this->language->get('text_customer');
				$this->data['text_customer_id'] = $this->language->get('text_customer_id');
				$this->data['text_customer_email'] = $this->language->get('text_customer_email');
				$this->data['text_company'] = $this->language->get('text_company');
				$this->data['text_store'] = $this->language->get('text_store');
				$this->data['text_cart_weight'] = $this->language->get('text_cart_weight');
				$this->data['text_address'] = $this->language->get('text_address');
				$this->data['text_country'] = $this->language->get('text_country');
				$this->data['text_payment_method'] = $this->language->get('text_payment_method');
				$this->data['text_shipping_method'] = $this->language->get('text_shipping_method');
				$this->data['text_order_total'] = $this->language->get('text_order_total');
				$this->data['text_order_paid'] = $this->language->get('text_order_paid');
				$this->data['text_order_status'] = $this->language->get('text_order_status');
				$this->data['text_tracking'] = $this->language->get('text_tracking');
				$this->data['text_normal'] = $this->language->get('text_normal');
				$this->data['text_small'] = $this->language->get('text_small');
				$this->data['text_small2'] = $this->language->get('text_small2');
				$this->data['text_none'] = $this->language->get('text_none');
				$this->data['text_large'] = $this->language->get('text_large');
				$this->data['text_medium'] = $this->language->get('text_medium');
				$this->data['text_order_list'] = $this->language->get('text_order_list');
				$this->data['text_totals_settings'] = $this->language->get('text_totals_settings');
				$this->data['text_tax_settings'] = $this->language->get('text_tax_settings');
				$this->data['text_misc_settings'] = $this->language->get('text_misc_settings');
				$this->data['text_product_settings'] = $this->language->get('text_product_settings');
				$this->data['text_customer_settings'] = $this->language->get('text_customer_settings');
				$this->data['text_packing_settings'] = $this->language->get('text_packing_settings');
				$this->data['text_button'] = $this->language->get('text_button');
				$this->data['text_link'] = $this->language->get('text_link');
				$this->data['text_prod_location'] = $this->language->get('text_prod_location');
				$this->data['text_prod_sku'] = $this->language->get('text_prod_sku');
				$this->data['text_prod_upc'] = $this->language->get('text_prod_upc');
				$this->data['text_prod_stock'] = $this->language->get('text_prod_stock');
				$this->data['text_prod_tax'] = $this->language->get('text_prod_tax');
				$this->data['text_prod_wukcost'] = $this->language->get('text_prod_wukcost');
				$this->data['text_prod_cost'] = $this->language->get('text_prod_cost');
				$this->data['text_prod_ship'] = $this->language->get('text_prod_ship');
				$this->data['text_prod_weight'] = $this->language->get('text_prod_weight');
				$this->data['text_packing_image'] = $this->language->get('text_packing_image');
				$this->data['text_packing_sku'] = $this->language->get('text_packing_sku');
				$this->data['text_packing_upc'] = $this->language->get('text_packing_upc');
				$this->data['text_packing_location'] = $this->language->get('text_packing_location');
				$this->data['text_export_order_fields'] = $this->language->get('text_export_order_fields');
				$this->data['text_paid'] = $this->language->get('text_paid');
				$this->data['text_unpaid'] = $this->language->get('text_unpaid');
				$this->data['text_shipping'] = $this->language->get('text_shipping');
				$this->data['text_taxes'] = $this->language->get('text_taxes');
				$this->data['text_sub_total'] = $this->language->get('text_sub_total');
				$this->data['tab_order_entry'] = $this->language->get('tab_order_entry');
				$this->data['image_1'] = HTTP_IMAGE . "paypal_buynow.png";
				$this->data['image_2'] = HTTP_IMAGE . "paypal_paynow.gif";
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$this->template = 'setting/setting.tpl';
			]]></search>
			<add><![CDATA[
				$this->load->model('localisation/order_status');
				$this->data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();
				$this->load->model('setting/store');
				$this->data['stores'] = array();
				$this->data['stores'][] = array(
					'store_id'	=> 0,
					'name'		=> $this->config->get('config_name')
				);
				$store_results = $this->model_setting_store->getStores();
				if ($store_results) {
					foreach ($store_results as $store_result) {
						$this->data['stores'][] = array(
							'store_id'	=> $store_result['store_id'],
							'name'		=> $store_result['name']
						);
					}
				}
				$this->load->model('localisation/tax_class');
				$this->data['tax_classes'] = $this->model_localisation_tax_class->getTaxClasses();
				$this->load->model('sale/order_entry');
				$this->data['order_statuses'] = $this->model_sale_order_entry->getOrderStatuses();
				$this->load->model('user/user_group');
				$this->data['user_groups'] = $this->model_user_user_group->getUserGroups();
				if (isset($this->request->post['config_custom_shipping_tax_id'])) {
					$this->data['config_custom_shipping_tax_id'] = $this->request->post['config_custom_shipping_tax_id'];
				} else {
					$this->data['config_custom_shipping_tax_id'] = $this->config->get('config_custom_shipping_tax_id');
				}
				if (isset($this->request->post['config_shipping_plus_tax'])) {
					$this->data['config_shipping_plus_tax'] = $this->request->post['config_shipping_plus_tax'];
				} else {
					$this->data['config_shipping_plus_tax'] = $this->config->get('config_shipping_plus_tax');
				}
				if (isset($this->request->post['config_subtotal_plus_tax'])) {
					$this->data['config_subtotal_plus_tax'] = $this->request->post['config_subtotal_plus_tax'];
				} else {
					$this->data['config_subtotal_plus_tax'] = $this->config->get('config_subtotal_plus_tax');
				}
				if (isset($this->request->post['config_order_list_font'])) {
					$this->data['config_order_list_font'] = $this->request->post['config_order_list_font'];
				} else {
					$this->data['config_order_list_font'] = $this->config->get('config_order_list_font');
				}
				if (isset($this->request->post['config_quote_order_status'])) {
					$this->data['config_quote_order_status'] = $this->request->post['config_quote_order_status'];
				} elseif ($this->config->get('config_quote_order_status')) {
					$this->data['config_quote_order_status'] = $this->config->get('config_quote_order_status');
				} else {
					$this->data['config_quote_order_status'] = $this->config->get('config_order_status_id');
				}
				if (isset($this->request->post['config_optional_fees_tax_id'])) {
					$this->data['config_optional_fees_tax_id'] = $this->request->post['config_optional_fees_tax_id'];
				} else {
					$this->data['config_optional_fees_tax_id'] = $this->config->get('config_optional_fees_tax_id');
				}
				if (isset($this->request->post['config_zero_options'])) {
					$this->data['config_zero_options'] = $this->request->post['config_zero_options'];
				} else {
					$this->data['config_zero_options'] = $this->config->get('config_zero_options');
				}
				if (isset($this->request->post['config_hide_zones'])) {
					$this->data['config_hide_zones'] = $this->request->post['config_hide_zones'];
				} else {
					$this->data['config_hide_zones'] = $this->config->get('config_hide_zones');
				}
				if (isset($this->request->post['config_disabled_products'])) {
					$this->data['config_disabled_products'] = $this->request->post['config_disabled_products'];
				} else {
					$this->data['config_disabled_products'] = $this->config->get('config_disabled_products');
				}
				if (isset($this->request->post['config_option_popup'])) {
					$this->data['config_option_popup'] = $this->request->post['config_option_popup'];
				} else {
					$this->data['config_option_popup'] = $this->config->get('config_option_popup');
				}
				if (isset($this->request->post['config_product_line_tax'])) {
					$this->data['config_product_line_tax'] = $this->request->post['config_product_line_tax'];
				} else {
					$this->data['config_product_line_tax'] = $this->config->get('config_product_line_tax');
				}
				if (isset($this->request->post['config_search_contains'])) {
					$this->data['config_search_contains'] = $this->request->post['config_search_contains'];
				} else {
					$this->data['config_search_contains'] = $this->config->get('config_search_contains');
				}
				if (isset($this->request->post['config_product_price_tax'])) {
					$this->data['config_product_price_tax'] = $this->request->post['config_product_price_tax'];
				} else {
					$this->data['config_product_price_tax'] = $this->config->get('config_product_price_tax');
				}
				if (isset($this->request->post['config_product_sort'])) {
					$this->data['config_product_sort'] = $this->request->post['config_product_sort'];
				} else {
					$this->data['config_product_sort'] = $this->config->get('config_product_sort');
				}
				if (isset($this->request->post['config_oeproduct_name_field'])) {
					$this->data['config_oeproduct_name_field'] = $this->request->post['config_oeproduct_name_field'];
				} else {
					$this->data['config_oeproduct_name_field'] = $this->config->get('config_oeproduct_name_field');
				}
				if (isset($this->request->post['config_oeproduct_images'])) {
					$this->data['config_oeproduct_images'] = $this->request->post['config_oeproduct_images'];
				} else {
					$this->data['config_oeproduct_images'] = $this->config->get('config_oeproduct_images');
				}
				if (isset($this->request->post['config_oeproduct_popups_width'])) {
					$this->data['config_oeproduct_popups_width'] = $this->request->post['config_oeproduct_popups_width'];
				} else {
					$this->data['config_oeproduct_popups_width'] = $this->config->get('config_oeproduct_popups_width');
				}
				if (isset($this->request->post['config_oeproduct_popups_height'])) {
					$this->data['config_oeproduct_popups_height'] = $this->request->post['config_oeproduct_popups_height'];
				} else {
					$this->data['config_oeproduct_popups_height'] = $this->config->get('config_oeproduct_popups_height');
				}
				if (isset($this->request->post['config_show_coupon'])) {
					$this->data['config_show_coupon'] = $this->request->post['config_show_coupon'];
				} else {
					$this->data['config_show_coupon'] = $this->config->get('config_show_coupon');
				}
				if (isset($this->request->post['config_show_voucher'])) {
					$this->data['config_show_voucher'] = $this->request->post['config_show_voucher'];
				} else {
					$this->data['config_show_voucher'] = $this->config->get('config_show_voucher');
				}
				if (isset($this->request->post['config_show_custref'])) {
					$this->data['config_show_custref'] = $this->request->post['config_show_custref'];
				} else {
					$this->data['config_show_custref'] = $this->config->get('config_show_custref');
				}
				if (isset($this->request->post['config_show_po'])) {
					$this->data['config_show_po'] = $this->request->post['config_show_po'];
				} else {
					$this->data['config_show_po'] = $this->config->get('config_show_po');
				}
				if (isset($this->request->post['config_show_taxexempt'])) {
					$this->data['config_show_taxexempt'] = $this->request->post['config_show_taxexempt'];
				} else {
					$this->data['config_show_taxexempt'] = $this->config->get('config_show_taxexempt');
				}
				if (isset($this->request->post['config_auto_invoice'])) {
					$this->data['config_auto_invoice'] = $this->request->post['config_auto_invoice'];
				} else {
					$this->data['config_auto_invoice'] = $this->config->get('config_auto_invoice');
				}
				if (isset($this->request->post['config_show_optional'])) {
					$this->data['config_show_optional'] = $this->request->post['config_show_optional'];
				} else {
					$this->data['config_show_optional'] = $this->config->get('config_show_optional');
				}
				if (isset($this->request->post['config_show_currency'])) {
					$this->data['config_show_currency'] = $this->request->post['config_show_currency'];
				} else {
					$this->data['config_show_currency'] = $this->config->get('config_show_currency');
				}
				if (isset($this->request->post['config_show_language'])) {
					$this->data['config_show_language'] = $this->request->post['config_show_language'];
				} else {
					$this->data['config_show_language'] = $this->config->get('config_show_language');
				}
				if (isset($this->request->post['config_show_affiliates'])) {
					$this->data['config_show_affiliates'] = $this->config->get('config_show_affiliates');
				} else {
					$this->data['config_show_affiliates'] = $this->config->get('config_show_affiliates');
				}
				if (isset($this->request->post['config_show_invoice'])) {
					$this->data['config_show_invoice'] = $this->request->post['config_show_invoice'];
				} else {
					$this->data['config_show_invoice'] = $this->config->get('config_show_invoice');
				}
				if (isset($this->request->post['config_show_order_date'])) {
					$this->data['config_show_order_date'] = $this->request->post['config_show_order_date'];
				} else {
					$this->data['config_show_order_date'] = $this->config->get('config_show_order_date');
				}
				if (isset($this->request->post['config_notify_default'])) {
					$this->data['config_notify_default'] = $this->request->post['config_notify_default'];
				} else {
					$this->data['config_notify_default'] = $this->config->get('config_notify_default');
				}
				if (isset($this->request->post['config_show_cart_weight'])) {
					$this->data['config_show_cart_weight'] = $this->request->post['config_show_cart_weight'];
				} else {
					$this->data['config_show_cart_weight'] = $this->config->get('config_show_cart_weight');
				}
				if (isset($this->request->post['config_require_email'])) {
					$this->data['config_require_email'] = $this->request->post['config_require_email'];
				} else {
					$this->data['config_require_email'] = $this->config->get('config_require_email');
				}
				if (isset($this->request->post['config_require_shipping'])) {
					$this->data['config_require_shipping'] = $this->request->post['config_require_shipping'];
				} else {
					$this->data['config_require_shipping'] = $this->config->get('config_require_shipping');
				}
				if (isset($this->request->post['config_require_telephone'])) {
					$this->data['config_require_telephone'] = $this->request->post['config_require_telephone'];
				} else {
					$this->data['config_require_telephone'] = $this->config->get('config_require_telephone');
				}
				if (isset($this->request->post['config_show_missing'])) {
					$this->data['config_show_missing'] = $this->request->post['config_show_missing'];
				} else {
					$this->data['config_show_missing'] = $this->config->get('config_show_missing');
				}
				if (isset($this->request->post['config_color_code_totals'])) {
					$this->data['config_color_code_totals'] = $this->request->post['config_color_code_totals'];
				} else {
					$this->data['config_color_code_totals'] = $this->config->get('config_color_code_totals');
				}
				if (isset($this->request->post['config_quote_subtract'])) {
					$this->data['config_quote_subtract'] = $this->request->post['config_quote_subtract'];
				} else {
					$this->data['config_quote_subtract'] = $this->config->get('config_quote_subtract');
				}
				if (isset($this->request->post['config_disable_dropdowns'])) {
					$this->data['config_disable_dropdowns'] = $this->request->post['config_disable_dropdowns'];
				} else {
					$this->data['config_disable_dropdowns'] = $this->config->get('config_disable_dropdowns');
				}
				if (isset($this->request->post['config_button_link'])) {
					$this->data['config_button_link'] = $this->request->post['config_button_link'];
				} else {
					$this->data['config_button_link'] = $this->config->get('config_button_link');
				}
				if (isset($this->request->post['config_choose_button'])) {
					$this->data['config_choose_button'] = $this->request->post['config_choose_button'];
				} else {
					$this->data['config_choose_button'] = $this->config->get('config_choose_button');
				}
				if (isset($this->request->post['config_hide_orders'])) {
					$this->data['config_hide_orders'] = $this->request->post['config_hide_orders'];
				} else {
					$this->data['config_hide_orders'] = $this->config->get('config_hide_orders');
				}
				if (isset($this->request->post['config_hide_cheque'])) {
					$this->data['config_hide_cheque'] = $this->request->post['config_hide_cheque'];
				} else {
					$this->data['config_hide_cheque'] = $this->config->get('config_hide_cheque');
				}
				if (isset($this->request->post['config_order_entry_date'])) {
					$this->data['config_order_entry_date'] = $this->request->post['config_order_entry_date'];
				} else {
					$this->data['config_order_entry_date'] = $this->config->get('config_order_entry_date');
				}
				if (isset($this->request->post['config_order_entry_payment_date'])) {
					$this->data['config_order_entry_payment_date'] = $this->request->post['config_order_entry_payment_date'];
				} else {
					$this->data['config_order_entry_payment_date'] = $this->config->get('config_order_entry_payment_date');
				}
				if (isset($this->request->post['config_order_entry_id'])) {
					$this->data['config_order_entry_id'] = $this->request->post['config_order_entry_id'];
				} else {
					$this->data['config_order_entry_id'] = $this->config->get('config_order_entry_id');
				}
				if (isset($this->request->post['config_order_entry_sales_agent'])) {
					$this->data['config_order_entry_sales_agent'] = $this->request->post['config_order_entry_sales_agent'];
				} else {
					$this->data['config_order_entry_sales_agent'] = $this->config->get('config_order_entry_sales_agent');
				}
				if (isset($this->request->post['config_order_entry_products'])) {
					$this->data['config_order_entry_products'] = $this->request->post['config_order_entry_products'];
				} else {
					$this->data['config_order_entry_products'] = $this->config->get('config_order_entry_products');
				}
				if (isset($this->request->post['config_zero_qty_products'])) {
					$this->data['config_zero_qty_products'] = $this->request->post['config_zero_qty_products'];
				} else {
					$this->data['config_zero_qty_products'] = $this->config->get('config_zero_qty_products');
				}
				if (isset($this->request->post['config_order_entry_quantity'])) {
					$this->data['config_order_entry_quantity'] = $this->request->post['config_order_entry_quantity'];
				} else {
					$this->data['config_order_entry_quantity'] = $this->config->get('config_order_entry_quantity');
				}
				if (isset($this->request->post['config_order_entry_option'])) {
					$this->data['config_order_entry_option'] = $this->request->post['config_order_entry_option'];
				} else {
					$this->data['config_order_entry_option'] = $this->config->get('config_order_entry_option');
				}
				if (isset($this->request->post['config_order_entry_customer'])) {
					$this->data['config_order_entry_customer'] = $this->request->post['config_order_entry_customer'];
				} else {
					$this->data['config_order_entry_customer'] = $this->config->get('config_order_entry_customer');
				}
				if (isset($this->request->post['config_order_entry_customer_id'])) {
					$this->data['config_order_entry_customer_id'] = $this->request->post['config_order_entry_customer_id'];
				} else {
					$this->data['config_order_entry_customer_id'] = $this->config->get('config_order_entry_customer_id');
				}
				if (isset($this->request->post['config_order_entry_customer_email'])) {
					$this->data['config_order_entry_customer_email'] = $this->request->post['config_order_entry_customer_email'];
				} else {
					$this->data['config_order_entry_customer_email'] = $this->config->get('config_order_entry_customer_email');
				}
				if (isset($this->request->post['config_order_entry_company'])) {
					$this->data['config_order_entry_company'] = $this->request->post['config_order_entry_company'];
				} else {
					$this->data['config_order_entry_company'] = $this->config->get('config_order_entry_company');
				}
				if (isset($this->request->post['config_order_entry_weight'])) {
					$this->data['config_order_entry_weight'] = $this->request->post['config_order_entry_weight'];
				} else {
					$this->data['config_order_entry_weight'] = $this->config->get('config_order_entry_weight');
				}
				if (isset($this->request->post['config_order_entry_address'])) {
					$this->data['config_order_entry_address'] = $this->request->post['config_order_entry_address'];
				} else {
					$this->data['config_order_entry_address'] = $this->config->get('config_order_entry_address');
				}
				if (isset($this->request->post['config_order_entry_country'])) {
					$this->data['config_order_entry_country'] = $this->request->post['config_order_entry_country'];
				} else {
					$this->data['config_order_entry_country'] = $this->config->get('config_order_entry_country');
				}
				if (isset($this->request->post['config_order_entry_payment'])) {
					$this->data['config_order_entry_payment'] = $this->request->post['config_order_entry_payment'];
				} else {
					$this->data['config_order_entry_payment'] = $this->config->get('config_order_entry_payment');
				}
				if (isset($this->request->post['config_order_entry_shipping'])) {
					$this->data['config_order_entry_shipping'] = $this->request->post['config_order_entry_shipping'];
				} else {
					$this->data['config_order_entry_shipping'] = $this->config->get('config_order_entry_shipping');
				}
				if (isset($this->request->post['config_order_entry_total'])) {
					$this->data['config_order_entry_total'] = $this->request->post['config_order_entry_total'];
				} else {
					$this->data['config_order_entry_total'] = $this->config->get('config_order_entry_total');
				}
				if (isset($this->request->post['config_order_entry_store'])) {
					$this->data['config_order_entry_store'] = $this->request->post['config_order_entry_store'];
				} else {
					$this->data['config_order_entry_store'] = $this->config->get('config_order_entry_store');
				}
				if (isset($this->request->post['config_order_entry_balance'])) {
					$this->data['config_order_entry_balance'] = $this->request->post['config_order_entry_balance'];
				} else {
					$this->data['config_order_entry_balance'] = $this->config->get('config_order_entry_balance');
				}
				if (isset($this->request->post['config_order_entry_invoice'])) {
					$this->data['config_order_entry_invoice'] = $this->request->post['config_order_entry_invoice'];
				} else {
					$this->data['config_order_entry_invoice'] = $this->config->get('config_order_entry_invoice');
				}
				if (isset($this->request->post['config_order_entry_po'])) {
					$this->data['config_order_entry_po'] = $this->request->post['config_order_entry_po'];
				} else {
					$this->data['config_order_entry_po'] = $this->config->get('config_order_entry_po');
				}
				if (isset($this->request->post['config_order_entry_paid'])) {
					$this->data['config_order_entry_paid'] = $this->request->post['config_order_entry_paid'];
				} else {
					$this->data['config_order_entry_paid'] = $this->config->get('config_order_entry_paid');
				}
				if (isset($this->request->post['config_order_entry_status'])) {
					$this->data['config_order_entry_status'] = $this->request->post['config_order_entry_status'];
				} else {
					$this->data['config_order_entry_status'] = $this->config->get('config_order_entry_status');
				}
				if (isset($this->request->post['config_order_entry_save_close'])) {
					$this->data['config_order_entry_save_close'] = $this->request->post['config_order_entry_save_close'];
				} else {
					$this->data['config_order_entry_save_close'] = $this->config->get('config_order_entry_save_close');
				}
				if (isset($this->request->post['config_order_entry_tracking'])) {
					$this->data['config_order_entry_tracking'] = $this->request->post['config_order_entry_tracking'];
				} else {
					$this->data['config_order_entry_tracking'] = $this->config->get('config_order_entry_tracking');
				}
				if (isset($this->request->post['config_prod_location'])) {
					$this->data['config_prod_location'] = $this->request->post['config_prod_location'];
				} else {
					$this->data['config_prod_location'] = $this->config->get('config_prod_location');
				}
				if (isset($this->request->post['config_prod_sku'])) {
					$this->data['config_prod_sku'] = $this->request->post['config_prod_sku'];
				} else {
					$this->data['config_prod_sku'] = $this->config->get('config_prod_sku');
				}
				if (isset($this->request->post['config_prod_upc'])) {
					$this->data['config_prod_upc'] = $this->request->post['config_prod_upc'];
				} else {
					$this->data['config_prod_upc'] = $this->config->get('config_prod_upc');
				}
				if (isset($this->request->post['config_prod_stock'])) {
					$this->data['config_prod_stock'] = $this->request->post['config_prod_stock'];
				} else {
					$this->data['config_prod_stock'] = $this->config->get('config_prod_stock');
				}
				if (isset($this->request->post['config_prod_tax'])) {
					$this->data['config_prod_tax'] = $this->request->post['config_prod_tax'];
				} else {
					$this->data['config_prod_tax'] = $this->config->get('config_prod_tax');
				}
				if (isset($this->request->post['config_prod_ship'])) {
					$this->data['config_prod_ship'] = $this->request->post['config_prod_ship'];
				} else {
					$this->data['config_prod_ship'] = $this->config->get('config_prod_ship');
				}
				if (isset($this->request->post['config_prod_weight'])) {
					$this->data['config_prod_weight'] = $this->request->post['config_prod_weight'];
				} else {
					$this->data['config_prod_weight'] = $this->config->get('config_prod_weight');
				}
				if (isset($this->request->post['config_order_entry_default_store'])) {
					$this->data['config_order_entry_default_store'] = $this->request->post['config_order_entry_default_store'];
				} else {
					$oe_store_id = $this->config->get('config_order_entry_default_store');
					if ($oe_store_id) {
						$this->data['config_order_entry_default_store'] = $oe_store_id;
					} else {
						$this->data['config_order_entry_default_store'] = 0;
					}
				}
				$cost_query = $this->db->query("SHOW COLUMNS FROM " . DB_PREFIX . "product LIKE 'cost'");
				if ($cost_query->num_rows) {
					$this->data['prod_cost_field'] = 1;
					if (isset($this->request->post['config_prod_cost'])) {
						$this->data['config_prod_cost'] = $this->request->post['config_prod_cost'];
					} else {
						$this->data['config_prod_cost'] = $this->config->get('config_prod_cost');
					}
				}
				$wukcost_query = $this->db->query("SHOW COLUMNS FROM " . DB_PREFIX . "product LIKE 'wukcost'");
				if ($wukcost_query->num_rows) {
					$this->data['prod_wukcost_field'] = 1;
					if (isset($this->request->post['config_prod_wukcost'])) {
						$this->data['config_prod_wukcost'] = $this->request->post['config_prod_wukcost'];
					} else {
						$this->data['config_prod_wukcost'] = $this->config->get('config_prod_wukcost');
					}
				}
				if (isset($this->request->post['config_oeproduct_packimages'])) {
					$this->data['config_oeproduct_packimages'] = $this->request->post['config_oeproduct_packimages'];
				} else {
					$this->data['config_oeproduct_packimages'] = $this->config->get('config_oeproduct_packimages');
				}
				if (isset($this->request->post['config_packing_upc'])) {
					$this->data['config_packing_upc'] = $this->request->post['config_packing_upc'];
				} else {
					$this->data['config_packing_upc'] = $this->config->get('config_packing_upc');
				}
				if (isset($this->request->post['config_packing_sku'])) {
					$this->data['config_packing_sku'] = $this->request->post['config_packing_sku'];
				} else {
					$this->data['config_packing_sku'] = $this->config->get('config_packing_sku');
				}
				if (isset($this->request->post['config_packing_location'])) {
					$this->data['config_packing_location'] = $this->request->post['config_packing_location'];
				} else {
					$this->data['config_packing_location'] = $this->config->get('config_packing_location');
				}
				if (isset($this->request->post['config_dis_user_group'])) {
					$this->data['config_dis_user_group'] = $this->request->post['config_dis_user_group'];
				} else {
					$this->data['config_dis_user_group'] = $this->config->get('config_dis_user_group');
				}
				if (isset($this->request->post['config_dis_order_button'])) {
					$this->data['config_dis_order_button'] = $this->request->post['config_dis_order_button'];
				} else {
					$this->data['config_dis_order_button'] = $this->config->get('config_dis_order_button');
				}
				if (isset($this->request->post['config_dis_quote_button'])) {
					$this->data['config_dis_quote_button'] = $this->request->post['config_dis_quote_button'];
				} else {
					$this->data['config_dis_quote_button'] = $this->config->get('config_dis_quote_button');
				}
				if (isset($this->request->post['config_dis_customer_button'])) {
					$this->data['config_dis_customer_button'] = $this->request->post['config_dis_customer_button'];
				} else {
					$this->data['config_dis_customer_button'] = $this->config->get('config_dis_customer_button');
				}
				if (isset($this->request->post['config_dis_dropship'])) {
					$this->data['config_dis_dropship'] = $this->request->post['config_dis_dropship'];
				} else {
					$this->data['config_dis_dropship'] = $this->config->get('config_dis_dropship');
				}
				if (isset($this->request->post['config_dis_order_options'])) {
					$this->data['config_dis_order_options'] = $this->request->post['config_dis_order_options'];
				} else {
					$this->data['config_dis_order_options'] = $this->config->get('config_dis_order_options');
				}
				if (isset($this->request->post['config_dis_order_credits'])) {
					$this->data['config_dis_order_credits'] = $this->request->post['config_dis_order_credits'];
				} else {
					$this->data['config_dis_order_credits'] = $this->config->get('config_dis_order_credits');
				}
				if (isset($this->request->post['config_dis_optional_fees'])) {
					$this->data['config_dis_optional_fees'] = $this->request->post['config_dis_optional_fees'];
				} else {
					$this->data['config_dis_optional_fees'] = $this->config->get('config_dis_optional_fees');
				}
				if (isset($this->request->post['config_dis_order_history'])) {
					$this->data['config_dis_order_history'] = $this->request->post['config_dis_order_history'];
				} else {
					$this->data['config_dis_order_history'] = $this->config->get('config_dis_order_history');
				}
				$config_export_order_fields = $this->config->get('config_export_order_fields');
				if (isset($this->request->post['config_export_order_fields'])) {
					$this->data['config_export_order_fields'] = $this->request->post['config_export_order_fields'];
				} elseif (!empty($config_export_order_fields)) {
					$this->data['config_export_order_fields'] = $this->config->get('config_export_order_fields');
				} else {
					$this->data['config_export_order_fields'] = array();
				}
				$this->data['table_data'] = array();
				$query = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "order`");
				foreach ($query->rows as $result) {
					if ($result['Field'] != "optional_fees" && $result['Field'] != "recipients") {
						$this->data['table_data'][] = $result['Field'];
					}
				}
				$this->data['table_data'][] = 'shipping_cost';
				$this->data['table_data'][] = 'taxes';
				$this->data['table_data'][] = 'sub_total';
				$this->data['table_data'][] = 'products';
				if (isset($this->request->post['config_export_firstlast'])) {
					$this->data['config_export_firstlast'] = $this->request->post['config_export_firstlast'];
				} else {
					$this->data['config_export_firstlast'] = $this->config->get('config_export_firstlast');
				}
				if (isset($this->request->post['config_cash_order_status_id'])) {
					$this->data['config_cash_order_status_id'] = $this->request->post['config_cash_order_status_id'];
				} else {
					$this->data['config_cash_order_status_id'] = $this->config->get('config_cash_order_status_id');
				}
				if (isset($this->request->post['config_cash_paid_status'])) {
					$this->data['config_cash_paid_status'] = $this->request->post['config_cash_paid_status'];
				} else {
					$this->data['config_cash_paid_status'] = $this->config->get('config_cash_paid_status');
				}
				if (isset($this->request->post['config_cc_offline_order_status_id'])) {
					$this->data['config_cc_offline_order_status_id'] = $this->request->post['config_cc_offline_order_status_id'];
				} else {
					$this->data['config_cc_offline_order_status_id'] = $this->config->get('config_cc_offline_order_status_id');
				}
				if (isset($this->request->post['config_cc_offline_paid_status'])) {
					$this->data['config_cc_offline_paid_status'] = $this->request->post['config_cc_offline_paid_status'];
				} else {
					$this->data['config_cc_offline_paid_status'] = $this->config->get('config_cc_offline_paid_status');
				}
				if (isset($this->request->post['config_pending_order_status_id'])) {
					$this->data['config_pending_order_status_id'] = $this->request->post['config_pending_order_status_id'];
				} else {
					$this->data['config_pending_order_status_id'] = $this->config->get('config_pending_order_status_id');
				}
				if (isset($this->request->post['config_pending_paid_status'])) {
					$this->data['config_pending_paid_status'] = $this->request->post['config_pending_paid_status'];
				} else {
					$this->data['config_pending_paid_status'] = $this->config->get('config_pending_paid_status');
				}
				if (isset($this->request->post['config_pp_link_order_status_id'])) {
					$this->data['config_pp_link_order_status_id'] = $this->request->post['config_pp_link_order_status_id'];
				} else {
					$this->data['config_pp_link_order_status_id'] = $this->config->get('config_pp_link_order_status_id');
				}
				if (isset($this->request->post['config_pp_link_paid_status'])) {
					$this->data['config_pp_link_paid_status'] = $this->request->post['config_pp_link_paid_status'];
				} else {
					$this->data['config_pp_link_paid_status'] = $this->config->get('config_pp_link_paid_status');
				}
			]]></add>
		</operation>
	</file>

	<file name="admin/language/*/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['text_order_entry']                 = 'Order Entry System';
			]]></add>
		</operation>
	</file>

	<file name="admin/language/*/common/home.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['text_total_quotes']                 = 'Total Quotes:';
				$_['text_total_quotes_year']			= 'Total Quotes This Year:';
				$_['text_number_quotes']				= 'Number of Quotes:';
			]]></add>
		</operation>
	</file>

	<file name="admin/language/*/payment/*.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<ignoreif><![CDATA[
				Braintree Payment Gateway v156.4
			]]></ignoreif>
			<add><![CDATA[
				$_['entry_paid_status']		= 'Paid or Unpaid:';
				$_['text_paid']				= 'Paid';
				$_['text_unpaid'] 			= 'Unpaid';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				// General Settings
			]]></search>
			<add><![CDATA[
				$_['entry_paid_status']		= 'Paid or Unpaid:';
				$_['text_paid']				= 'Paid';
				$_['text_unpaid'] 			= 'Unpaid';
			]]></add>
		</operation>
	</file>

	<file name="admin/language/*/sale/customer.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['entry_additional_email']		= 'Additional Emails:<span class="help">Separate emails with a ,</span>';
			]]></add>
		</operation>
	</file>

	<file name="admin/language/*/setting/setting.php">
		<operation error="skip">
			<search position="before"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['text_disable_items']			= 'Disable Order Form Items by Customer Group';
				$_['text_sort_by_name']				= 'Sort by product name';
				$_['text_sort_by_order']			= 'Sort by position added to the order';
				$_['entry_default_store']			= 'Default Store:<span class="help">Select the default store to use when entering an order</span>';
				$_['entry_dis_user_group']			= 'User Group<span class="help">Select user group items will be disabled for</span>';
				$_['entry_disabled_items']			= 'Items to Disable:';
				$_['entry_dis_order_button']		= 'Create Order button';
				$_['entry_dis_quote_button']		= 'Create Quote button';
				$_['entry_dis_customer_button']		= 'New Customer button';
				$_['entry_dis_dropship']			= 'Dropship checkbox';
				$_['entry_dis_order_options']		= 'Order Options box';
				$_['entry_dis_order_credits']		= 'Order Credits box';
				$_['entry_dis_optional_fees']		= 'Optional Fees/Discounts box';
				$_['entry_dis_order_history']		= 'Order History box';
				$_['entry_order_list_cols']			= 'Order List Columns';
				$_['entry_order_list_font']			= 'Order List Font Size';
				$_['entry_quote_order_status']		= 'Order Status for Quotes';
				$_['entry_product_form_cols']		= 'Product Form Columns';
				$_['entry_shipping_tax']			= 'Custom Shipping Tax Class';
				$_['entry_shipping_plus_tax']		= 'Show Shipping Charges with tax';
				$_['entry_subtotal_plus_tax']		= 'Show Sub-Total Charges with tax';
				$_['entry_optional_fees_tax']		= 'Optional Fees Tax Class';
				$_['entry_show_coupon']				= 'Show Coupon box';
				$_['entry_show_voucher']			= 'Show Voucher box';
				$_['entry_show_cusref']				= 'Show Customer Reference box';
				$_['entry_show_po']					= 'Show Purchase Order box';
				$_['entry_show_taxexempt']			= 'Show Tax Exempt box';
				$_['entry_show_invoice']			= 'Show Invoice # box';
				$_['entry_show_order_date']			= 'Show Order Date box';
				$_['entry_show_optional']			= 'Show Optional Fee/Discount box';
				$_['entry_show_currency']			= 'Show Currency Selector box';
				$_['entry_show_language']			= 'Show Language Selector box';
				$_['entry_show_affiliates']			= 'Show Affiliates box';
				$_['entry_show_cart_weight']		= 'Show Cart Weight box';
				$_['entry_product_sort']			= 'Product Sorted by';
				$_['entry_disabled_products']		= 'Allow disabled products';
				$_['entry_product_name_field']		= 'Product Name Field Size';
				$_['entry_product_line_tax']		= 'Show Price + Tax: Product Total Line';
				$_['entry_product_price_tax']		= 'Show Price + Tax: Invoices';
				$_['entry_zero_options']			= 'Allow 0 qty options';
				$_['entry_option_popup']			= 'Hide Option Popup:<span class="help">Hide the option popup if none of the options are required</span>';
				$_['entry_zero_qty_products']		= 'Allow 0 qty products<span class="help">No = products with 0 qty will not be returned during autocomplete search, Yes = products with 0 qty will be returned by autocomplete search</span>';
				$_['entry_quote_subtract']			= 'Subtract Stock for Quote';
				$_['entry_product_images']			= 'Show Product Images (emails/invoices)';
				$_['entry_product_popups']			= 'Product Image Popup Width x Height:<span class="help">Max size is 400 x 400</span>';
				$_['entry_hide_zones']				= 'Hide Zone Drop-downs';
				$_['entry_require_email']			= 'Require Email';
				$_['entry_require_shipping']		= 'Require Shipping Address';
				$_['entry_require_telephone']		= 'Require Telephone';
				$_['entry_disable_dropdowns']		= 'Disable Customer Dropdowns';
				$_['entry_auto_invoice']			= 'Auto-generate Invoice #';
				$_['entry_save_close']				= 'Process/Save Button Behavior';
				$_['entry_show_missing']			= 'Show Missing Orders';
				$_['entry_color_code_totals']		= 'Color Code Order Totals';
				$_['entry_notify_default']			= 'Notify Customer Checkbox<br /><span class="help">Yes will start the order with the Notify customer checkbox checked</span>';
				$_['entry_hide_orders']				= 'Hide orders with this status';
				$_['entry_hide_cheque']				= 'Hide Cheque Payment on Storefront (if method enabled)';
				$_['entry_button_link']				= 'Text link or button (Quote and PayPal Email Link emails)';
				$_['entry_choose_button']			= 'Select which PayPal button to use (if using buttons)';
				$_['entry_packing_columns']			= 'Packing Slip Columns';
				$_['entry_search_contains']			= 'Autocomplete/Search:';
				$_['entry_export_order_fields']		= 'Order Table Fields:<span class="help">Choose the order table fields to appear on the exported order list</span>';
				$_['entry_export_firstlast']		= 'Combine Names:<span class="help">If checked, this will combine the first and last name as one column on export CSV</span>';
				$_['entry_cash_payment']			= 'Cash Payment:<span class="help">Choose whether payment method marks order as paid/unpaid and what order status to set</span>';
				$_['entry_cc_offline_payment']		= 'Offline CC Payment:<span class="help">Choose whether payment method marks order as paid/unpaid and what order status to set</span>';
				$_['entry_pending_payment']			= 'Pending Payment:<span class="help">Choose whether payment method marks order as paid/unpaid and what order status to set</span>';
				$_['entry_pp_link_payment']			= 'PayPal Link Payment:<span class="help">Choose whether payment method marks order as paid/unpaid and what order status to set</span>';
				$_['text_auto_invoice']				= 'Set to Yes to generate invoice numbers when you first print the invoice';
				$_['text_order_date']				= 'Order Date';
				$_['text_sales_agent']				= 'Sales Agent';
				$_['text_payment_date']				= 'Payment Date';
				$_['text_order_id']					= 'Order ID';
				$_['text_invoice_no']				= 'Invoice Number';
				$_['text_po']						= 'Purchase Order';
				$_['text_order_balance']			= 'Order Balance';
				$_['text_products']					= 'Product Name';
				$_['text_quantity']					= 'Product Quantity';
				$_['text_option']					= 'Product Options';
				$_['text_customer_email']			= 'Customer Email';
				$_['text_customer']					= 'Customer Name';
				$_['text_customer_id']				= 'Customer ID';
				$_['text_company']					= 'Company';
				$_['text_store']					= 'Store';
				$_['text_cart_weight']				= 'Cart Weight';
				$_['text_address']					= 'Delivery Address';
				$_['text_country']					= 'Delivery Country';
				$_['text_payment_method']			= 'Payment Method';
				$_['text_shipping_method']			= 'Shipping Method';
				$_['text_order_total']				= 'Order Total';
				$_['text_order_paid']				= 'Order Paid';
				$_['text_order_status']				= 'Order Status';
				$_['text_tracking']					= 'Tracking Number';
				$_['text_small']					= 'Small';
				$_['text_normal']					= 'Normal';
				$_['text_order_list']				= 'Order List Settings';
				$_['text_tax_settings']				= 'Tax Settings';
				$_['text_totals_settings']			= 'Totals Section Settings';
				$_['text_misc_settings']			= 'Miscellaneous Settings';
				$_['text_product_settings']			= 'Product Settings';
				$_['text_customer_settings']		= 'Customer Settings';
				$_['text_packing_settings']			= 'Packing Slip Settings';
				$_['text_button']					= 'Button';
				$_['text_link']						= 'Link';
				$_['text_prod_location']			= 'Location';
				$_['text_prod_sku']					= 'SKU';
				$_['text_prod_upc']					= 'UPC';
				$_['text_prod_stock']				= 'Stock Status';
				$_['text_prod_tax']					= 'Taxed checkbox';
				$_['text_prod_ship']				= 'Shipped checkbox';
				$_['text_prod_weight']				= 'Weight';
				$_['text_prod_cost']				= 'Cost';
				$_['text_prod_wukcost']				= 'WUKCost';
				$_['text_packing_image']			= 'Product Image';
				$_['text_packing_sku']				= 'SKU';
				$_['text_packing_upc']				= 'UPC';
				$_['text_packing_location']			= 'Location';
				$_['text_none']						= 'None';
				$_['text_large']					= 'Large (300x300)';
				$_['text_medium']					= 'Medium (200x200)';
				$_['text_small2']					= 'Small (100x100)';
				$_['text_export_order_fields']		= 'Order Table Export Fields';
				$_['text_save_and_close']			= 'Save and Close';
				$_['text_save_and_stay']			= 'Save and Keep Open';
				$_['text_paid']						= 'Paid';
				$_['text_unpaid']					= 'Unpaid';
				$_['text_shipping']					= 'Shipping Cost';
				$_['text_taxes']					= 'Taxes';
				$_['text_sub_total']				= 'Sub-Total';
				$_['tab_order_entry']				= 'Order Entry';
			]]></add>
		</operation>
	</file>

	<file name="admin/model/catalog/product.php">
		<search position="replace"><![CDATA[
			(int)$this->config->get('config_language_id')
		]]></search>
		<add><![CDATA[
			(isset($this->session->data['language_id']) ? (int)$this->session->data['language_id'] : (int)$this->config->get('config_language_id'))
		]]></add>
	</file>

	<file name="admin/model/sale/customer.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$default_query = $this->db->query("SELECT address_id FROM " . DB_PREFIX . "customer WHERE customer_id = '" . (int)$address_query->row['customer_id'] . "'");
			]]></search>
			<add><![CDATA[
				if ($address_id != 0) {
					$default_query = $this->db->query("SELECT address_id FROM " . DB_PREFIX . "customer WHERE customer_id = '" . (int)$address_query->row['customer_id'] . "'");
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$customer_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
				if (isset($data['store_id'])) {
					$store_id = $data['store_id'];
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				$this->db->query("UPDATE " . DB_PREFIX . "customer SET store_id = '" . (int)$store_id . "' WHERE customer_id = '" . (int)$customer_id . "'");
			]]></add>
		</operation>
		<operation>
			<search position="before" offset="2"><![CDATA[
				public function editCustomer($customer_id, $data) {
			]]></search>
			<add><![CDATA[
				return $customer_id;
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				email = '" . $this->db->escape($data['email']) . "',
			]]></search>
			<add><![CDATA[
				email = '" . $this->db->escape($data['email']) . "', additional_emails = '" . $this->db->escape(serialize($data['additional_emails'])) . "',
			]]></add>
		</operation>
	</file>

	<file name="admin/model/sale/order.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$sql .= " WHERE o.order_status_id > '0'";
			]]></search>
			<add><![CDATA[
				$sql .= " WHERE (o.order_status_id > '0' AND o.order_status_id != '" . (int)$this->config->get('config_quote_order_status') . "')";
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				os.name AS status
			]]></search>
			<add><![CDATA[
				oh.tracking_numbers, oh.tracking_url, os.name AS status, oh.order_history_id
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				public function addOrderHistory($order_id, $data) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_message']) && $this->session->data['payment_message'] != "") {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$data['order_status_id'] . "', notify = '0', comment = '" . $this->db->escape(strip_tags($this->session->data['payment_message'])) . "', date_added = NOW()");
				}
				unset($this->session->data['payment_message']);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$data['order_status_id'] . "', notify = '" . (isset($data['notify']) ? (int)$data['notify'] : 0) . "', comment = '" . $this->db->escape(strip_tags($data['comment'])) . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$data['order_status_id'] . "', tracking_url = '" . $this->db->escape($data['tracker_url']) . "', tracking_numbers = '" . $this->db->escape($data['tracking_numbers']) . "', notify = '" . (isset($data['notify']) ? (int)$data['notify'] : 0) . "', comment = '" . $this->db->escape($data['comment']) . "', date_added = NOW()");
				} else {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$data['order_status_id'] . "', notify = '" . (isset($data['notify']) ? (int)$data['notify'] : 0) . "', comment = '" . $this->db->escape(strip_tags($data['comment'])) . "', date_added = NOW()");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if ((isset($data['order_status_id']) && $data['order_status_id'] != $this->config->get('config_quote_order_status')) || (isset($order_query->row['order_status_id']) && $order_query->row['order_status_id'] != $this->config->get('config_quote_order_status')) || $this->config->get('config_quote_subtract')) {
					$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if ((isset($data['order_status_id']) && $data['order_status_id'] != $this->config->get('config_quote_order_status')) || (isset($order_query->row['order_status_id']) && $order_query->row['order_status_id'] != $this->config->get('config_quote_order_status')) || $this->config->get('config_quote_subtract')) {
					$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$order_option['product_option_value_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if ((isset($data['order_status_id']) && $data['order_status_id'] != $this->config->get('config_quote_order_status')) || (isset($order_query->row['order_status_id']) && $order_query->row['order_status_id'] != $this->config->get('config_quote_order_status')) || $this->config->get('config_quote_subtract')) {
					$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$order_option['product_option_value_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if ((isset($data['order_status_id']) && $data['order_status_id'] != $this->config->get('config_quote_order_status')) || (isset($order_query->row['order_status_id']) && $order_query->row['order_status_id'] != $this->config->get('config_quote_order_status')) || $this->config->get('config_quote_subtract')) {
					$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity + " . (int)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				public function getOrders($data = array()) {
			]]></search>
			<add><![CDATA[
				public function getOrders2($data = array()) {
					$results = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "order_status` LIKE 'background'");
					if ($results->num_rows) {
						$order_status_color = 1;
					}
					$sql = "SELECT o.order_id, o.order_status_id, CONCAT(o.firstname, ' ', o.lastname) AS customer, o.customer_id, o.store_id, o.payment_company, o.payment_country, o.payment_date, o.payment_method, o.payment_code, o.shipping_method, o.order_status_id, o.catalog_admin, o.purchase_order, o.po_number, o.invoice_no, o.email, o.shipping_address_1, o.shipping_address_2, o.shipping_city, o.shipping_zone, o.shipping_postcode, o.shipping_country, o.invoice_prefix, o.tracking_number, o.invoice_number, o.sales_agent, o.cart_weight, o.order_paid, o.order_refunded, (SELECT os.name FROM " . DB_PREFIX . "order_status os WHERE os.order_status_id = o.order_status_id AND os.language_id = '" . (int)$this->config->get('config_language_id') . "') AS status, o.total, o.currency_code, o.currency_value, o.transaction_id, ";
					if (isset($order_status_color)) {
						$sql .= "(SELECT os.background FROM " . DB_PREFIX . "order_status os WHERE os.order_status_id = o.order_status_id AND os.language_id = '" . (int)$this->config->get('config_language_id') . "') AS background, ";
					}
					$sql .= "o.date_added, o.date_modified FROM `" . DB_PREFIX . "order` o";
					if (!empty($data['filter_product'])) {
						$sql .= " LEFT JOIN " . DB_PREFIX . "order_product op ON (o.order_id = op.order_id)";
					}
					if (!empty($data['filter_order_status_id'])) {
						if ($data['filter_order_status_id'] == '-2') {
							$sql .= " WHERE o.order_status_id > '0'";
						} elseif ($data['filter_order_status_id'] == '-1') {
							$sql .= " WHERE o.order_status_id <= '0'";
						} else {
							$sql .= " WHERE o.order_status_id = '" . (int)$data['filter_order_status_id'] . "'";
						}
					} elseif ($this->config->get('config_show_missing')) {
						if ($this->config->get('config_hide_orders')) {
							$sql .= " WHERE (o.order_status_id >= '0' AND o.order_status_id != '" . (int)$this->config->get('config_hide_orders') . "')";
						} else {
							$sql .= " WHERE o.order_status_id >= '0'";
						}
					} else {
						if ($this->config->get('config_hide_orders')) {
							$sql .= " WHERE (o.order_status_id > '0' AND o.order_status_id != '" . (int)$this->config->get('config_hide_orders') . "')";
						} else {
							$sql .= " WHERE o.order_status_id > '0'";
						}
					}
					if (!empty($data['filter_po'])) {
						$sql .= " AND (LCASE(o.po_number) LIKE '" . $this->db->escape(strtolower($data['filter_po'])) . "%' || LCASE(o.purchase_order) LIKE '" . $this->db->escape(strtolower($data['filter_po'])) . "%')";
					}
					if (!empty($data['filter_order_id'])) {
						$sql .= " AND o.order_id = '" . (int)$data['filter_order_id'] . "'";
					}
					if (!empty($data['filter_invoice_no'])) {
						$sql .= " AND (CONCAT(o.invoice_prefix,'',o.invoice_no) LIKE '" . $this->db->escape($data['filter_invoice_no']) . "%' OR CONCAT(o.invoice_prefix,'',o.invoice_number) LIKE '" . $this->db->escape($data['filter_invoice_no']) . "%')";
					}
					if (!empty($data['filter_product'])) {
						$sql .= " AND LCASE(op.name) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_product'], 'UTF-8')) . "%'";
					}
					if (!empty($data['filter_address'])) {
						$sql .= " AND (LCASE(o.shipping_address_1) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_address'], 'UTF-8')) . "%' OR LCASE(o.shipping_address_2) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_address'], 'UTF-8')) . "%' OR LCASE(o.shipping_city) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_address'], 'UTF-8')) . "%' OR LCASE(o.shipping_zone) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_address'], 'UTF-8')) . "%')";
					}
					if (!empty($data['filter_customer'])) {
						$sql .= " AND (LCASE(o.firstname) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_customer'], 'UTF-8')) . "%' OR LCASE(o.lastname) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_customer'], 'UTF-8')) . "%' OR LCASE(CONCAT(o.firstname,' ',o.lastname)) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_customer'], 'UTF-8')) . "%')";
					}
					if (!empty($data['filter_payment'])) {
						$sql .= " AND LCASE(o.payment_method) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_payment'], 'UTF-8')) . "%'";
					}
					if (!empty($data['filter_customer_email'])) {
						$sql .= " AND LCASE(o.email) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_customer_email'], 'UTF-8')) . "%'";
					}
					if (!empty($data['filter_company'])) {
						$sql .= " AND LCASE(o.payment_company) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_company'], 'UTF-8')) . "%'";
					}
					if (isset($data['filter_customer_id']) && !empty($data['filter_customer_id'])) {
						$sql .= " AND o.customer_id = '" . (int)$data['filter_customer_id'] . "'";
					}
					if (isset($data['filter_purchase_order']) && !empty($data['filter_purchase_order'])) {
						$sql .= " AND LCASE(o.purchase_order ) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_purchase_order'], 'UTF-8')) . "%'";
					}
					if (isset($data['filter_shipping']) && !empty($data['filter_shipping'])) {
						if ($data['filter_shipping'] == "cship") {
							$sql .= " AND o.catalog_admin = 0 AND LCASE(o.shipping_method) != 'collect from store' AND o.payment_method != 'Quote'";
						} elseif ($data['filter_shipping'] == "ccoll") {
							$sql .= " AND o.catalog_admin = 0 AND LCASE(o.shipping_method) = 'collect from store' AND o.payment_method != 'Quote'";
						} elseif ($data['filter_shipping'] == "oeship") {
							$sql .= " AND o.catalog_admin = 1 AND LCASE(o.shipping_method) != 'collect from store' AND o.payment_method != 'Quote'";
						} elseif ($data['filter_shipping'] == "oecoll") {
							$sql .= " AND o.catalog_admin = 1 AND LCASE(o.shipping_method) = 'collect from store' AND o.payment_method != 'Quote'";
						} elseif ($data['filter_shipping'] == "quote") {
							$sql .= " AND o.payment_method = 'Quote'";
						} elseif ($data['filter_shipping'] == "allship") {
							$sql .= " AND LCASE(o.shipping_method) != 'collect from store' AND o.payment_method != 'Quote'";
						} else {
							$sql .= " AND LCASE(o.shipping_method) = 'collect from store' AND o.payment_method != 'Quote'";
						}
					}
					if (!empty($data['filter_start_date'])) {
						$sql .= " AND DATE(o.date_added) >= DATE('" . $this->db->escape($data['filter_start_date']) . "')";
					}
					if (!empty($data['filter_end_date'])) {
						$sql .= " AND DATE(o.date_added) <= DATE('" . $this->db->escape($data['filter_end_date']) . "')";
					}
					if (!empty($data['filter_start_payment_date'])) {
						$sql .= " AND FROM_UNIXTIME(o.payment_date, '%Y-%m-%d') >= '" . $this->db->escape($data['filter_start_payment_date']) . "'";
					}
					if (!empty($data['filter_end_payment_date'])) {
						$sql .= " AND FROM_UNIXTIME(o.payment_date, '%Y-%m-%d') <= '" . $this->db->escape($data['filter_end_payment_date']) . "'";
					}
					if (!empty($data['filter_start_total'])) {
						$sql .= " AND o.total >= '" . (float)$data['filter_start_total'] . "'";
					}
					if (!empty($data['filter_end_total'])) {
						$sql .= " AND o.total <= '" . (float)$data['filter_end_total'] . "'";
					}
					if (!empty($data['filter_country'])) {
						$sql .= " AND o.shipping_country LIKE '" . $this->db->escape($data['filter_country']) . "%'";
					}
					if (!empty($data['filter_paid'])) {
						if ($data['filter_paid'] == 1) {
							$sql .= " AND o.order_paid = '0'";
						} else {
							$sql .= " AND o.order_paid = '1'";
						}
					}
					if (!empty($data['filter_store'])) {
						$sql .= " AND o.store_id = '" . (int)$data['filter_store'] . "'";
					}
					$sort_data = array(
						'o.order_id',
						'customer',
						'status',
						'o.date_added',
						'o.date_modified',
						'o.total'
					);
					if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
						$sql .= " ORDER BY " . $data['sort'];
					} else {
						$sql .= " ORDER BY o.order_id";
					}
					if (isset($data['order']) && ($data['order'] == 'DESC')) {
						$sql .= " DESC";
					} else {
						$sql .= " ASC";
					}
					if (isset($data['start']) || isset($data['limit'])) {
						if ($data['start'] < 0) {
							$data['start'] = 0;
						}
						if ($data['limit'] < 1) {
							$data['limit'] = 20;
						}
						$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
					}
					$query = $this->db->query($sql);
					return $query->rows;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				=> $order_query->row['total'],
			]]></search>
			<add><![CDATA[
				'tax_exempt'			  => $order_query->row['tax_exempt'],
				'payment_address_id'	  => $order_query->row['payment_address_id'],
				'shipping_address_id'	  => $order_query->row['shipping_address_id'],
				'payment_company_id'	  => $order_query->row['payment_company_id'],
				'payment_tax_id'		  => $order_query->row['payment_tax_id'],
				'shipping_code'			  => $order_query->row['shipping_code'],
				'payment_code'			  => $order_query->row['payment_code'],
				'tax_custom_ship'		  => $order_query->row['tax_custom_ship'],
				'optional_fees'			  => (!empty($order_query->row['optional_fees'])) ? unserialize($order_query->row['optional_fees']) : '',
				'tax_override'			  => (!empty($order_query->row['tax_override'])) ? unserialize($order_query->row['tax_override']) : '',
				'custorderref'			  => $order_query->row['custorderref'],
				'po_number'				  => $order_query->row['po_number'],
				'payment_date'			  => $order_query->row['payment_date'],
				'order_paid'			  => $order_query->row['order_paid'],
				'sales_agent'			  => $order_query->row['sales_agent'],
				'recipients'			  => (!empty($order_query->row['recipients'])) ? unserialize($order_query->row['recipients']) : '',
				'check_number'			  => $order_query->row['check_number'],
				'check_date'			  => $order_query->row['check_date'],
				'bank_name'				  => $order_query->row['bank_name'],
				'purchase_order'		  => (isset($order_query->row['purchase_order']) ? $order_query->row['purchase_order'] : ''),
				'cart_weight'			  => $order_query->row['cart_weight'],
				'invoice_date'			  => $order_query->row['invoice_date'],
				'invoice_number'		  => $order_query->row['invoice_number'],
				'transaction_id'		  => $order_query->row['transaction_id'],
				'cc_last_4'				  => $order_query->row['cc_last_4'],
				'order_refunded'		  => $order_query->row['order_refunded'],
				'tracking_number'		  => $order_query->row['tracking_number'],
				'catalog_admin'			  => $order_query->row['catalog_admin'],
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT SUM(total) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0'");
			]]></search>
			<add><![CDATA[
				$query = $this->db->query("SELECT SUM(total) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND order_status_id != '" . (int)$this->config->get('config_quote_order_status') . "'");
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT SUM(total) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND YEAR(date_added) = '" . (int)$year . "'");
			]]></search>
			<add><![CDATA[
				$query = $this->db->query("SELECT SUM(total) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND order_status_id != '" . (int)$this->config->get('config_quote_order_status') . "' AND YEAR(date_added) = '" . (int)$year . "'");
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$sql .= " WHERE order_status_id > '0'";
			]]></search>
			<add><![CDATA[
				$sql .= " WHERE order_status_id > '0' AND order_status_id != '" . (int)$this->config->get('config_quote_order_status') . "'";
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				if (!empty($data['filter_order_id'])) {
			]]></search>
			<add><![CDATA[
				if (isset($data['filter_store'])) {
					$sql .= " AND o.store_id = '" . (int)$data['filter_store'] . "'";
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				if (isset($data['filter_order_id']) && !is_null($data['filter_order_id'])) {
			]]></search>
			<add><![CDATA[
				if (isset($data['filter_store'])) {
					$sql .= " AND o.store_id = '" . (int)$data['filter_store'] . "'";
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$message .= html_entity_decode($order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8') . "\n\n";
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$url = $order_info['store_url'];
					if (strpos($url, "admin")) {
						$url = str_replace("admin/", "", $url);
						$url = str_replace("admin", "", $url);
					}
					$message .= html_entity_decode($url . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8') . "\n\n";
				} else {
					$url = $order_info['store_url'];
					if (strpos($url, "admin")) {
						$url = str_replace("admin/", "", $url);
						$url = str_replace("admin", "", $url);
					}
					$message .= html_entity_decode($url . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8') . "\n\n";
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'invoice' => html_entity_decode($order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8'),
			]]></search>
			<add><![CDATA[
				'invoice' => html_entity_decode(str_replace('admin/', '', $order_info['store_url']) . 'index.php?route=account/order/info&order_id=' . $order_id, ENT_QUOTES, 'UTF-8'),
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				foreach($product_query->rows as $product) {
			]]></search>
			<add><![CDATA[
				$query = $this->db->query("SHOW TABLES LIKE '" . DB_PREFIX . "product_to_product'");
				if ($query->num_rows) {
					$p2p_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_to_product WHERE product_id = '" . (int)$product['product_id'] . "'");
					if ($p2p_query->num_rows) {
						foreach ($p2p_query->rows as $p2p_product) {
							$quantity = $p2p_product['quantity'] * $product['quantity'];
							if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
								$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity + " . (float)$quantity . ") WHERE product_id = '" . (int)$p2p_product['related_id'] . "'");
							}
						}
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$mail = new Mail();
			]]></search>
			<add><![CDATA[
				if ((!isset($this->session->data['customer_info']) && isset($order_info['email']) && $order_info['email'] != "") || (isset($this->session->data['customer_info']['email']) && $this->session->data['customer_info']['email'] != "") || (isset($data['recipients']) && !empty($data['recipients']))) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$mail->send();
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$mail->setFrom($this->config->get('config_email'));
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
					$mail->setFrom($this->session->data['store_config']['config_email']);
				} else {
					$mail->setFrom($this->config->get('config_email'));
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$mail->setFrom($store_settings_config['config_email']);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
					$mail->setFrom($this->session->data['store_config']['config_email']);
				} else {
					$mail->setFrom($store_settings_config['config_email']);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				=> $row['quantity'],
			]]></search>
			<add><![CDATA[
				'weight'			=> $row['weight'],
				'weight_class_id'	=> $row['weight_class_id'],
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_product_sort')) {
					$query = $this->db->query("SELECT o.* FROM " . DB_PREFIX . "order_product o WHERE o.order_id = '" . (int)$order_id . "' ORDER BY o.order_product_id");
				} else {
					$query = $this->db->query("SELECT o.* FROM " . DB_PREFIX . "order_product o WHERE o.order_id = '" . (int)$order_id . "' ORDER BY LCASE(o.name)");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT a.*, b.sku, b.location FROM " . DB_PREFIX . "order_product a LEFT JOIN " . DB_PREFIX . "product b ON a.product_id = b.product_id WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				$query = $this->db->query("SELECT a.*, b.sku, b.location FROM " . DB_PREFIX . "order_product a LEFT JOIN " . DB_PREFIX . "product b ON a.product_id = b.product_id WHERE order_id = '" . (int)$order_id . "' ORDER BY LCASE(name)");
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/common/header.tpl">
		<operation error="skip">
			<search position="after"><![CDATA[
				<?php MijoShop::get('base')->addHeader(JPATH_MIJOSHOP_OC . '/admin/view/stylesheet/stylesheet.css'); ?>
			]]></search>
			<add><![CDATA[
				<?php MijoShop::get('base')->addHeader(JPATH_MIJOSHOP_OC . '/admin/view/stylesheet/order_entry.css'); ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				<link rel="stylesheet" type="text/css" href="view/stylesheet/stylesheet.css" />
			]]></search>
			<add><![CDATA[
				<link rel="stylesheet" type="text/css" href="view/stylesheet/order_entry.css" />
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<script type="text/javascript" src="view/javascript/jquery/jquery-1.6.1.min.js"></script>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript" src="view/javascript/jquery/jquery-1.7.1.min.js"></script>
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				<li><a href="<?php echo $return; ?>"><?php echo $text_return; ?></a></li>
			]]></search>
			<add><![CDATA[
				<li><a href="<?php echo $order_entry; ?>"><?php echo $text_order_entry; ?></a></li>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/admin_theme/base5builder_circloid/common/header.tpl" error="skip">
		<operation>
			<search position="after"><![CDATA[
				<link type="text/css" href="view/stylesheet/admin_theme/base5builder_circloid/bootstrap.css" rel="stylesheet" />
			]]></search>
			<add><![CDATA[
				<link rel="stylesheet" type="text/css" href="view/stylesheet/order_entry.css" />
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				<li><a href="<?php echo $order; ?>"><?php echo $text_order; ?></a></li>
			]]></search>
			<add><![CDATA[
				<li><a href="<?php echo $order_entry; ?>"><?php echo $text_order_entry; ?></a></li>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/common/home.tpl">
		<operation error="skip">
			<search position="after" index="3"><![CDATA[
				</tr>
			]]></search>
			<add><![CDATA[
				<tr>
				  <td><?php echo $text_total_quotes; ?></td>
				  <td><?php echo $total_quotes; ?></td>
				</tr>
				<tr>
				  <td><?php echo $text_total_quotes_year; ?></td>
				  <td><?php echo $total_quotes_year; ?></td>
				</tr>
				<tr>
				  <td><?php echo $text_number_quotes; ?></td>
				  <td><?php echo $number_quotes; ?></td>
				</tr>
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				<?php echo $order['total']; ?>
			]]></search>
			<add><![CDATA[
				<?php if ($order['converted'] != $order['total']) { ?>
					<?php echo $order['total']; ?>&nbsp;&nbsp;( <?php echo $order['converted']; ?> )
				<?php } else { ?>
					<?php echo $order['total']; ?>
				<?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/payment/*.tpl">
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				</table>
			]]></search>
			<ignoreif><![CDATA[
				Braintree Payment Gateway v156.4
			]]></ignoreif>
			<add><![CDATA[
				<tr>
					<td><?php echo $entry_paid_status; ?></td>
					<td>
						<?php if ($field_value) { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" checked="checked" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" /><?php echo $text_unpaid; ?>
						<?php } else { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" checked="checked" /><?php echo $text_unpaid; ?>
						<?php } ?>
					</td>
				</tr>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="2"><![CDATA[
				</table>
			]]></search>
			<add><![CDATA[
				<tr>
					<td><?php echo $entry_paid_status; ?></td>
					<td>
						<?php if ($field_value) { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" checked="checked" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" /><?php echo $text_unpaid; ?>
						<?php } else { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" checked="checked" /><?php echo $text_unpaid; ?>
						<?php } ?>
					</td>
				</tr>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<label class="col-sm-2 control-label" for="input-order-status"><?php echo $entry_order_status; ?></label>
			]]></search>
			<add><![CDATA[
					<label class="col-sm-2 control-label" for="input-order-status"><?php echo $entry_paid_status; ?></label>
					<div class="col-sm-10">
						<?php if ($field_value) { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" checked="checked" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" /><?php echo $text_unpaid; ?>
						<?php } else { ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="1" /><?php echo $text_paid; ?>
							<input type="radio" name="<?php echo $classname; ?>_paid_status" value="0" checked="checked" /><?php echo $text_unpaid; ?>
						<?php } ?>
					</div>
				</div>
				<div class="form-group">
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/sale/customer_form.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<span class="required">*</span> <?php echo $entry_email; ?>
			]]></search>
			<add><![CDATA[
				<?php if ($this->config->get('config_require_email')) { ?>
					<span class="required">*</span> <?php echo $entry_email; ?>
				<?php } else { ?>
					<?php echo $entry_email; ?>
				<?php } ?>
				<input type="hidden" name="agent_id" value="<?php echo $agent_id; ?>" />
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				<td><?php echo $entry_customer_group; ?></td>
			]]></search>
			<add><![CDATA[
					<td><?php echo $entry_additional_email; ?></td>
					<td><textarea name="additional_emails" style="height: 90px; width: 550px;" /><?php if (!empty($additional_emails)) { echo $additional_emails; } ?></textarea></td>
				</tr>
				<tr>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/sale/customer_list.tpl">
		<operation>
			<search position="before" index="1"><![CDATA[
				<script type="text/javascript"><!--
			]]></search>
			<add><![CDATA[
				<script type="text/javascript"><!--
					<?php if (isset($this->request->get['order_entry'])) { ?>
						window.close();
					<?php } ?>
				//--></script>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/sale/order_invoice.tpl">
		<operation>
			<search position="before" offset="2"><![CDATA[
				</body>
			]]></search>
			<add><![CDATA[
				<?php if (isset($order['histories']) && $order['histories']) { ?>
					<table class="comment">
						<tr class="heading">
							<td><b><?php echo $column_history; ?></b></td>
						</tr>
						<tr>
							<table class="list">
								<?php foreach ($order['histories'] as $order_history) { ?>
									<tr>
										<td><?php echo $order_history['date']; ?></td>
										<td><?php echo $order_history['comment']; ?></td>
									</tr>
								<?php } ?>
							</table>
						</tr>
					</table>
				<?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/sale/order_list.tpl">
		<operation>
			<search position="after"><![CDATA[
				<?php foreach ($orders as $order) { ?>
			]]></search>
			<add><![CDATA[
				<?php if ($order['status'] != 'Quote') { ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="2"><![CDATA[
				<td class="center" colspan="8"><?php echo $text_no_results; ?></td>
			]]></search>
			<add><![CDATA[
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="3"><![CDATA[
				<td class="center" colspan="9"><?php echo $text_no_results; ?></td>
			]]></search>
			<add><![CDATA[
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="3"><![CDATA[
				<td class="center" colspan="11"><?php echo $text_no_results; ?></td>
			]]></search>
			<add><![CDATA[
				<?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="admin/view/template/setting/setting.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<a href="#tab-server"><?php echo $tab_server; ?></a>
			]]></search>
			<add><![CDATA[
				<a href="#tab-server"><?php echo $tab_server; ?></a><a href="#tab-order-entry"><?php echo $tab_order_entry; ?></a>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<?php echo $tab_server; ?></a></div>
			]]></search>
			<add><![CDATA[
				<?php echo $tab_server; ?></a><a href="#tab-order-entry"><?php echo $tab_order_entry; ?></a></div>
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				</form>
			]]></search>
			<add><![CDATA[
				<div id="tab-order-entry">
					<table class="form">
						<?php if (!empty($stores)) { ?>
							<tr>
								<td><?php echo $entry_default_store; ?></td>
								<td>
									<select name="config_order_entry_default_store">
										<?php foreach ($stores as $store) { ?>
											<?php if ($store['store_id'] == $config_order_entry_default_store) { ?>
												<option value="<?php echo $store['store_id']; ?>" selected="selected"><?php echo $store['name']; ?></option>
											<?php } else { ?>
												<option value="<?php echo $store['store_id']; ?>"><?php echo $store['name']; ?></option>
											<?php } ?>
										<?php } ?>
									</select>
								</td>
							</tr>
						<?php } ?>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_order_list; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_order_list_cols; ?></td>
							<td>
								<?php if (!empty($stores)) { ?>
									<?php if ($config_order_entry_store) { ?>
										<input type="checkbox" name="config_order_entry_store" value="1" checked="checked" />
									<?php } else { ?>
										<input type="checkbox" name="config_order_entry_store" value="1" />
									<?php } ?><?php echo $text_store; ?><br />
								<?php } ?>
								<?php if ($config_order_entry_date) { ?>
									<input type="checkbox" name="config_order_entry_date" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_date" value="1" />
								<?php } ?><?php echo $text_order_date; ?><br />
								<?php if ($config_order_entry_payment_date) { ?>
									<input type="checkbox" name="config_order_entry_payment_date" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_payment_date" value="1" />
								<?php } ?><?php echo $text_payment_date; ?><br />
								<?php if ($config_order_entry_id) { ?>
									<input type="checkbox" name="config_order_entry_id" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_id" value="1" />
								<?php } ?><?php echo $text_order_id; ?><br />
								<?php if ($config_order_entry_invoice) { ?>
									<input type="checkbox" name="config_order_entry_invoice" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_invoice" value="1" />
								<?php } ?><?php echo $text_invoice_no; ?><br />
								<?php if ($config_order_entry_sales_agent) { ?>
									<input type="checkbox" name="config_order_entry_sales_agent" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_sales_agent" value="1" />
								<?php } ?><?php echo $text_sales_agent; ?><br />
								<?php if ($config_order_entry_po) { ?>
									<input type="checkbox" name="config_order_entry_po" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_po" value="1" />
								<?php } ?><?php echo $text_po; ?><br />
								<?php if ($config_order_entry_products) { ?>
									<input type="checkbox" name="config_order_entry_products" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_products" value="1" />
								<?php } ?><?php echo $text_products; ?><br />
								<?php if ($config_order_entry_quantity) { ?>
									<input type="checkbox" name="config_order_entry_quantity" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_quantity" value="1" />
								<?php } ?><?php echo $text_quantity; ?><br />
								<?php if ($config_order_entry_option) { ?>
									<input type="checkbox" name="config_order_entry_option" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_option" value="1" />
								<?php } ?><?php echo $text_option; ?><br />
								<?php if ($config_order_entry_weight) { ?>
									<input type="checkbox" name="config_order_entry_weight" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_weight" value="1" />
								<?php } ?><?php echo $text_cart_weight; ?><br />
								<?php if ($config_order_entry_customer) { ?>
									<input type="checkbox" name="config_order_entry_customer" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_customer" value="1" />
								<?php } ?><?php echo $text_customer; ?><br />
								<?php if ($config_order_entry_customer_id) { ?>
									<input type="checkbox" name="config_order_entry_customer_id" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_customer_id" value="1" />
								<?php } ?><?php echo $text_customer_id; ?><br />
								<?php if ($config_order_entry_customer_email) { ?>
									<input type="checkbox" name="config_order_entry_customer_email" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_customer_email" value="1" />
								<?php } ?><?php echo $text_customer_email; ?><br />
								<?php if ($config_order_entry_company) { ?>
									<input type="checkbox" name="config_order_entry_company" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_company" value="1" />
								<?php } ?><?php echo $text_company; ?><br />
								<?php if ($config_order_entry_address) { ?>
									<input type="checkbox" name="config_order_entry_address" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_address" value="1" />
								<?php } ?><?php echo $text_address; ?><br />
								<?php if ($config_order_entry_country) { ?>
									<input type="checkbox" name="config_order_entry_country" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_country" value="1" />
								<?php } ?><?php echo $text_country; ?><br />
								<?php if ($config_order_entry_payment) { ?>
									<input type="checkbox" name="config_order_entry_payment" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_payment" value="1" />
								<?php } ?><?php echo $text_payment_method; ?><br />
								<?php if ($config_order_entry_shipping) { ?>
									<input type="checkbox" name="config_order_entry_shipping" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_shipping" value="1" />
								<?php } ?><?php echo $text_shipping_method; ?><br />
								<?php if ($config_order_entry_total) { ?>
									<input type="checkbox" name="config_order_entry_total" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_total" value="1" />
								<?php } ?><?php echo $text_order_total; ?><br />
								<?php if ($config_order_entry_balance) { ?>
									<input type="checkbox" name="config_order_entry_balance" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_balance" value="1" />
								<?php } ?><?php echo $text_order_balance; ?><br />
								<?php if ($config_order_entry_paid) { ?>
									<input type="checkbox" name="config_order_entry_paid" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_paid" value="1" />
								<?php } ?><?php echo $text_order_paid; ?><br />
								<?php if ($config_order_entry_status) { ?>
									<input type="checkbox" name="config_order_entry_status" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_status" value="1" />
								<?php } ?><?php echo $text_order_status; ?><br />
								<?php if ($config_order_entry_tracking) { ?>
									<input type="checkbox" name="config_order_entry_tracking" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_order_entry_tracking" value="1" />
								<?php } ?><?php echo $text_tracking; ?><br />
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_order_list_font; ?></td>
							<td>
								<select name="config_order_list_font">
									<?php if ($config_order_list_font == "small") { ?>
										<option value="small" selected="selected"><?php echo $text_small; ?></option>
										<option value="normal"><?php echo $text_normal; ?></option>
									<?php } else { ?>
										<option value="small"><?php echo $text_small; ?></option>
										<option value="normal" selected="selected"><?php echo $text_normal; ?></option>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_disable_items; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_dis_user_group; ?></td>
							<td>
								<select name="config_dis_user_group">
									<option value="0" selected="selected"><?php echo $text_none; ?></option>
									<?php foreach ($user_groups as $user_group) { ?>
										<?php if ($config_dis_user_group == $user_group['user_group_id']) { ?>
											<option value="<?php echo $user_group['user_group_id']; ?>" selected="selected"><?php echo $user_group['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $user_group['user_group_id']; ?>"><?php echo $user_group['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_disabled_items; ?></td>
							<td>
								<?php if ($config_dis_order_button) { ?>
									<input type="checkbox" value="1" name="config_dis_order_button" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_order_button"/>
								<?php } ?><?php echo $entry_dis_order_button; ?><br />
								<?php if ($config_dis_quote_button) { ?>
									<input type="checkbox" value="1" name="config_dis_quote_button" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_quote_button"/>
								<?php } ?><?php echo $entry_dis_quote_button; ?><br />
								<?php if ($config_dis_customer_button) { ?>
									<input type="checkbox" value="1" name="config_dis_customer_button" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_customer_button"/>
								<?php } ?><?php echo $entry_dis_customer_button; ?><br />
								<?php if ($config_dis_dropship) { ?>
									<input type="checkbox" value="1" name="config_dis_dropship" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_dropship"/>
								<?php } ?><?php echo $entry_dis_dropship; ?><br />
								<?php if ($config_dis_order_options) { ?>
									<input type="checkbox" value="1" name="config_dis_order_options" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_order_options"/>
								<?php } ?><?php echo $entry_dis_order_options; ?><br />
								<?php if ($config_dis_order_credits) { ?>
									<input type="checkbox" value="1" name="config_dis_order_credits" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_order_credits"/>
								<?php } ?><?php echo $entry_dis_order_credits; ?><br />
								<?php if ($config_dis_order_history) { ?>
									<input type="checkbox" value="1" name="config_dis_order_history" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_order_history"/>
								<?php } ?><?php echo $entry_dis_order_history; ?><br />
								<?php if ($config_dis_optional_fees) { ?>
									<input type="checkbox" value="1" name="config_dis_optional_fees" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_dis_optional_fees"/>
								<?php } ?><?php echo $entry_dis_optional_fees; ?><br />
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_export_order_fields; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_export_order_fields; ?></td>
							<td>
								<?php foreach ($table_data as $table) { ?>
									<?php if (in_array($table, $config_export_order_fields)) { ?>
										<div style="float: left; width: 200px;"><input type="checkbox" name="config_export_order_fields[]" value="<?php echo $table; ?>" checked="checked" /><?php echo $table; ?></div>
									<?php } else { ?>
										<div style="float: left; width: 200px;"><input type="checkbox" name="config_export_order_fields[]" value="<?php echo $table; ?>" /><?php echo $table; ?></div>
									<?php } ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_export_firstlast; ?></td>
							<td>
								<?php if ($config_export_firstlast) { ?>
									<input type="checkbox" value="1" name="config_export_firstlast" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" value="1" name="config_export_firstlast" />
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_tax_settings; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_shipping_tax; ?></td>
							<td>
								<select name="config_custom_shipping_tax_id">
									<option value="0" selected="selected"><?php echo $text_none; ?></option>
									<?php if ($tax_classes) { ?>
										<?php foreach ($tax_classes as $tax_class) { ?>
											<?php if ($tax_class['tax_class_id'] == $config_custom_shipping_tax_id) { ?>
												<option value="<?php echo $tax_class['tax_class_id']; ?>" selected="selected"><?php echo $tax_class['title']; ?></option>
											<?php } else { ?>
												<option value="<?php echo $tax_class['tax_class_id']; ?>"><?php echo $tax_class['title']; ?></option>
											<?php } ?>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_shipping_plus_tax; ?></td>
							<td>
								<?php if ($config_shipping_plus_tax == 1) { ?>
									<input type="radio" name="config_shipping_plus_tax" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_shipping_plus_tax" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_shipping_plus_tax" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_shipping_plus_tax" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_subtotal_plus_tax; ?></td>
							<td>
								<?php if ($config_subtotal_plus_tax == 1) { ?>
									<input type="radio" name="config_subtotal_plus_tax" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_subtotal_plus_tax" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_subtotal_plus_tax" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_subtotal_plus_tax" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_optional_fees_tax; ?></td>
							<td>
								<select name="config_optional_fees_tax_id">
									<option value="0" selected="selected"><?php echo $text_none; ?></option>
									<?php if ($tax_classes) { ?>
										<?php foreach ($tax_classes as $tax_class) { ?>
											<?php if ($tax_class['tax_class_id'] == $config_optional_fees_tax_id) { ?>
												<option value="<?php echo $tax_class['tax_class_id']; ?>" selected="selected"><?php echo $tax_class['title']; ?></option>
											<?php } else { ?>
												<option value="<?php echo $tax_class['tax_class_id']; ?>"><?php echo $tax_class['title']; ?></option>
											<?php } ?>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_totals_settings; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_show_order_date; ?></td>
							<td>
								<?php if ($config_show_order_date == 1) { ?>
									<input type="radio" name="config_show_order_date" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_order_date" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_order_date" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_order_date" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_invoice; ?></td>
							<td>
								<?php if ($config_show_invoice == 1) { ?>
									<input type="radio" name="config_show_invoice" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_invoice" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_invoice" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_invoice" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_po; ?></td>
							<td>
								<?php if ($config_show_po == 1) { ?>
									<input type="radio" name="config_show_po" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_po" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_po" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_po" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_cusref; ?></td>
							<td>
								<?php if ($config_show_custref == 1) { ?>
									<input type="radio" name="config_show_custref" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_custref" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_custref" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_custref" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_currency; ?></td>
							<td>
								<?php if ($config_show_currency == 1) { ?>
									<input type="radio" name="config_show_currency" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_currency" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_currency" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_currency" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_language; ?></td>
							<td>
								<?php if ($config_show_language == 1) { ?>
									<input type="radio" name="config_show_language" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_language" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_language" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_language" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_affiliates; ?></td>
							<td>
								<?php if ($config_show_affiliates == 1) { ?>
									<input type="radio" name="config_show_affiliates" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_affiliates" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_affiliates" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_affiliates" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_taxexempt; ?></td>
							<td>
								<?php if ($config_show_taxexempt == 1) { ?>
									<input type="radio" name="config_show_taxexempt" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_taxexempt" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_taxexempt" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_taxexempt" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_coupon; ?></td>
							<td>
								<?php if ($config_show_coupon == 1) { ?>
									<input type="radio" name="config_show_coupon" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_coupon" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_coupon" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_coupon" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_voucher; ?></td>
							<td>
								<?php if ($config_show_voucher == 1) { ?>
									<input type="radio" name="config_show_voucher" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_voucher" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_voucher" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_voucher" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_optional; ?></td>
							<td>
								<?php if ($config_show_optional == 1) { ?>
									<input type="radio" name="config_show_optional" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_optional" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_optional" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_optional" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_cart_weight; ?></td>
							<td>
								<?php if ($config_show_cart_weight == 1) { ?>
									<input type="radio" name="config_show_cart_weight" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_cart_weight" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_cart_weight" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_cart_weight" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_product_settings; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_product_form_cols; ?></td>
							<td>
								<?php if ($config_prod_location) { ?>
									<input type="checkbox" name="config_prod_location" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_location" value="1" />
								<?php } ?><?php echo $text_prod_location; ?><br />
								<?php if ($config_prod_sku) { ?>
									<input type="checkbox" name="config_prod_sku" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_sku" value="1" />
								<?php } ?><?php echo $text_prod_sku; ?><br />
								<?php if ($config_prod_upc) { ?>
									<input type="checkbox" name="config_prod_upc" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_upc" value="1" />
								<?php } ?><?php echo $text_prod_upc; ?><br />
								<?php if ($config_prod_stock) { ?>
									<input type="checkbox" name="config_prod_stock" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_stock" value="1" />
								<?php } ?><?php echo $text_prod_stock; ?><br />
								<?php if ($config_prod_tax) { ?>
									<input type="checkbox" name="config_prod_tax" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_tax" value="1" />
								<?php } ?><?php echo $text_prod_tax; ?><br />
								<?php if ($config_prod_ship) { ?>
									<input type="checkbox" name="config_prod_ship" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_ship" value="1" />
								<?php } ?><?php echo $text_prod_ship; ?><br />
								<?php if ($config_prod_weight) { ?>
									<input type="checkbox" name="config_prod_weight" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_prod_weight" value="1" />
								<?php } ?><?php echo $text_prod_weight; ?><br />
								<?php if (isset($prod_cost_field)) { ?>
									<?php if ($config_prod_cost) { ?>
										<input type="checkbox" name="config_prod_cost" value="1" checked="checked" />
									<?php } else { ?>
										<input type="checkbox" name="config_prod_cost" value="1" />
									<?php } ?>
								<?php } ?>
								<?php if (isset($prod_wukcost_field)) { ?>
									<?php if ($config_prod_wukcost) { ?>
										<input type="checkbox" name="config_prod_wukcost" value="1" checked="checked" />
									<?php } else { ?>
										<input type="checkbox" name="config_prod_wukcost" value="1" />
									<?php } ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_product_name_field; ?></td>
							<td><input type="text" name="config_oeproduct_name_field" value="<?php echo $config_oeproduct_name_field; ?>" size="3" /></td>
						</tr>
						<tr>
							<td><?php echo $entry_product_sort; ?></td>
							<td>
								<select name="config_product_sort">
									<?php if ($config_product_sort) { ?>
										<option value="0"><?php echo $text_sort_by_name; ?></option>
										<option value="1" selected="selected"><?php echo $text_sort_by_order; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_sort_by_name; ?></option>
										<option value="1"><?php echo $text_sort_by_order; ?></option>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_disabled_products; ?></td>
							<td>
								<?php if ($config_disabled_products == 1) { ?>
									<input type="radio" name="config_disabled_products" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_disabled_products" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_disabled_products" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_disabled_products" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_zero_qty_products; ?></td>
							<td>
								<?php if ($config_zero_qty_products == 1) { ?>
									<input type="radio" name="config_zero_qty_products" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_zero_qty_products" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_zero_qty_products" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_zero_qty_products" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_option_popup; ?></td>
							<td>
								<?php if ($config_option_popup == 1) { ?>
									<input type="radio" name="config_option_popup" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_option_popup" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_option_popup" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_option_popup" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_product_line_tax; ?></td>
							<td>
								<?php if ($config_product_line_tax == 1) { ?>
									<input type="radio" name="config_product_line_tax" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_product_line_tax" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_product_line_tax" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_product_line_tax" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_product_price_tax; ?></td>
							<td>
								<?php if ($config_product_price_tax == 1) { ?>
									<input type="radio" name="config_product_price_tax" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_product_price_tax" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_product_price_tax" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_product_price_tax" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_zero_options; ?></td>
							<td>
								<?php if ($config_zero_options == 1) { ?>
									<input type="radio" name="config_zero_options" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_zero_options" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_zero_options" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_zero_options" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_quote_subtract; ?></td>
							<td>
								<?php if ($config_quote_subtract == 1) { ?>
									<input type="radio" name="config_quote_subtract" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_quote_subtract" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_quote_subtract" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_quote_subtract" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_product_popups; ?></td>
							<td>
								<input type="text" name="config_oeproduct_popups_width" value="<?php echo $config_oeproduct_popups_width; ?>" size="4" /> x <input type="text" name="config_oeproduct_popups_height" value="<?php echo $config_oeproduct_popups_height; ?>" size="4" />
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_product_images; ?></td>
							<td>
								<?php if ($config_oeproduct_images == 3) { ?>
									<input type="radio" name="config_oeproduct_images" value="3" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_images" value="3" />
								<?php } ?><?php echo $text_large; ?>
								<?php if ($config_oeproduct_images == 2) { ?>
									<input type="radio" name="config_oeproduct_images" value="2" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_images" value="2" />
								<?php } ?><?php echo $text_medium; ?>
								<?php if ($config_oeproduct_images == 1) { ?>
									<input type="radio" name="config_oeproduct_images" value="1" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_images" value="1" />
								<?php } ?><?php echo $text_small2; ?>
								<?php if ($config_oeproduct_images == 0) { ?>
									<input type="radio" name="config_oeproduct_images" value="0" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_images" value="0" />
								<?php } ?><?php echo $text_none; ?>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_customer_settings; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_hide_zones; ?></td>
							<td>
								<?php if ($config_hide_zones == 1) { ?>
									<input type="radio" name="config_hide_zones" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_hide_zones" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_hide_zones" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_hide_zones" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_require_email; ?></td>
							<td>
								<?php if ($config_require_email == 1) { ?>
									<input type="radio" name="config_require_email" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_email" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_require_email" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_email" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_require_shipping; ?></td>
							<td>
								<?php if ($config_require_shipping == 1) { ?>
									<input type="radio" name="config_require_shipping" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_shipping" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_require_shipping" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_shipping" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_require_telephone; ?></td>
							<td>
								<?php if ($config_require_telephone == 1) { ?>
									<input type="radio" name="config_require_telephone" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_telephone" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_require_telephone" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_require_telephone" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_packing_settings; ?></td>
						</tr>
						<tr>
							<td><?php echo $entry_packing_columns; ?></td>
							<td>
								<?php if ($config_oeproduct_packimages == 3) { ?>
									<input type="radio" name="config_oeproduct_packimages" value="3" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_packimages" value="3" />
								<?php } ?><?php echo $text_large; ?>
								<?php if ($config_oeproduct_packimages == 2) { ?>
									<input type="radio" name="config_oeproduct_packimages" value="2" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_packimages" value="2" />
								<?php } ?><?php echo $text_medium; ?>
								<?php if ($config_oeproduct_packimages == 1) { ?>
									<input type="radio" name="config_oeproduct_packimages" value="1" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_packimages" value="1" />
								<?php } ?><?php echo $text_small2; ?>
								<?php if ($config_oeproduct_packimages == 0) { ?>
									<input type="radio" name="config_oeproduct_packimages" value="0" checked="checked" />
								<?php } else { ?>
									<input type="radio" name="config_oeproduct_packimages" value="0" />
								<?php } ?><?php echo $text_none; ?><br />
								<?php if ($config_packing_sku) { ?>
									<input type="checkbox" name="config_packing_sku" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_packing_sku" value="1" />
								<?php } ?><?php echo $text_packing_sku; ?><br />
								<?php if ($config_packing_upc) { ?>
									<input type="checkbox" name="config_packing_upc" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_packing_upc" value="1" />
								<?php } ?><?php echo $text_packing_upc; ?><br />
								<?php if ($config_packing_location) { ?>
									<input type="checkbox" name="config_packing_location" value="1" checked="checked" />
								<?php } else { ?>
									<input type="checkbox" name="config_packing_location" value="1" />
								<?php } ?><?php echo $text_packing_location; ?>
							</td>
						</tr>
						<tr>
							<td style="height: 35px; font-size: 16px; font-weight: bold; background-color: #efefef;" colspan="2"><?php echo $text_misc_settings; ?></td>
						</tr>
						<?php if (isset($config_order_entry_logo)) { ?>
							<tr>
								<td><?php echo $entry_custom_logo; ?></td>
								<td>
									<div class="image">
										<img src="<?php echo $custom_logo_thumb; ?>" alt="" id="custom_logo_thumb" /><br />
										<input type="hidden" name="config_order_entry_logo" value="<?php echo $config_order_entry_logo; ?>" id="config_order_entry_logo" />
										<a onclick="image_upload('config_order_entry_logo', 'custom_logo_thumb');"><?php echo $text_browse; ?></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a onclick="$('#custom_logo_thumb').attr('src', '<?php echo $no_image; ?>'); $('#config_order_entry_logo').attr('value', '');"><?php echo $text_clear; ?></a>
									</div>
								</td>
							</tr>
						<?php } ?>
						<tr>
							<td><?php echo $entry_cash_payment; ?></td>
							<td>
								<select name="config_cash_paid_status">
									<?php if ($config_cash_paid_status) { ?>
										<option value="0"><?php echo $text_unpaid; ?></option>
										<option value="1" selected="selected"><?php echo $text_paid; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_unpaid; ?></option>
										<option value="1"><?php echo $text_paid; ?></option>
									<?php } ?>
								</select>
								<select name="config_cash_order_status_id" style="margin-left: 6px;">
									<?php foreach ($order_statuses as $order_status) { ?>
										<?php if ($order_status['order_status_id'] == $config_cash_order_status_id) { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_cc_offline_payment; ?></td>
							<td>
								<select name="config_cc_offline_paid_status">
									<?php if ($config_cc_offline_paid_status) { ?>
										<option value="0"><?php echo $text_unpaid; ?></option>
										<option value="1" selected="selected"><?php echo $text_paid; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_unpaid; ?></option>
										<option value="1"><?php echo $text_paid; ?></option>
									<?php } ?>
								</select>
								<select name="config_cc_offline_order_status_id" style="margin-left: 6px;">
									<?php foreach ($order_statuses as $order_status) { ?>
										<?php if ($order_status['order_status_id'] == $config_cc_offline_order_status_id) { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_pp_link_payment; ?></td>
							<td>
								<select name="config_pp_link_paid_status">
									<?php if ($config_pp_link_paid_status) { ?>
										<option value="0"><?php echo $text_unpaid; ?></option>
										<option value="1" selected="selected"><?php echo $text_paid; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_unpaid; ?></option>
										<option value="1"><?php echo $text_paid; ?></option>
									<?php } ?>
								</select>
								<select name="config_pp_link_order_status_id" style="margin-left: 6px;">
									<?php foreach ($order_statuses as $order_status) { ?>
										<?php if ($order_status['order_status_id'] == $config_pp_link_order_status_id) { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_pending_payment; ?></td>
							<td>
								<select name="config_pending_paid_status">
									<?php if ($config_pending_paid_status) { ?>
										<option value="0"><?php echo $text_unpaid; ?></option>
										<option value="1" selected="selected"><?php echo $text_paid; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_unpaid; ?></option>
										<option value="1"><?php echo $text_paid; ?></option>
									<?php } ?>
								</select>
								<select name="config_pending_order_status_id" style="margin-left: 6px;">
									<?php foreach ($order_statuses as $order_status) { ?>
										<?php if ($order_status['order_status_id'] == $config_pending_order_status_id) { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_quote_order_status; ?></td>
							<td>
								<select name="config_quote_order_status">
									<?php foreach ($order_statuses as $order_status) { ?>
										<?php if ($order_status['order_status_id'] == $config_quote_order_status) { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
										<?php } else { ?>
											<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_button_link; ?></td>
							<td>
								<select name="config_button_link">
									<?php if (!$config_button_link || $config_button_link == 0) { ?>
										<option value="0" selected="selected"><?php echo $text_link; ?></option>
										<option value="1"><?php echo $text_button; ?></option>
									<?php } else { ?>
										<option value="0"><?php echo $text_link; ?></option>
										<option value="1" selected="selected"><?php echo $text_button; ?></option>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_choose_button; ?></td>
							<td>
								<?php if ($config_choose_button) { ?>
									<input type="radio" name="config_choose_button" value="0" />
									<img style="border: none; vertical-align: middle; margin-bottom: 10px;" src="<?php echo $image_1; ?>" />
									<br />
									<input type="radio" name="config_choose_button" value="1" checked="checked" />
									<img style="border: none; vertical-align: middle;" src="<?php echo $image_2; ?>" />
								<?php } else { ?>
									<input type="radio" name="config_choose_button" value="0" checked="checked" />
									<img style="border: none; vertical-align: middle; margin-bottom: 10px;" src="<?php echo $image_1; ?>" />
									<br />
									<input type="radio" name="config_choose_button" value="1" />
									<img style="border: none; vertical-align: middle;" src="<?php echo $image_2; ?>" />
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_save_close; ?></td>
							<td>
								<select name="config_order_entry_save_close">
									<?php if ($config_order_entry_save_close) { ?>
										<option value="0"><?php echo $text_save_and_close; ?></option>
										<option value="1" selected="selected"><?php echo $text_save_and_stay; ?></option>
									<?php } else { ?>
										<option value="0" selected="selected"><?php echo $text_save_and_close; ?></option>
										<option value="1"><?php echo $text_save_and_stay; ?></option>
									<?php } ?>
								</select>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_search_contains; ?></td>
							<td>
								<?php if ($config_search_contains) { ?>
									<input type="radio" name="config_search_contains" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_search_contains" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_search_contains" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_search_contains" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_show_missing; ?></td>
							<td>
								<?php if ($config_show_missing == 1) { ?>
									<input type="radio" name="config_show_missing" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_missing" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_show_missing" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_show_missing" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_hide_cheque; ?></td>
							<td>
								<?php if ($config_hide_cheque == 1) { ?>
									<input type="radio" name="config_hide_cheque" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_hide_cheque" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_hide_cheque" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_hide_cheque" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_color_code_totals; ?></td>
							<td>
								<?php if ($config_color_code_totals == 1) { ?>
									<input type="radio" name="config_color_code_totals" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_color_code_totals" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_color_code_totals" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_color_code_totals" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_notify_default; ?></td>
							<td>
								<?php if ($config_notify_default == 1) { ?>
									<input type="radio" name="config_notify_default" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_notify_default" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_notify_default" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_notify_default" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_disable_dropdowns; ?></td>
							<td>
								<?php if ($config_disable_dropdowns == 1) { ?>
									<input type="radio" name="config_disable_dropdowns" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_disable_dropdowns" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_disable_dropdowns" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_disable_dropdowns" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_auto_invoice; ?></td>
							<td>
								<?php if ($config_auto_invoice == 1) { ?>
									<input type="radio" name="config_auto_invoice" value="1" checked="checked" /><?php echo $text_yes; ?>
									<input type="radio" name="config_auto_invoice" value="0" / ><?php echo $text_no; ?>
								<?php } else { ?>
									<input type="radio" name="config_auto_invoice" value="1" /><?php echo $text_yes; ?>
									<input type="radio" name="config_auto_invoice" value="0" checked="checked" / ><?php echo $text_no; ?>
								<?php } ?>
								<span style='padding-left: 30px;'><?php echo $text_auto_invoice; ?></span>
							</td>
						</tr>
						<tr>
							<td><?php echo $entry_hide_orders; ?></td>
							<td>
								<select name="config_hide_orders">
									<option value="0" selected="selected"><?php echo $text_none; ?></option>
									<?php if ($order_statuses) { ?>
										<?php foreach ($order_statuses as $order_status) { ?>
											<?php if ($order_status['order_status_id'] == $config_hide_orders) { ?>
												<option value="<?php echo $order_status['order_status_id']; ?>" selected="selected"><?php echo $order_status['name']; ?></option>
											<?php } else { ?>
												<option value="<?php echo $order_status['order_status_id']; ?>"><?php echo $order_status['name']; ?></option>
											<?php } ?>
										<?php } ?>
									<?php } ?>
								</select>
							</td>
						</tr>
					</table>
				</div>
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/account/logout.php">
		<operation>
			<search position="after"><![CDATA[
				unset($this->session->data['payment_methods']);
			]]></search>
			<add><![CDATA[
				unset($this->session->data['optional_fees']);
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/account/order.php">
		<operation>
			<search position="after"><![CDATA[
				$this->data['heading_title'] = $this->language->get('heading_title');
			]]></search>
			<add><![CDATA[
				$this->data['text_not_paid'] = $this->language->get('text_not_paid');
				$this->data['button_pay_now'] = $this->language->get('button_pay_now');
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$this->data['orders'][] = array(
			]]></search>
			<add><![CDATA[
				$not_paid = 0;
				if ($result['order_status_id'] == $this->config->get('config_quote_order_status')) {
					$not_paid = 1;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				'status'     => $result['status'],
			]]></search>
			<add><![CDATA[
				'not_paid'	 => $not_paid,
			]]></add>
		</operation>
		<operation>
			<search position="after" index="2"><![CDATA[
				$this->data['button_continue'] = $this->language->get('button_continue');
			]]></search>
			<add><![CDATA[
				$this->data['button_pay_now'] = $this->language->get('button_pay_now');
				$this->data['not_paid'] = 0;
				if ($order_info['order_status_id'] == $this->config->get('config_quote_order_status')) {
					$this->data['not_paid'] = 1;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['redirect'] = $this->url->link('account/order/info', 'order_id=' . $order_id, 'SSL');
			]]></search>
			<add><![CDATA[
				$this->session->data['redirect'] = $this->url->link('account/order/info', 'order_id=' . (isset($order_id) ? $order_id : $this->request->get['order_id']), 'SSL');
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['redirect'] = $this->url->link('account/order', 'order_id=' . $order_id, 'SSL');
			]]></search>
			<add><![CDATA[
				$this->session->data['redirect'] = $this->url->link('account/order', 'order_id=' . (isset($order_id) ? $order_id : $this->request->get['order_id']), 'SSL');
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				public function info() {
			]]></search>
			<add><![CDATA[
				public function payOrder() {
					$this->session->data['cart'] = array();
					$this->load->model('account/order');
					$this->load->model('catalog/product');
					$this->load->model('sale/order_entry');
					$this->session->data['payorder'] = $this->request->get['order_id'];
					$this->session->data['order_id'] = $this->request->get['order_id'];
					$order_info = $this->model_account_order->getOrder($this->request->get['order_id']);
					$this->session->data['currency'] = $order_info['currency_code'];
					if ($order_info['shipping_code'] == "custom.custom") {
						$order_totals = $this->model_account_order->getOrderTotals($this->request->get['order_id']);
						foreach ($order_totals as $order_total) {
							if ($order_total['code'] == "shipping") {
								if (isset($this->session->data['store_id'])) {
									$tax = $this->session->data['store_config']['config_tax'];
								} else {
									$tax = $this->config->get('config_tax');
								}
								$this->session->data['custom_shipping']['custom'] = array(
									'code'         => 'custom.custom',
									'title'        => $order_info['shipping_method'],
									'cost'         => $order_total['value'],
									'tax_class_id' => $this->config->get('config_custom_shipping_tax_id'),
									'text'         => $this->currency->format($this->tax->calculate($order_total['value'], $this->config->get('config_custom_shipping_tax_id'), $tax))
								);
								$this->session->data['shipping_method'] = $this->session->data['custom_shipping']['custom'];
							}
						}
					}
					$coupon_query = $this->model_account_order->getOrderCoupon($this->request->get['order_id']);
					if ($coupon_query) {
						$this->session->data['coupon'] = $coupon_query;
					}
					$voucher_query = $this->model_account_order->getOrderVoucher($this->request->get['order_id']);
					if ($voucher_query) {
						$this->session->data['voucher'] = $voucher_query;
					}
					if (!empty($order_info['optional_fees']) && is_array(unserialize($order_info['optional_fees']))) {
						$optional_fees = unserialize($order_info['optional_fees']);
						unset($this->session->data['optional_fees']);
						$n = 1;
						foreach ($optional_fees as $optional_fee) {
							if (isset($optional_fee['code'])) {
								$code = $optional_fee['code'];
							} else {
								$code = 'optional_fee_' . $n;
							}
							$n++;
							if (isset($optional_fee['sort_order'])) {
								$sort_order = $optional_fee['sort_order'];
							} else {
								if ($optional_fee['taxed'] == 1) {
									$sort_order = $this->config->get('tax_sort_order') - 1;
								} else {
									$sort_order = $this->config->get('total_sort_order') - 1;
								}
							}
							if (isset($optional_fee['cost'])) {
								$value = $optional_fee['cost'];
								$text = $this->currency->format($optional_fee['cost'], $order_info['currency_code']);
							} else {
								$value = $optional_fee['value'];
								$text = $optional_fee['text'];
							}
							if (isset($optional_fee['pre_tax'])) {
								$pre_tax = $optional_fee['pre_tax'];
							} else {
								$pre_tax = 0;
							}
							$this->session->data['optional_fees'][] = array(
								'id'			=> $n,
								'code'			=> $code,
								'taxed'			=> $optional_fee['taxed'],
								'tax_class_id'	=> $optional_fee['tax_class_id'],
								'pre_tax'		=> $pre_tax,
								'title'			=> $optional_fee['title'],
								'value'			=> $value,
								'text'			=> $text,
								'type'			=> $optional_fee['type'],
								'sort_order'	=> $sort_order,
								'shipping'		=> (isset($optional_fee['shipping']) ? $optional_fee['shipping'] : 0)
							);
						}
					}
					$order_products = $this->model_account_order->getOrderProducts($this->request->get['order_id']);
					foreach ($order_products as $order_product) {
						$product_exists = $this->model_catalog_product->getProduct($order_product['product_id']);
						if ($product_exists) {
							$product_id = $order_product['product_id'];
							$this->session->data['manual_price'] = $order_product['price'];
							$product_name = $this->model_sale_order_entry->getProductName($product_id);
							$product_model = $this->model_sale_order_entry->getModelNumber($product_id);
							$product_sku = $this->model_sale_order_entry->getSku($product_id);
							$product_upc = $this->model_sale_order_entry->getUpc($product_id);
							$product_weight = $this->model_sale_order_entry->getWeight($product_id);
							$product_location = $this->model_sale_order_entry->getLocation($product_id);
							if ($product_name != $order_product['name']) {
								$this->session->data['manual_name'] = $order_product['name'];
							}
							if ($product_model != $order_product['model']) {
								$this->session->data['manual_model'] = $order_product['model'];
							}
							$weight = $product_weight['weight'];
							$weight_id = $product_weight['weight_class_id'];
							if ($product_weight['weight'] != $order_product['weight']) {
								$this->session->data['manual_weight'] = $order_product['weight'] / $order_product['quantity'];
								$weight = $order_product['weight'];
							}
							if ($product_weight['weight_class_id'] != $order_product['weight_class_id']) {
								$this->session->data['manual_weight_id'] = $order_product['weight_class_id'];
								$weight_id = $order_product['weight_class_id'];
							}
							if ($product_sku != $order_product['sku']) {
								$this->session->data['manual_sku'] = $order_product['sku'];
							}
							if ($product_upc != $order_product['upc']) {
								$this->session->data['manual_upc'] = $order_product['upc'];
							}
							if ($product_location != $order_product['location']) {
								$this->session->data['manual_location'] = $order_product['location'];
							}
							if ($order_product['ship'] == 1) {
								$this->session->data['manual_ship'] = 1;
							}
							$options = array();
							$options_query = $this->model_account_order->getOrderOptions($this->request->get['order_id'], $order_product['order_product_id']);
							if ($options_query) {
								foreach ($options_query as $option_query) {
									if ($option_query['type'] == 'textarea' || $option_query['type'] == 'text' || $option_query['type'] == 'file' || $option_query['type'] == 'date' || $option_query['type'] == 'datetime' || $option_query['type'] == 'time') {
										$options[$option_query['product_option_id']] = $option_query['value'];
									} else {
										$options[$option_query['product_option_id']] = $option_query['product_option_value_id'];
									}
								}
							}
							if ($options) {
								if (version_compare(VERSION, '1.5.5.1', '>')) {
									$this->cart->add($product_id, $order_product['quantity'], $options, 0);
								} else {
									$this->cart->add($product_id, $order_product['quantity'], $options);
								}
							} else {
								if (version_compare(VERSION, '1.5.5.1', '>')) {
									$this->cart->add($product_id, $order_product['quantity'], array(), 0);
								} else {
									$this->cart->add($product_id, $order_product['quantity']);
								}
							}
						} else {
							if (isset($this->session->data['custom_product'])) {
								$this->session->data['custom_product']++;
								$product_id = $this->session->data['custom_product'];
							} else {
								$product_id = 99500;
								$this->session->data['custom_product'] = $product_id;
							}
							$this->session->data['manual_name'] = $order_product['name'];
							$this->session->data['manual_model'] = $order_product['model'];
							$this->session->data['manual_sku'] = $order_product['sku'];
							$this->session->data['manual_upc'] = $order_product['upc'];
							$this->session->data['manual_location'] = $order_product['location'];
							$this->session->data['manual_weight'] = $order_product['weight'];
							$this->session->data['manual_weight_id'] = $order_product['weight_class_id'];
							if (version_compare(VERSION, '1.5.5.1', '>')) {
								$this->cart->add($product_id, $order_product['quantity'], array(), 0);
							} else {
								$this->cart->add($product_id, $order_product['quantity']);
							}
							$tax_class_id = $this->model_sale_order_entry->getTaxClassId();
							if (isset($this->session->data['product_info'])) {
								$new_array = array();
								foreach ($this->session->data['product_info'] as $product_info) {
									$new_array[] = array(
										'key'				=> $product_info['key'],
										'product_id'		=> $product_info['product_id'],
										'name'				=> $product_info['name'],
										'model'				=> $product_info['model'],
										'location'			=> $product_info['location'],
										'sku'				=> $product_info['sku'],
										'upc'				=> $product_info['upc'],
										'quantity'			=> $product_info['quantity'],
										'price'				=> $product_info['price'],
										'total'				=> $product_info['total'],
										'tax'				=> $product_info['tax'],
										'shipping'			=> $product_info['shipping'],
										'tax_class_id'		=> $product_info['tax_class_id'],
										'weight'			=> $product_info['weight'],
										'weight_class_id'	=> $product_info['weight_class_id']
									);
								}
								$new_array[] = array(
									'key'				=> $this->session->data['key'],
									'product_id'		=> $product_id,
									'name'				=> $order_product['name'],
									'model'				=> $order_product['model'],
									'location'			=> $order_product['location'],
									'sku'				=> (isset($order_product['sku']) ? $order_product['sku'] : ''),
									'upc'				=> (isset($order_product['upc']) ? $order_product['upc'] : ''),
									'quantity'			=> $order_product['quantity'],
									'price'				=> $order_product['price'],
									'total'				=> $order_product['quantity'] * $order_product['price'],
									'tax'				=> 0,
									'shipping'			=> true,
									'tax_class_id'		=> $tax_class_id,
									'weight'			=> (isset($order_product['weight']) ? $order_product['weight'] : ''),
									'weight_class_id'	=> (isset($order_product['weight_id']) ? $order_product['weight_id'] : $this->config->get('config_weight_class_id'))
								);
								$this->session->data['product_info'] = $new_array;
								$new_array = null;
								unset($new_array);
							} else {
								$this->session->data['product_info'][] = array(
									'key'				=> $this->session->data['key'],
									'product_id'		=> $product_id,
									'name'				=> $order_product['name'],
									'model'				=> $order_product['model'],
									'location'			=> $order_product['location'],
									'sku'				=> (isset($order_product['sku']) ? $order_product['sku'] : ''),
									'upc'				=> (isset($order_product['upc']) ? $order_product['upc'] : ''),
									'quantity'			=> $order_product['quantity'],
									'price'				=> $order_product['price'],
									'total'				=> $order_product['quantity'] * $order_product['price'],
									'tax'				=> 0,
									'shipping'			=> true,
									'tax_class_id'		=> $tax_class_id,
									'weight'			=> (isset($order_product['weight']) ? $order_product['weight'] : ''),
									'weight_class_id'	=> (isset($order_product['weight_id']) ? $order_product['weight_id'] : $this->config->get('config_weight_class_id'))
								);
							}

						}
					}
					$this->redirect($this->url->link('checkout/cart'));
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/cart.php">
		<operation error="skip">
			<search position="replace" offset="5"><![CDATA[
				if (isset($this->request->post['coupon']) && $this->validateCoupon()) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['optional_fees']) && isset($this->request->post['coupon']) && $this->validateCoupon()) {
					$this->session->data['coupon'] = $this->request->post['coupon'];
					$this->session->data['success'] = $this->language->get('text_coupon');
					$this->redirect($this->url->link('checkout/cart'));
				} elseif (isset($this->session->data['optional_fees']) && isset($this->request->post['coupon']) && $this->validateCoupon()) {
					$discount_exists = false;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						if ($optional_fee['type'] == "m-amt" || $optional_fee['type'] == "m-per") {
							$this->error['warning'] = $this->language->get('error_discount_exists');
							$discount_exists = true;
							break;
						}
					}
					if (!$discount_exists) {
						$this->session->data['coupon'] = $this->request->post['coupon'];
						$this->session->data['success'] = $this->language->get('text_coupon');
						$this->redirect($this->url->link('checkout/cart'));
					}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->language->load('checkout/cart');
			]]></search>
			<add><![CDATA[
				if (!$this->cart->hasProducts()) {
					unset($this->session->data['payorder']);
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$results = $this->model_setting_extension->getExtensions('total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['optional_fees'])) {
					$s = 900;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						$results[] = array(
							'extension_id'	=> $s,
							'type'			=> 'total',
							'code'			=> $optional_fee['code']
						);
						$s++;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2" index="1"><![CDATA[
				foreach ($results as $key => $value) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $key => $value) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($value['code'] == $optional_fee['code']) {
								$sort_order[$key] = $optional_fee['sort_order'];
								$found = true;
							}
						}
					}
					if (!$found) {
						$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="14" index="1"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $result) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($result['code'] == $optional_fee['code']) {
								$sub_total = $this->cart->getSubTotal();
								if ($optional_fee['type'] == "p-amt" || $optional_fee['type'] == "p-per") {
									if ($optional_fee['type'] == "p-amt") {
										$amount = $optional_fee['value'];
									} elseif ($optional_fee['type'] == "p-per") {
										$amount = ($sub_total * $optional_fee['value']) / 100;
									}
									if ($optional_fee['taxed'] && $optional_fee['tax_class_id'] && ($optional_fee['type'] == 'p-amt' || $optional_fee['type'] == 'p-per')) {
										if (version_compare(VERSION, '1.5.1.2', '>')) {
											$tax_rates = $this->tax->getRates($amount, $optional_fee['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if (!isset($taxes[$tax_rate['tax_rate_id']])) {
													$taxes[$tax_rate['tax_rate_id']] = $tax_rate['amount'];
												} else {
													$taxes[$tax_rate['tax_rate_id']] += $tax_rate['amount'];
												}
											}
										} else {
											if (!isset($taxes[$optional_fee['tax_class_id']])) {
												$taxes[$optional_fee['tax_class_id']] = $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											} else {
												$taxes[$optional_fee['tax_class_id']] += $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											}
										}
									}
								} else {
									$amount = 0;
									if ($optional_fee['type'] == "m-amt") {
										$discount_min = min($optional_fee['value'], $sub_total);
									}
									foreach ($this->cart->getProducts() as $product) {
										$discount = 0;
										if ($optional_fee['type'] == "m-amt") {
											$discount = $discount_min * ($product['total'] / $sub_total);
										} elseif ($optional_fee['type'] == "m-per") {
											$discount = $product['total'] / 100 * $optional_fee['value'];
										}
										if ($product['tax_class_id'] && $optional_fee['pre_tax'] == 1) {
											$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if ($tax_rate['type'] == 'P') {
													$taxes[$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
												}
											}
										}
										$amount -= $discount;
									}
								}
								$total += $amount;
								$text = $this->currency->format($amount);
								$total_data[] = array(
									'code'			=> $optional_fee['code'],
									'title'			=> $optional_fee['title'],
									'text'			=> $text,
									'value'			=> $amount,
									'sort_order'	=> $optional_fee['sort_order']
								);
								$found = true;
							}
						}
					}
					if (!$found) {
						if ($result['code'] != "tb_banners") {
							$this->load->model('total/' . $result['code']);
							$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
						}
					}
					$sort_order = array();
					foreach ($total_data as $key => $value) {
						$sort_order[$key] = $value['sort_order'];
					}
					array_multisort($sort_order, SORT_ASC, $total_data);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $price,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $price),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $total,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $total),
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/quickcheckout/cart.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->language->load('quickcheckout/cart');
			]]></search>
			<add><![CDATA[
				if (!$this->cart->hasProducts()) {
					unset($this->session->data['payorder']);
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$results = $this->model_setting_extension->getExtensions('total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['optional_fees'])) {
					$s = 900;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						$results[] = array(
							'extension_id'	=> $s,
							'type'			=> 'total',
							'code'			=> $optional_fee['code']
						);
						$s++;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2" index="1"><![CDATA[
				foreach ($results as $key => $value) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $key => $value) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($value['code'] == $optional_fee['code']) {
								$sort_order[$key] = $optional_fee['sort_order'];
								$found = true;
							}
						}
					}
					if (!$found) {
						$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="14" index="1"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $result) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($result['code'] == $optional_fee['code']) {
								$sub_total = $this->cart->getSubTotal();
								if ($optional_fee['type'] == "p-amt" || $optional_fee['type'] == "p-per") {
									if ($optional_fee['type'] == "p-amt") {
										$amount = $optional_fee['value'];
									} elseif ($optional_fee['type'] == "p-per") {
										$amount = ($sub_total * $optional_fee['value']) / 100;
									}
									if ($optional_fee['taxed'] && $optional_fee['tax_class_id'] && ($optional_fee['type'] == 'p-amt' || $optional_fee['type'] == 'p-per')) {
										if (version_compare(VERSION, '1.5.1.2', '>')) {
											$tax_rates = $this->tax->getRates($amount, $optional_fee['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if (!isset($taxes[$tax_rate['tax_rate_id']])) {
													$taxes[$tax_rate['tax_rate_id']] = $tax_rate['amount'];
												} else {
													$taxes[$tax_rate['tax_rate_id']] += $tax_rate['amount'];
												}
											}
										} else {
											if (!isset($taxes[$optional_fee['tax_class_id']])) {
												$taxes[$optional_fee['tax_class_id']] = $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											} else {
												$taxes[$optional_fee['tax_class_id']] += $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											}
										}
									}
								} else {
									$amount = 0;
									if ($optional_fee['type'] == "m-amt") {
										$discount_min = min($optional_fee['value'], $sub_total);
									}
									foreach ($this->cart->getProducts() as $product) {
										$discount = 0;
										if ($optional_fee['type'] == "m-amt") {
											$discount = $discount_min * ($product['total'] / $sub_total);
										} elseif ($optional_fee['type'] == "m-per") {
											$discount = $product['total'] / 100 * $optional_fee['value'];
										}
										if ($product['tax_class_id'] && $optional_fee['pre_tax'] == 1) {
											$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if ($tax_rate['type'] == 'P') {
													$taxes[$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
												}
											}
										}
										$amount -= $discount;
									}
								}
								$total += $amount;
								$text = $this->currency->format($amount);
								$total_data[] = array(
									'code'			=> $optional_fee['code'],
									'title'			=> $optional_fee['title'],
									'text'			=> $text,
									'value'			=> $amount,
									'sort_order'	=> $optional_fee['sort_order']
								);
								$found = true;
							}
						}
					}
					if (!$found) {
						if ($result['code'] != "tb_banners") {
							$this->load->model('total/' . $result['code']);
							$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
						}
					}
					$sort_order = array(); 
					foreach ($total_data as $key => $value) {
						$sort_order[$key] = $value['sort_order'];
					}
					array_multisort($sort_order, SORT_ASC, $total_data);			
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $price,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $price),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $total,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $total),
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/simplecheckout_cart.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->language->load('checkout/simplecheckout');
			]]></search>
			<add><![CDATA[
				if (!$this->cart->hasProducts()) {
					unset($this->session->data['payorder']);
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/confirm.php">
		<operation>
			<search position="replace"><![CDATA[
				=> $product['price'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $product['price']),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $product['total'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $product['total']),
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['payment_method']['title'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					$data['payment_method'] = 'Quote';
				} elseif (isset($this->session->data['payment_method']['title'])) {
					$data['payment_method'] = $this->session->data['payment_method']['title'];
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['payment_method']['code'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					$data['payment_code'] = 'quote';
				} elseif (isset($this->session->data['payment_method']['code'])) {
					$data['payment_code'] = $this->session->data['payment_method']['code'];
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['payment_address_format'] = $payment_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_address_id'])) {
					$data['payment_address_id'] = $this->session->data['payment_address_id'];
				} else {
					$data['payment_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = $shipping_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$data['shipping_address_id'] = $this->session->data['shipping_address_id'];
				} else {
					$data['shipping_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = '';
			]]></search>
			<add><![CDATA[
				$data['shipping_address_id'] = '';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['ip'] = $this->request->server['REMOTE_ADDR'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['tax_exempt'])) {
					$data['tax_exempt'] = $this->session->data['tax_exempt'];
				} else {
					$data['tax_exempt'] = '';
				}
				$data['check_number'] = (isset($this->request->post['check_number']) ? $this->request->post['check_number'] : '');
				$data['bank_name'] = (isset($this->request->post['bank_name']) ? $this->request->post['bank_name'] : '');
				$data['check_date'] = (isset($this->request->post['check_date']) ? strtotime($this->request->post['check_date']) : '');
				$data['purchase_order'] = (isset($this->request->post['purchase_order']) ? $this->request->post['purchase_order'] : '');
				$data['po_number'] = (isset($this->request->post['po_number']) ? $this->request->post['po_number'] : '');
				$data['payment_date'] = (isset($this->request->post['payment_date']) ? $this->request->post['payment_date'] : 0);
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$results = $this->model_setting_extension->getExtensions('total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['optional_fees'])) {
					$s = 900;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						$results[] = array(
							'extension_id'	=> $s,
							'type'			=> 'total',
							'code'			=> $optional_fee['code']
						);
						$s++;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2" index="1"><![CDATA[
				foreach ($results as $key => $value) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $key => $value) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($value['code'] == $optional_fee['code']) {
								$sort_order[$key] = $optional_fee['sort_order'];
								$found = true;
							}
						}
					}
					if (!$found) {
						$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="6" index="1"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $result) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($result['code'] == $optional_fee['code']) {
								$sub_total = $this->cart->getSubTotal();
								if ($optional_fee['type'] == "p-amt" || $optional_fee['type'] == "p-per") {
									if ($optional_fee['type'] == "p-amt") {
										$amount = $optional_fee['value'];
									} elseif ($optional_fee['type'] == "p-per") {
										$amount = ($sub_total * $optional_fee['value']) / 100;
									}
									if ($optional_fee['taxed'] && $optional_fee['tax_class_id'] && ($optional_fee['type'] == 'p-amt' || $optional_fee['type'] == 'p-per')) {
										if (version_compare(VERSION, '1.5.1.2', '>')) {
											$tax_rates = $this->tax->getRates($amount, $optional_fee['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if (!isset($taxes[$tax_rate['tax_rate_id']])) {
													$taxes[$tax_rate['tax_rate_id']] = $tax_rate['amount'];
												} else {
													$taxes[$tax_rate['tax_rate_id']] += $tax_rate['amount'];
												}
											}
										} else {
											if (!isset($taxes[$optional_fee['tax_class_id']])) {
												$taxes[$optional_fee['tax_class_id']] = $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											} else {
												$taxes[$optional_fee['tax_class_id']] += $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											}
										}
									}
								} else {
									$amount = 0;
									if ($optional_fee['type'] == "m-amt") {
										$discount_min = min($optional_fee['value'], $sub_total);
									}
									foreach ($this->cart->getProducts() as $product) {
										$discount = 0;
										if ($optional_fee['type'] == "m-amt") {
											$discount = $discount_min * ($product['total'] / $sub_total);
										} elseif ($optional_fee['type'] == "m-per") {
											$discount = $product['total'] / 100 * $optional_fee['value'];
										}
										if ($product['tax_class_id'] && $optional_fee['pre_tax'] == 1) {
											$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if ($tax_rate['type'] == 'P') {
													$taxes[$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
												}
											}
										}
										$amount -= $discount;
									}
								}
								$total += $amount;
								$text = $this->currency->format($amount);
								$total_data[] = array(
									'code'			=> $optional_fee['code'],
									'title'			=> $optional_fee['title'],
									'text'			=> $text,
									'value'			=> $amount,
									'sort_order'	=> $optional_fee['sort_order']
								);
								$found = true;
							}
						}
					}
					if (!$found) {
						if ($result['code'] != "tb_banners") {
							$this->load->model('total/' . $result['code']);
							$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->create($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->create($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/quickcheckout/confirm.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				=> $product['price'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $product['price']),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $product['total'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $product['total']),
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['payment_method']['title'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					$data['payment_method'] = 'Quote';
				} elseif (isset($this->session->data['payment_method']['title'])) {
					$data['payment_method'] = $this->session->data['payment_method']['title'];
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['payment_method']['code'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					$data['payment_code'] = 'quote';
				} elseif (isset($this->session->data['payment_method']['code'])) {
					$data['payment_code'] = $this->session->data['payment_method']['code'];
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['payment_address_format'] = $payment_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_address_id'])) {
					$data['payment_address_id'] = $this->session->data['payment_address_id'];
				} else {
					$data['payment_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = $shipping_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$data['shipping_address_id'] = $this->session->data['shipping_address_id'];
				} else {
					$data['shipping_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = '';
			]]></search>
			<add><![CDATA[
				$data['shipping_address_id'] = '';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['ip'] = $this->request->server['REMOTE_ADDR'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['tax_exempt'])) {
					$data['tax_exempt'] = $this->session->data['tax_exempt'];
				} else {
					$data['tax_exempt'] = '';
				}
				$data['check_number'] = (isset($this->request->post['check_number']) ? $this->request->post['check_number'] : '');
				$data['bank_name'] = (isset($this->request->post['bank_name']) ? $this->request->post['bank_name'] : '');
				$data['check_date'] = (isset($this->request->post['check_date']) ? strtotime($this->request->post['check_date']) : '');
				$data['purchase_order'] = (isset($this->request->post['purchase_order']) ? $this->request->post['purchase_order'] : '');
				$data['po_number'] = (isset($this->request->post['po_number']) ? $this->request->post['po_number'] : '');
				$data['payment_date'] = (isset($this->request->post['payment_date']) ? $this->request->post['payment_date'] : 0);
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$results = $this->model_setting_extension->getExtensions('total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['optional_fees'])) {
					$s = 900;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						$results[] = array(
							'extension_id'	=> $s,
							'type'			=> 'total',
							'code'			=> $optional_fee['code']
						);
						$s++;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2" index="1"><![CDATA[
				foreach ($results as $key => $value) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $key => $value) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($value['code'] == $optional_fee['code']) {
								$sort_order[$key] = $optional_fee['sort_order'];
								$found = true;
							}
						}
					}
					if (!$found) {
						$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="6" index="1"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $result) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($result['code'] == $optional_fee['code']) {
								$sub_total = $this->cart->getSubTotal();
								if ($optional_fee['type'] == "p-amt" || $optional_fee['type'] == "p-per") {
									if ($optional_fee['type'] == "p-amt") {
										$amount = $optional_fee['value'];
									} elseif ($optional_fee['type'] == "p-per") {
										$amount = ($sub_total * $optional_fee['value']) / 100;
									}
									if ($optional_fee['taxed'] && $optional_fee['tax_class_id'] && ($optional_fee['type'] == 'p-amt' || $optional_fee['type'] == 'p-per')) {
										if (version_compare(VERSION, '1.5.1.2', '>')) {
											$tax_rates = $this->tax->getRates($amount, $optional_fee['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if (!isset($taxes[$tax_rate['tax_rate_id']])) {
													$taxes[$tax_rate['tax_rate_id']] = $tax_rate['amount'];
												} else {
													$taxes[$tax_rate['tax_rate_id']] += $tax_rate['amount'];
												}
											}
										} else {
											if (!isset($taxes[$optional_fee['tax_class_id']])) {
												$taxes[$optional_fee['tax_class_id']] = $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											} else {
												$taxes[$optional_fee['tax_class_id']] += $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											}
										}
									}
								} else {
									$amount = 0;
									if ($optional_fee['type'] == "m-amt") {
										$discount_min = min($optional_fee['value'], $sub_total);
									}
									foreach ($this->cart->getProducts() as $product) {
										$discount = 0;
										if ($optional_fee['type'] == "m-amt") {
											$discount = $discount_min * ($product['total'] / $sub_total);
										} elseif ($optional_fee['type'] == "m-per") {
											$discount = $product['total'] / 100 * $optional_fee['value'];
										}
										if ($product['tax_class_id'] && $optional_fee['pre_tax'] == 1) {
											$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if ($tax_rate['type'] == 'P') {
													$taxes[$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
												}
											}
										}
										$amount -= $discount;
									}
								}
								$total += $amount;
								$text = $this->currency->format($amount);
								$total_data[] = array(
									'code'			=> $optional_fee['code'],
									'title'			=> $optional_fee['title'],
									'text'			=> $text,
									'value'			=> $amount,
									'sort_order'	=> $optional_fee['sort_order']
								);
								$found = true;
							}
						}
					}
					if (!$found) {
						if ($result['code'] != "tb_banners") {
							$this->load->model('total/' . $result['code']);
							$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->create($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->create($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/checkout/simplecheckout.php" error="skip">
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['payment_address_format'] = $this->simple->payment_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_address_id'])) {
					$data['payment_address_id'] = $this->session->data['payment_address_id'];
				} else {
					$data['payment_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['payment_address_format'] = $payment_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_address_id'])) {
					$data['payment_address_id'] = $this->session->data['payment_address_id'];
				} else {
					$data['payment_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = $this->simple->shipping_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$data['shipping_address_id'] = $this->session->data['shipping_address_id'];
				} else {
					$data['shipping_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = $shipping_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$data['shipping_address_id'] = $this->session->data['shipping_address_id'];
				} else {
					$data['shipping_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = '';
			]]></search>
			<add><![CDATA[
				$data['shipping_address_id'] = '';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				= $this->request->server['REMOTE_ADDR'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['tax_exempt'])) {
					$data['tax_exempt'] = $this->session->data['tax_exempt'];
				} else {
					$data['tax_exempt'] = '';
				}
				$data['check_number'] = (isset($this->request->post['check_number']) ? $this->request->post['check_number'] : '');
				$data['bank_name'] = (isset($this->request->post['bank_name']) ? $this->request->post['bank_name'] : '');
				$data['check_date'] = (isset($this->request->post['check_date']) ? strtotime($this->request->post['check_date']) : '');
				$data['purchase_order'] = (isset($this->request->post['purchase_order']) ? $this->request->post['purchase_order'] : '');
				$data['po_number'] = (isset($this->request->post['po_number']) ? $this->request->post['po_number'] : '');
				$data['payment_date'] = (isset($this->request->post['payment_date']) ? $this->request->post['payment_date'] : 0);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$order_id = $this->model_checkout_order->addOrder($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$order_id = $this->model_checkout_order->addOrder($data);
				} else {
					$order_id = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$order_id = $this->model_checkout_order->create($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$order_id = $this->model_checkout_order->create($data);
				} else {
					$order_id = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/onecheckout/confirm.php" error="skip">
		<operation>
			<search position="after"><![CDATA[
				$data['payment_address_format'] = $payment_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['payment_address_id'])) {
					$data['payment_address_id'] = $this->session->data['payment_address_id'];
				} else {
					$data['payment_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = $shipping_address['address_format'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$data['shipping_address_id'] = $this->session->data['shipping_address_id'];
				} else {
					$data['shipping_address_id'] = 0;
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$data['shipping_address_format'] = '';
			]]></search>
			<add><![CDATA[
				$data['shipping_address_id'] = '';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$data['ip'] = $this->request->server['REMOTE_ADDR'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['tax_exempt'])) {
					$data['tax_exempt'] = $this->session->data['tax_exempt'];
				} else {
					$data['tax_exempt'] = '';
				}
				$data['check_number'] = (isset($this->request->post['check_number']) ? $this->request->post['check_number'] : '');
				$data['bank_name'] = (isset($this->request->post['bank_name']) ? $this->request->post['bank_name'] : '');
				$data['check_date'] = (isset($this->request->post['check_date']) ? strtotime($this->request->post['check_date']) : '');
				$data['purchase_order'] = (isset($this->request->post['purchase_order']) ? $this->request->post['purchase_order'] : '');
				$data['po_number'] = (isset($this->request->post['po_number']) ? $this->request->post['po_number'] : '');
				$data['payment_date'] = (isset($this->request->post['payment_date']) ? $this->request->post['payment_date'] : 0);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['order_id'] = $this->model_checkout_order->create($data);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['payorder'])) {
					$this->session->data['order_id'] = $this->model_checkout_order->addOrder($data);
				} else {
					$this->session->data['order_id'] = $this->session->data['payorder'];
					$this->session->data['order_data'] = $data;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/shipping.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$quote_data['custom'] = array(
						'code'		 => 'custom',
						'title'      => 'Custom',
						'quote'      => $this->session->data['custom_shipping'],
						'sort_order' => 1,
						'error'      => ''
					);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
					$this->data['code'] = $this->session->data['shipping_method']['code'];
				} elseif (isset($this->session->data['custom_shipping'])) {
					$this->data['code'] = "custom.custom";
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/shipping_method.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$quote_data['custom'] = array(
						'code'		 => 'custom',
						'title'      => 'Custom',
						'quote'      => $this->session->data['custom_shipping'],
						'sort_order' => 1,
						'error'      => ''
					);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
					$this->data['code'] = $this->session->data['shipping_method']['code'];
				} elseif (isset($this->session->data['custom_shipping'])) {
					$this->data['code'] = "custom.custom";
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/quickcheckout/shipping_method.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$quote_data['custom'] = array( 
						'code'		 => 'custom',
						'title'      => 'Custom',
						'quote'      => $this->session->data['custom_shipping'],
						'sort_order' => 1,
						'error'      => ''
					);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_method']['code'])) {
					$this->data['code'] = $this->session->data['shipping_method']['code'];
				} elseif (isset($this->session->data['custom_shipping'])) {
					$this->data['code'] = "custom.custom";
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/simplecheckout_shipping.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$quote_data['custom'] = array(
						'code'		 => 'custom',
						'title'      => 'Custom',
						'quote'      => $this->session->data['custom_shipping'],
						'sort_order' => 1,
						'error'      => ''
					);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->data['code'] = !empty($this->data['shipping_method']) ? $this->data['shipping_method']['code'] : '';
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$this->data['code'] = "custom.custom";
				} else {
					$this->data['code'] = !empty($this->data['shipping_method']) ? $this->data['shipping_method']['code'] : '';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->_templateData['code'] = $this->_templateData['shipping_method']['code'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['custom_shipping'])) {
					$this->_templateData['code'] = "custom.custom";
				} else {
					$this->_templateData['code'] = $this->_templateData['shipping_method']['code'];
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/checkout/success.php">
		<operation>
			<search position="before"><![CDATA[
				$this->cart->clear();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					unset($this->session->data['oe_quote']);
				}
				if (isset($this->session->data['payorder'])) {
					$this->load->model('checkout/order');
					$this->model_checkout_order->updateOrder($this->session->data['payorder'], $this->session->data['order_data']);
					unset($this->session->data['payorder']);
					$this->session->data['order_data'] = null;
					unset($this->session->data['order_data']);
					$this->session->data['optional_fees'] = null;
					unset($this->session->data['optional_fees']);
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/module/cart.php" error="skip">
		<operation>
			<search position="after" index="1"><![CDATA[
				$results = $this->model_setting_extension->getExtensions('total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['optional_fees'])) {
					$s = 900;
					foreach ($this->session->data['optional_fees'] as $optional_fee) {
						$results[] = array(
							'extension_id'	=> $s,
							'type'			=> 'total',
							'code'			=> $optional_fee['code']
						);
						$s++;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2" index="1"><![CDATA[
				foreach ($results as $key => $value) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $key => $value) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($value['code'] == $optional_fee['code']) {
								$sort_order[$key] = $optional_fee['sort_order'];
								$found = true;
							}
						}
					}
					if (!$found) {
						$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="14" index="1"><![CDATA[
				foreach ($results as $result) {
			]]></search>
			<add><![CDATA[
				foreach ($results as $result) {
					$found = false;
					if (isset($this->session->data['optional_fees'])) {
						foreach ($this->session->data['optional_fees'] as $optional_fee) {
							if ($result['code'] == $optional_fee['code']) {
								$sub_total = $this->cart->getSubTotal();
								if ($optional_fee['type'] == "p-amt" || $optional_fee['type'] == "p-per") {
									if ($optional_fee['type'] == "p-amt") {
										$amount = $optional_fee['value'];
									} elseif ($optional_fee['type'] == "p-per") {
										$amount = ($sub_total * $optional_fee['value']) / 100;
									}
									if ($optional_fee['taxed'] && $optional_fee['tax_class_id'] && ($optional_fee['type'] == 'p-amt' || $optional_fee['type'] == 'p-per')) {
										if (version_compare(VERSION, '1.5.1.2', '>')) {
											$tax_rates = $this->tax->getRates($amount, $optional_fee['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if (!isset($taxes[$tax_rate['tax_rate_id']])) {
													$taxes[$tax_rate['tax_rate_id']] = $tax_rate['amount'];
												} else {
													$taxes[$tax_rate['tax_rate_id']] += $tax_rate['amount'];
												}
											}
										} else {
											if (!isset($taxes[$optional_fee['tax_class_id']])) {
												$taxes[$optional_fee['tax_class_id']] = $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											} else {
												$taxes[$optional_fee['tax_class_id']] += $amount / 100 * $this->tax->getRate($optional_fee['tax_class_id']);
											}
										}
									}
								} else {
									$amount = 0;
									if ($optional_fee['type'] == "m-amt") {
										$discount_min = min($optional_fee['value'], $sub_total);
									}
									foreach ($this->cart->getProducts() as $product) {
										$discount = 0;
										if ($optional_fee['type'] == "m-amt") {
											$discount = $discount_min * ($product['total'] / $sub_total);
										} elseif ($optional_fee['type'] == "m-per") {
											$discount = $product['total'] / 100 * $optional_fee['value'];
										}
										if ($product['tax_class_id'] && $optional_fee['pre_tax'] == 1) {
											$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);
											foreach ($tax_rates as $tax_rate) {
												if ($tax_rate['type'] == 'P') {
													$taxes[$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
												}
											}
										}
										$amount -= $discount;
									}
								}
								$total += $amount;
								$text = $this->currency->format($amount);
								$total_data[] = array(
									'code'			=> $optional_fee['code'],
									'title'			=> $optional_fee['title'],
									'text'			=> $text,
									'value'			=> $amount,
									'sort_order'	=> $optional_fee['sort_order']
								);
								$found = true;
							}
						}
					}
					if (!$found) {
						if ($result['code'] != "tb_banners") {
							$this->load->model('total/' . $result['code']);
							$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
						}
					}
					$sort_order = array();
					foreach ($total_data as $key => $value) {
						$sort_order[$key] = $value['sort_order'];
					}
					array_multisort($sort_order, SORT_ASC, $total_data);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->currency->format($total)
			]]></search>
			<add><![CDATA[
				(isset($this->session->data['oe_quote']) ? $this->currency->format(0) : $this->currency->format($total))
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $price,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $price),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $total,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_price']) ? 0 : $total),
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/payment/mygate.php" error="skip">
		<operation>
			<search position="after" offset="1"><![CDATA[
				$this->model_checkout_order->update($order_info['order_id'], $this->config->get($this->name . '_order_status_id'), FALSE);
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->markPaid($order_id);
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/payment/payson.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				$this->redirect($this->url->link('checkout/success'));
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->markPaid($order_id);
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/payment/pp_standard.php">
		<operation>
			<search position="before"><![CDATA[
				foreach ($this->request->post as $key => $value) {
			]]></search>
			<add><![CDATA[
				$transaction_id = "";
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$request .= '&' . $key . '=' . urlencode(html_entity_decode($value, ENT_QUOTES, 'UTF-8'));
			]]></search>
			<add><![CDATA[
				if ($key == "txn_id") {
					$transaction_id = "PayPal Transaction ID: " . $value;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->model_checkout_order->confirm($order_id, $order_status_id);
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->confirm($order_id, $order_status_id, $transaction_id, true);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->model_checkout_order->update($order_id, $order_status_id);
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->update($order_id, $order_status_id, $transaction_id, true);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->model_checkout_order->confirm($order_id, $this->config->get('config_order_status_id'));
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->confirm($order_id, $this->config->get('config_order_status_id'), $transaction_id, true);
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/payment/total_web_secure.php" error="skip">
		<operation>
			<search position="after" offset="1"><![CDATA[
				$this->model_checkout_order->update($order_id, $this->config->get('total_web_secure_order_status_id'), 'TWS TRANSACTION ID: ' . $transaction, FALSE);
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->markPaid($order_id);
			]]></add>
		</operation>
	</file>

	<file name="catalog/controller/payment/worldpay.php">
		<operation>
			<search position="before"><![CDATA[
				$this->data['language'] = $this->language->get('code');
			]]></search>
			<add><![CDATA[
				if (isset($this->request->post['transId'])) {
					$trans_id = $this->request->post['transId'];
				} else {
					$trans_id = '';
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->model_checkout_order->confirm($this->request->post['cartId'], $this->config->get('worldpay_order_status_id'));
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->confirm($this->request->post['cartId'], $this->config->get('worldpay_order_status_id'), $trans_id, true);
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->model_checkout_order->confirm($this->request->post['cartId'], $this->config->get('config_order_status_id'), $this->language->get('text_pw_mismatch'));
			]]></search>
			<add><![CDATA[
				$this->model_checkout_order->confirm($this->request->post['cartId'], $this->config->get('config_order_status_id'), $this->language->get('text_pw_mismatch'), true);
			]]></add>
		</operation>
	</file>

	<file name="catalog/language/*/account/order.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['text_not_paid']		= 'This is a Quote! Click the $ or Pay Now link to pay';
				$_['button_pay_now']	= 'Pay Now';
			]]></add>
		</operation>
	</file>

	<file name="catalog/language/*/checkout/cart.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['error_discount_exists']		= 'A coupon cannot be added to an order that already has a discount in effect!';
				$_['error_quote']				= 'This product cannot be added to a quote request!';
			]]></add>
		</operation>
	</file>

	<file name="catalog/language/*/mail/order.php">
		<operation error="skip">
			<search position="after"><![CDATA[
				// Text
			]]></search>
			<add><![CDATA[
				$_['text_quote_greeting']		= 'Thank you for your interest in %s products.  We have generated a quote for you.  The quote total is subject to change upon actual checkout if you add or remove products from the quote or change the shipping method.  The quote details can be found below.';
				$_['text_quote_link']			= 'To view or pay for your quote, click the link below:';
				$_['text_quote_detail']			= 'Quote Details';
				$_['text_new_quote_subject']	= 'Quote #%s from %s';
				$_['text_new_quote_sent']		= 'You have sent a new quote.  Below are the details of the quote.';
				$_['text_pp_link']				= 'Pay Now with PayPal';
				$_['text_quote_subject']		= '%s - Quote paid, order id %s';
				$_['text_quote_received']		= 'A quote you sent out has been paid for!';
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/account/address.php">
		<operation>
			<search position="replace"><![CDATA[
				$address_query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$address_query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
				} else {
					$address_query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "'");
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/account/order.php">
		<operation>
			<search position="replace" index="1"><![CDATA[
				os.name as status,
			]]></search>
			<add><![CDATA[
				os.name as status, o.order_status_id, o.payment_method,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				'order_status_id'         => $order_query->row['order_status_id'],
			]]></search>
			<add><![CDATA[
				'optional_fees'           => $order_query->row['optional_fees'],
				'shipping_method'		  => $order_query->row['shipping_method'],
				'shipping_code'			  => $order_query->row['shipping_code'],
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_product_sort')) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "' ORDER BY order_product_id");
				} else {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "' ORDER BY LCASE(name)");
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				public function getOrderProducts($order_id) {
			]]></search>
			<add><![CDATA[
				public function getOrderCoupon($order_id) {
					$coupon = '';
					$query = $this->db->query("SELECT coupon_id FROM " . DB_PREFIX . "coupon_history WHERE order_id = '" . (int)$order_id . "'");
					if ($query->num_rows) {
						$code = $this->db->query("SELECT code FROM " . DB_PREFIX . "coupon WHERE coupon_id = '" . (int)$query->row['coupon_id'] . "'");
						if ($code->num_rows) {
							$coupon = $code->row['code'];
						}
					}
					return $coupon;
				}
				public function getOrderVoucher($order_id) {
					$voucher = '';
					$query = $this->db->query("SELECT voucher_id FROM " . DB_PREFIX . "voucher_history WHERE order_id = '" . (int)$order_id . "'");
					if ($query->num_rows) {
						$code = $this->db->query("SELECT code FROM " . DB_PREFIX . "voucher WHERE voucher_id = '" . (int)$query->row['voucher_id'] . "'");
						if ($code->num_rows) {
							$voucher = $code->row['code'];
						}
					}
					return $voucher;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/catalog/ka_product_access.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				$query = $this->db->query("SELECT product_id FROM "
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$query = $this->db->query("SELECT category_id FROM "
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before" index="2,3"><![CDATA[
				return true;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/catalog/product.php">
		<operation>
			<search position="replace" index="1"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				public function getProduct($product_id) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				if (isset($this->session->data['customer_info']) && $this->config->get('config_disabled_products')) {
					$status_query = 0;
				} else {
					$status_query = 1;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" index="1"><![CDATA[
				AND p2s.store_id = '" . (int)$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				AND p2s.store_id = '" . (int)$store_id
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" index="1"><![CDATA[
				AND p2s.store_id = '" . (int) $this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				AND p2s.store_id = '" . (int)$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="1"><![CDATA[
				p.status = '1'
			]]></search>
			<add><![CDATA[
				p.status >= '" . $status_query . "'
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				public function getProduct($product_id) {
			]]></search>
			<add><![CDATA[
				public function hasOptions($product_id) {
					$query = $this->db->query("SELECT has_option FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
					return $query->row['has_option'];
				}
				public function getOptionRelations($product_id, $product_option_value_id) {
					$return_data = array();
					$query = $this->db->query("SELECT por.*, pov.weight_prefix, pov.weight FROM " . DB_PREFIX . "product_option_relation por LEFT JOIN " . DB_PREFIX . "product_option_value pov ON (por.product_id = pov.product_id) WHERE por.product_id = '" . (int)$product_id . "' AND por.subtract = '1' AND por.var = '" . (int)$product_option_value_id . "' AND pov.product_option_value_id = '" . (int)$product_option_value_id . "'");
					if ($query->num_rows) {
						$stock = 0;
						foreach ($query->rows as $row) {
							$optionTmp = array();
							$optionTmp = explode(":", $row['var']);
							if (in_array($product_option_value_id, $optionTmp)) {
								$stock += $row['stock'];
							}
						}
						if ($query->row['weight_prefix'] == "+") {
							$weight = $query->row['weight'];
						} else {
							$weight = -$query->row['weight'];
						}
						$return_data = array(
							'sku'		=> $query->row['sku'],
							'stock'		=> $stock,
							'price'		=> $query->row['price'],
							'weight'	=> $weight
						);
					} else {
						$return_data = array(
							'sku'		=> '',
							'stock'		=> 0,
							'price'		=> 0.00,
							'weight'	=> 0
						);
					}
					return $return_data;
				}
				public function getOptionDefault($product_option_value_id) {
					$return_data = array();
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_option_value WHERE product_option_value_id = '" . (int)$product_option_value_id . "' AND subtract = '1'");
					if ($query->num_rows) {
						if ($query->row['weight_prefix'] == "+") {
							$weight = $query->row['weight'];
						} else {
							$weight = -$query->row['weight'];
						}
						$return_data = array(
							'stock'		=> $query->row['quantity'],
							'prefix'	=> $query->row['price_prefix'],
							'price'		=> $query->row['price'],
							'weight'	=> $weight
						);
					}
					return $return_data;
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_language_id')
			]]></search>
			<add><![CDATA[
				(isset($this->session->data['language_id']) ? (int)$this->session->data['language_id'] : (int)$this->config->get('config_language_id'))
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/checkout/coupon.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$coupon_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "coupon WHERE code = '" . $this->db->escape($code) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['edit_order'])) {
					$coupon_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "coupon WHERE code = '" . $this->db->escape($code) . "'");
					$verify = false;
				} else {
					$coupon_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "coupon WHERE LCASE(code) = '" . $this->db->escape(function_exists('utf8_strtolower') ? utf8_strtolower($code) : strtolower($code)) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$coupon_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "coupon` WHERE code = '" . $this->db->escape($code) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['edit_order'])) {
					$coupon_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "coupon` WHERE code = '" . $this->db->escape($code) . "'");
					$verify = false;
				} else {
					$coupon_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "coupon` WHERE LCASE(code) = '" . $this->db->escape(function_exists('utf8_strtolower') ? utf8_strtolower($code) : strtolower($code)) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ($coupon_query->row['logged'] && !$this->customer->getId()) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['edit_order']) && $coupon_query->row['logged'] && !$this->customer->getId()) {
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/onecheckout/checkout.php" error="skip">
		<operation>
			<search position="after" index="1"><![CDATA[
				$order_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_exempt = '" . (int)$data['tax_exempt'] . "', custorderref = '" . $this->db->escape($data['customer_ref']) . "' WHERE order_id = '" . (int)$order_id . "'");
					if (isset($this->session->data['optional_fees'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET optional_fees = '" . $this->db->escape(serialize($this->session->data['optional_fees'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($this->session->data['custom_ship'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_custom_ship = '" . (int)$this->session->data['custom_ship']['tax_class'] . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($this->session->data['override_tax'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_override = '" . $this->db->escape(serialize($this->session->data['override_tax'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
				}
				if (isset($data['payment_address_id'])) {
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET payment_address_id = '" . (int)$data['payment_address_id'] . "', shipping_address_id = '" . (int)$data['shipping_address_id'] . "' WHERE order_id = '" . (int)$order_id . "'");
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				foreach ($data['products'] as $product) {
			]]></search>
			<add><![CDATA[
				$sku_upc = $this->db->query("SELECT sku, upc FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product['product_id'] . "'");
				if ($sku_upc->num_rows) {
					$sku = $sku_upc->row['sku'];
					$upc = $sku_upc->row['upc'];
				} else {
					$sku = "";
					$upc = "";
				}
				if (isset($this->session->data['customer_info'])) {
					$sku = $product['sku'];
					$upc = $product['upc'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$order_product_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "order_product SET sku = '" . $this->db->escape($sku) . "', upc = '" . $this->db->escape($upc) . "' WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "'");
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				foreach ($product['option'] as $option) {
			]]></search>
			<add><![CDATA[
				if (isset($product['option']) && !empty($product['option'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				foreach ($product['download'] as $download) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/checkout/order.php">
		<operation>
			<search position="replace"><![CDATA[
				text = '" . $this->db->escape($total['text']) . "',
			]]></search>
			<add><![CDATA[
				text = '" . $this->db->escape($total['text']) . "', override_total = '" . (isset($this->session->data['override_total'][$total['code']]) ? 1 : 0) . "',
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
					$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
				if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
					$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				(int)$product['quantity']
			]]></search>
			<add><![CDATA[
				(float)$product['quantity']
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				(int)$order_product['quantity']
			]]></search>
			<add><![CDATA[
				(float)$order_product['quantity']
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				comment = '" . $this->db->escape($data['comment']) . "',
			]]></search>
			<add><![CDATA[
				comment = '" . (!isset($this->session->data['customer_info']) ? $this->db->escape($data['comment']) : '') . "',
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->openbay->orderNew((int)$order_id);
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$this->openbay->orderNew((int)$order_id);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				public function confirm($order_id, $order_status_id, $comment = '', $notify = false) {
			]]></search>
			<add><![CDATA[
				public function confirm($order_id, $order_status_id, $comment = '', $notify = false, $data = array()) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int)$order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					if ($this->config->get('config_quote_order_status')) {
						$order_status_id = $this->config->get('config_quote_order_status');
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int) $order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int) $order_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['oe_quote'])) {
					if ($this->config->get('config_quote_order_status')) {
						$order_status_id = $this->config->get('config_quote_order_status');
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
					$template->data['logo'] = HTTP_IMAGE . $this->session->data['store_config']['config_logo'];
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$template->data['logo'] = $this->config->get('config_url') . 'image/' . $this->config->get('config_logo');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['store_config'])) {
						$template->data['logo'] = HTTP_IMAGE . $this->session->data['store_config']['config_logo'];
					} else {
						$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
					}
				} else {
					$template->data['logo'] = $this->config->get('config_url') . 'image/' . $this->config->get('config_logo');
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$template->data['text_product'] = $language->get('text_new_product');
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_oeproduct_images')) {
					$template->data['column_image'] = 1;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$template->data['store_url'] = $order_info['store_url'];
			]]></search>
			<add><![CDATA[
				$store_url = $order_info['store_url'];
				if (isset($this->session->data['customer_info'])) {
					if (isset($data['email_link'])) {
						$template->data['email_link'] = str_replace("admin/", "", $this->url->link('checkout/pp_link', '&order_id=' . $data['email_link'], 'SSL'));
						if ($this->config->get('config_button_link')) {
							if ($this->config->get('config_choose_button')) {
								$template->data['email_link_image'] = HTTP_IMAGE . "paypal_paynow.gif";
							} else {
								$template->data['email_link_image'] = HTTP_IMAGE . "paypal_buynow.png";
							}
						} else {
							$template->data['email_link_text'] = $language->get('text_pp_link');
						}
					}
					$pos = strpos($order_info['store_url'], "admin/");
					if ($pos !== false) {
						$template->data['store_url'] = substr($order_info['store_url'], 0, $pos);
					}
					$store_url = $template->data['store_url'];
					$template->data['sales_agent'] = $order_info['sales_agent'];
					if (isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) {
						$template->data['text_greeting'] = sprintf($language->get('text_quote_greeting'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $store_url . 'index.php?route=account/order/info&order_id=' . $order_id);
						if ($this->config->get('config_button_link')) {
							$template->data['buy_now'] = $store_url . 'index.php?route=account/order/info&order_id=' . $order_id;
							$template->data['buy_now_image'] = HTTP_IMAGE . 'buy_now.png';
						}
						$template->data['text_link'] = $language->get('text_quote_link');
						$template->data['text_order_detail'] = $language->get('text_quote_detail');
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$template->data['link'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_id;
			]]></search>
			<add><![CDATA[
				$template->data['link'] = $store_url . 'index.php?route=account/order/info&order_id=' . $order_id;
				$template->data['text_id'] = $this->language->get('text_id');
				$template->data['affiliate'] = '';
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$template->data['products'] = array();
			]]></search>
			<add><![CDATA[
				$this->load->model('tool/image');
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$template->data['download'] = $order_info['store_url'] . 'index.php?route=account/download';
			]]></search>
			<add><![CDATA[
				$template->data['download'] = $store_url . 'index.php?route=account/download';
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$html = $template->fetch('order_customer.tpl', '_mail.tpl');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$html = $template->fetch('order_customer.tpl', '_mail.tpl');
				} else {
					$html = $template->fetch('oentryorder_customer.tpl', '_mail.tpl');
				}
			]]></add>
		</operation>
		<operation error="skip" index="1">
			<search position="replace"><![CDATA[
				$html = $template->fetch('order_admin.tpl', '_mail.tpl');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$html = $template->fetch('order_admin.tpl', '_mail.tpl');
				} else {
					$html = $template->fetch('oentryorder_admin.tpl', '_mail.tpl');
				}
			]]></add>
		</operation>
		<operation error="skip" index="1">
			<search position="replace"><![CDATA[
				$html_admin = $template->fetch('order_admin.tpl', '_mail.tpl');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$html_admin = $template->fetch('order_admin.tpl', '_mail.tpl');
				} else {
					$html_admin = $template->fetch('oentryorder_admin.tpl', '_mail.tpl');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="4"><![CDATA[
				if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/order.tpl')) {
			]]></search>
			<ignoreif><![CDATA[
				$template->fetch('order_customer.tpl', '_mail.tpl')
			]]></ignoreif>
			<ignoreif><![CDATA[
				$template->fetch($this->config->get('config_template') . '/template/mail/html_email_order.tpl');
			]]></ignoreif>
			<add><![CDATA[
				if (defined('DIR_CATALOG')) {
					$file_exists = str_replace("catalog", "", DIR_CATALOG) . 'vqmod/xml/emailtemplate.xml';
				} else {
					$file_exists = str_replace("catalog", "", DIR_APPLICATION) . 'vqmod/xml/emailtemplate.xml';
				}
				if (!file_exists($file_exists)) {
					if (!isset($this->session->data['customer_info'])) {
						if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/order.tpl')) {
							$html = $template->fetch($this->config->get('config_template') . '/template/mail/order.tpl');
						} else {
							$html = $template->fetch('default/template/mail/order.tpl');
						}
					} else {
						if (defined('DIR_CATALOG')) {
							if (file_exists(DIR_CATALOG . 'view/theme/' . $this->config->get('config_template') . '/template/mail/order.tpl')) {
								$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/order.tpl');
							} else {
								$html = $template->fetch('oentrydefault/template/mail/order.tpl');
							}
						} else {
								if (file_exists(DIR_APPLICATION . 'view/theme/' . $this->config->get('config_template') . '/template/mail/order.tpl')) {
								$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/order.tpl');
							} else {
								$html = $template->fetch('oentrydefault/template/mail/order.tpl');
							}
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/stock_alert.tpl')) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/stock_alert.tpl')) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after" offset="5"><![CDATA[
				if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/stock_alert.tpl')) {
			]]></search>
			<add><![CDATA[
				} else {
					if (defined('DIR_CATALOG')) {
						if (file_exists(DIR_CATALOG . 'view/theme/' . $this->config->get('config_template') . '/template/mail/stock_alert.tpl')) {
							$nhtml = $ntemplate->fetch('oentry' . $this->config->get('config_template') . '/template/mail/stock_alert.tpl');
					} else {
							$nhtml = $ntemplate->fetch('oentrydefault/template/mail/stock_alert.tpl');
						}
					} else {
						if (file_exists(DIR_APPLICATION . 'view/theme/' . $this->config->get('config_template') . '/template/mail/stock_alert.tpl')) {
							$nhtml = $ntemplate->fetch('oentry' . $this->config->get('config_template') . '/template/mail/stock_alert.tpl');
						} else {
							$nhtml = $ntemplate->fetch('oentrydefault/template/mail/stock_alert.tpl');
						}
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$language->load('mail/order');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$language->load('oentrymail/order');
				} else {
					$language->load('mail/order');
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$order_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_exempt = '" . (isset($data['tax_exempt']) ? (int)$data['tax_exempt'] : 0) . "', custorderref = '" . (isset($data['customer_ref']) ? $this->db->escape($data['customer_ref']) : '') . "', sales_agent = '" . (isset($data['sales_agent']) ? $this->db->escape($data['sales_agent']) : '') . "', recipients = '" . (isset($data['recipients']) ? $this->db->escape(serialize($data['recipients'])) : '') . "', bank_name = '" . (isset($data['bank_name']) ? $this->db->escape($data['bank_name']) : '') . "', check_number = '" . (isset($data['check_number']) ? (int)$data['check_number'] : 0) . "', check_date = '" . (isset($data['check_date']) ? (int)$data['check_date'] : 0) . "', purchase_order = '" . (isset($data['purchase_order']) ? $this->db->escape($data['purchase_order']) : '') . "', po_number = '" . (isset($data['po_number']) ? $this->db->escape($data['po_number']) : '') . "', payment_date = '" . (isset($data['payment_date']) ? (int)$data['payment_date'] : 0) . "', cart_weight = '" . (isset($data['cart_weight']) ? (float)$data['cart_weight'] : 0.0000) . "', tracking_number = '" . (isset($data['tracking_number']) ? $this->db->escape($data['tracking_numbers']) : '') . "', catalog_admin = '" . (isset($data['catalog_admin']) ? (int)$data['catalog_admin'] : 0) . "' WHERE order_id = '" . (int)$order_id . "'");
					if (isset($this->session->data['optional_fees'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET optional_fees = '" . $this->db->escape(serialize($this->session->data['optional_fees'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($this->session->data['custom_ship'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_custom_ship = '" . (int)$this->session->data['custom_ship']['tax_class'] . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($this->session->data['override_tax'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET tax_override = '" . $this->db->escape(serialize($this->session->data['override_tax'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($data['order_date'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET date_added = '" . date('Y-m-d h:i:s', strtotime($data['order_date'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
					if (isset($data['invoice_number'])) {
						$date_set = $this->db->query("SELECT invoice_date FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET invoice_number = '" . $this->db->escape($data['invoice_number']) . "', invoice_date = '" . $data['invoice_date'] . "' WHERE order_id = '" . (int)$order_id . "'");
						$results = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "order` LIKE 'date_invoice'");
						if ($results->num_rows) {
							$this->db->query("UPDATE `" . DB_PREFIX . "order` SET date_invoice = NOW() WHERE order_id = '" . (int)$order_id . "'");
						}
					}
					if (isset($data['custom_order_date'])) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET date_added = '" . date('Y-m-d', strtotime($data['custom_order_date'])) . "' WHERE order_id = '" . (int)$order_id . "'");
					}
				}
				if (isset($data['payment_address_id'])) {
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET payment_address_id = '" . (int)$data['payment_address_id'] . "', shipping_address_id = '" . (int)$data['shipping_address_id'] . "' WHERE order_id = '" . (int)$order_id . "'");
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				foreach ($data['products'] as $product) {
			]]></search>
			<add><![CDATA[
				$sku_upc = $this->db->query("SELECT sku, upc, location, weight, weight_class_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product['product_id'] . "'");
				$ship = 0;
				if ($sku_upc->num_rows) {
					$sku = $sku_upc->row['sku'];
					$upc = $sku_upc->row['upc'];
					$location = $sku_upc->row['location'];
					$weight = $sku_upc->row['weight'] * $product['quantity'];
					$weight_class_id = $sku_upc->row['weight_class_id'];
				} else {
					$sku = "";
					$upc = "";
					$location = "";
					$weight = "";
					$weight_class_id = "";
				}
				if (isset($this->session->data['customer_info']) && isset($product['sku'])) {
					$sku = $product['sku'];
					$upc = $product['upc'];
					$location = $product['location'];
					$weight = $product['weight'];
					$weight_class_id = $product['weight_class_id'];
					$ship = $product['ship'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[
				$order_product_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
				$this->db->query("UPDATE " . DB_PREFIX . "order_product SET sku = '" . $this->db->escape($sku) . "', upc = '" . $this->db->escape($upc) . "', location = '" . $this->db->escape($location) . "', weight = '" . (float)$weight . "', weight_class_id = '" . (int)$weight_class_id . "', ship = '" . (int)$ship . "', custom_image = '" . $this->db->escape($product['image']) . "' WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product_id . "'");
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				foreach ($product['option'] as $option) {
			]]></search>
			<add><![CDATA[
				if (isset($product['option']) && !empty($product['option'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				foreach ($product['download'] as $download) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				$order_product_query = $this->db->query("SELECT op.*, p.image FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "product p ON (op.product_id = p.product_id) WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[
				$template->data['products'][] = array(
			]]></search>
			<add><![CDATA[
				if ($this->config->get('config_product_price_tax')) {
					if (isset($canAddTax)) {
						$price = $this->currency->format($product['price'] + ($canAddTax ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']);
						$total = $this->currency->format($product['total'] + ($canAddTax ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']);
					} else {
						$price = $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']);
						$total = $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']);
					}
					if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
						$price = $this->currency->format($product['price'] + ($this->session->data['store_config']['config_tax'] ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']);
						$total = $this->currency->format($product['total'] + ($this->session->data['store_config']['config_tax'] ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']);
					}
				} else {
					$price = $this->currency->format($product['price'], $order_info['currency_code'], $order_info['currency_value']);
					$total = $this->currency->format($product['total'], $order_info['currency_code'], $order_info['currency_value']);
				}
				if (isset($product['image'])) {
					$image = str_replace("admin/", "", $this->model_tool_image->resize($product['image'], 40, 40));
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'price'    => $this->currency->format($product['price'] + ($canAddTax ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
			]]></search>
			<add><![CDATA[
				'price'	  			=> $price,
				'sku'	 			=> (isset($product['sku'])) ? $product['sku'] : '',
				'product_id'		=> (isset($product['product_id'])) ? $product['product_id'] : '',
				'location'			=> (isset($product['location'])) ? $product['location'] : '',
				'stock_quantity'	=> (isset($product['stock_quantity'])) ? $product['stock_quantity'] : '',
				'image'				=> (isset($image)) ? $image : '',
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'price'    => $this->currency->format($product['price'] + ($this->config->get('config_tax') ? $product['tax'] : 0), $order_info['currency_code'], $order_info['currency_value']),
			]]></search>
			<add><![CDATA[
				'price'	  			=> $price,
				'sku'	 			=> (isset($product['sku'])) ? $product['sku'] : '',
				'product_id'		=> (isset($product['product_id'])) ? $product['product_id'] : '',
				'location'			=> (isset($product['location'])) ? $product['location'] : '',
				'stock_quantity'	=> (isset($product['stock_quantity'])) ? $product['stock_quantity'] : '',
				'image'				=> (isset($image)) ? $image : '',
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'price'    => $this->currency->format($product['price'], $order_info['currency_code'], $order_info['currency_value']),
			]]></search>
			<add><![CDATA[
				'price'	   			=> $price,
				'sku'	 			=> (isset($product['sku'])) ? $product['sku'] : '',
				'location'			=> (isset($product['location'])) ? $product['location'] : '',
				'product_id'		=> (isset($product['product_id'])) ? $product['product_id'] : '',
				'stock_quantity'	=> (isset($product['stock_quantity'])) ? $product['stock_quantity'] : '',
				'image'				=> (isset($image)) ? $image : '',
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'total'    => $this->currency->format($product['total'] + ($canAddTax ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
			]]></search>
			<add><![CDATA[
				'total'	  			=> $total,
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'total'    => $this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value'])
			]]></search>
			<add><![CDATA[
				'total'	   => $total
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				'total'    => $this->currency->format($product['total'], $order_info['currency_code'], $order_info['currency_value'])
			]]></search>
			<add><![CDATA[
				'total'	   => $total
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int)$order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($data['payment_date']) && $data['payment_date']) {
					$payment_date = strtotime($data['payment_date']);
				} else {
					$payment_date = time();
				}
				if (!isset($this->session->data['customer_info']) && !isset($this->session->data['oe_quote'])) {
					if (isset($this->session->data['payment_method']) && $this->config->get($this->session->data['payment_method']['code'] . '_paid_status')) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_paid = 1, payment_date = '" . (int)$payment_date . "' WHERE order_id = '" . (int)$order_id . "'");
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->db->query("UPDATE `" . DB_PREFIX . "order` SET invoice_no = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($data['payment_date']) && $data['payment_date']) {
					$payment_date = strtotime($data['payment_date']);
				} else {
					$payment_date = time();
				}
				if (!isset($this->session->data['customer_info']) && !isset($this->session->data['oe_quote'])) {
					if (isset($this->session->data['payment_method']) && $this->config->get($this->session->data['payment_method']['code'] . '_paid_status')) {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_paid = 1, payment_date = '" . (int)$payment_date . "' WHERE order_id = '" . (int)$order_id . "'");
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '1', comment = '" . $this->db->escape(($comment && $notify) ? $comment : '') . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '" . (int)$notify . "', comment = '" . $this->db->escape($comment) . "', date_added = NOW()");
					if (isset($this->session->data['payment_method']) && ($this->session->data['payment_method']['code'] == "pp_pro"
						|| $this->session->data['payment_method']['code'] == "pp_pro_uk"
						|| $this->session->data['payment_method']['code'] == "pp_payflow_pro"
						|| $this->session->data['payment_method']['code'] == "pp_pro_pf"
						|| $this->session->data['payment_method']['code'] == "egr_paypal_advanced"
						|| $this->session->data['payment_method']['code'] == "authorizenet_aim"
						|| $this->session->data['payment_method']['code'] == "authorizenet_aim_simple"
						|| $this->session->data['payment_method']['code'] == "eprocessingnetwork"
						|| $this->session->data['payment_method']['code'] == "sagepay_direct"
						|| $this->session->data['payment_method']['code'] == "sagepay_us"
						|| $this->session->data['payment_method']['code'] == "sagepay_server"
						|| $this->session->data['payment_method']['code'] == "perpetual_payments"
						|| $this->session->data['payment_method']['code'] == "usaepay_server"
						|| $this->session->data['payment_method']['code'] == "paymentsense_direct"
						|| $this->session->data['payment_method']['code'] == "moneris_api"
						|| $this->session->data['payment_method']['code'] == "intuit_qbms"
						|| $this->session->data['payment_method']['code'] == "pp_standard")) {
							$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_paid = 1 WHERE order_id = '" . (int)$order_id . "'");
					}
				} else {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '1', comment = '" . $this->db->escape(($comment && $notify) ? $comment : '') . "', date_added = NOW()");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '1', comment = '" . $this->db->escape($comment) . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '" . (int)$notify . "', comment = '" . $this->db->escape($comment) . "', date_added = NOW()");
					if (isset($this->session->data['payment_method']) && ($this->session->data['payment_method']['code'] == "pp_pro"
						|| $this->session->data['payment_method']['code'] == "pp_pro_uk"
						|| $this->session->data['payment_method']['code'] == "pp_payflow_pro"
						|| $this->session->data['payment_method']['code'] == "pp_pro_pf"
						|| $this->session->data['payment_method']['code'] == "egr_paypal_advanced"
						|| $this->session->data['payment_method']['code'] == "authorizenet_aim"
						|| $this->session->data['payment_method']['code'] == "authorizenet_aim_simple"
						|| $this->session->data['payment_method']['code'] == "eprocessingnetwork"
						|| $this->session->data['payment_method']['code'] == "sagepay_direct"
						|| $this->session->data['payment_method']['code'] == "sagepay_us"
						|| $this->session->data['payment_method']['code'] == "sagepay_server"
						|| $this->session->data['payment_method']['code'] == "perpetual_payments"
						|| $this->session->data['payment_method']['code'] == "usaepay_server"
						|| $this->session->data['payment_method']['code'] == "paymentsense_direct"
						|| $this->session->data['payment_method']['code'] == "moneris_api"
						|| $this->session->data['payment_method']['code'] == "intuit_qbms"
						|| $this->session->data['payment_method']['code'] == "pp_standard")) {
							$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_paid = 1 WHERE order_id = '" . (int)$order_id . "'");
					}
				} else {
					$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '1', comment = '" . $this->db->escape($comment) . "', date_added = NOW()");
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if ($order_info['comment']) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info']) && $order_info['comment']) {
			]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[
				$mail = new Mail();
			]]></search>
			<add><![CDATA[
				if ((!isset($this->session->data['customer_info']) && isset($order_info['email']) && $order_info['email'] != "") || (isset($this->session->data['customer_info']['email']) && $this->session->data['customer_info']['email'] != "") || (isset($order_info['recipients']) && !empty($order_info['recipients']))) {
			]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[
				if ($this->config->get('config_alert_mail')) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$mail->setTo($this->config->get('config_email'));
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
					$mail->setTo($this->session->data['store_config']['config_email']);
				} else {
					$mail->setTo($this->config->get('config_email'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$mail->setFrom($this->config->get('config_email'));
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['store_config'])) {
					$mail->setFrom($this->session->data['store_config']['config_email']);
				} else {
					$mail->setFrom($this->config->get('config_email'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$mail->send();
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info']) || (isset($notify) && $notify)) {
					$mail->send();
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				=> $order_query->row['total'],
			]]></search>
			<add><![CDATA[
				'sales_agent'			  => $order_query->row['sales_agent'],
				'recipients'			  => unserialize($order_query->row['recipients']),
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				foreach ($order_total_query->rows as $order_total) {
			]]></search>
			<add><![CDATA[
				if ($order_total['code'] != "tb_banners") {
			]]></add>
		</operation>
		<operation>
			<search position="after" offset="3"><![CDATA[
				if (method_exists($this->{'model_total_' . $order_total['code']}, 'confirm')) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$subject = sprintf($language->get('text_new_subject'), $order_info['store_name'], $order_id);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['quote'])) {
					$subject = sprintf($language->get('text_new_quote_subject'), $order_id, $order_info['store_name']);
				} else {
					$subject = sprintf($language->get('text_new_subject'), $order_info['store_name'], $order_id);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$subject = sprintf($language->get('text_new_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $order_id);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['quote'])) {
					$subject = sprintf($language->get('text_new_quote_subject'), $order_id, html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'));
				} else {
					$subject = sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$text  = $language->get('text_new_received') . "\n\n";
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['quote'])) {
					$text  = $language->get('text_new_quote_sent') . "\n\n";
				} else {
					$text  = $language->get('text_new_received') . "\n\n";
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="1"><![CDATA[
				?>
			]]></search>
			<add><![CDATA[
				public function getOrderStatusId($order_status_name) {
					$query = $this->db->query("SELECT order_status_id FROM `" . DB_PREFIX . "order_status` WHERE name = '" . $this->db->escape($order_status_name) . "'");
					return $query->row['order_status_id'];
				}
				public function markPaid($order_id) {
					if (!isset($this->session->data['oe_quote'])) {
						if (isset($this->session->data['payment_method'])) {
							if ($this->config->get($this->session->data['payment_method']['code'] . '_paid_status')) {
								$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_paid = 1 WHERE order_id = '" . (int)$order_id . "'");
							}
						}
					}
					return;
				}
				public function updateOrderStatus($order_id, $order_status_id) {
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int)$order_status_id . "' WHERE order_id = '" . (int)$order_id . "'");
					return;
				}
				public function updateTransaction($data, $cc_last_four, $comment) {
					$trans_id = $data['txn_id'];
					$order_id = $data['custom'];
					$order_paid = 0;
					$this->load->model('checkout/order');
					if (!class_exists('ModelLocalisationCurrency')) {
						$this->load->model('localisation/currency');
					}
					$order_info = $this->model_checkout_order->getOrder($order_id);
					if (isset($this->session->data['customer_info'])) {
						$dir_catalog = DIR_CATALOG;
					} else {
						$dir_catalog = DIR_APPLICATION;
					}
					if ($data['payment_status'] == "Completed" || $data['payment_status'] == "Processed") {
						$order_paid = 1;
						if ($data['payment_status'] == "Completed") {
							$order_status_id = $this->config->get('pp_standard_completed_status_id');
						} else {
							$order_status_id = $this->config->get('pp_standard_processed_status_id');
						}
					} else {
						$order_status_id = $this->config->get('pp_standard_pending_status_id');
					}
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET transaction_id = '" . $this->db->escape($trans_id) . "', cc_last_4 = '" . (int)$cc_last_four . "', order_paid = '" . (int)$order_paid . "', order_status_id = '" . (int)$order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
					if ($comment != '') {
						$this->db->query("INSERT INTO `" . DB_PREFIX . "order_history` SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = 1, comment = '" . strip_tags($comment) . "', date_added = NOW()");
					}
					return;
				}
				public function addNote($order_id, $data) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "admin_notes WHERE order_id = '" . (int)$order_id . "'");
					$author_query = $this->db->query("SELECT firstname, lastname, username FROM `" . DB_PREFIX . "user` WHERE user_id = '" . (int)$data['admin_id'] . "'");
					if ($author_query->num_rows) {
						if ($author_query->row['firstname'] != "") {
							$author = $author_query->row['firstname'] . " " . $author_query->row['lastname'];
						} else {
							$author = $author_query->row['username'];
						}
					} else {
						$author = "";
					}
					$time = time();
					$note_history = array();
					if ($query->num_rows) {
						if (!empty($query->row['note_history'])) {
							foreach (unserialize($query->row['note_history']) as $note_history) {
								$note_history[] = array(
									'date_added'	=> $note_history['date_added'],
									'author'		=> $note_history['author'],
									'note'			=> $note_history['note']
								);
							}
						}
						$note_history[] = array(
							'date_added'	=> $time,
							'author'		=> $author,
							'note'			=> $data['note']
						);
						$this->db->query("UPDATE " . DB_PREFIX . "admin_notes SET date_updated = '" . (int)$time . "', last_update_by = '" . (int)$data['admin_id'] . "', last_note = '" . $this->db->escape($data['note']) . "', note_history = '" . $this->db->escape(serialize($note_history)) . "' WHERE order_id = '" . (int)$order_id . "'");
					} else {
						$note_history[] = array(
							'date_added'	=> $time,
							'author'		=> $author,
							'note'			=> $data['note']
						);
						$this->db->query("INSERT INTO " . DB_PREFIX . "admin_notes SET order_id = '" . (int)$order_id . "', date_opened = '" . (int)$time . "', opened_by = '" . (int)$data['admin_id'] . "', last_note = '" . $this->db->escape($data['note']) . "', note_history = '" . $this->db->escape(serialize($note_history)) . "'");
					}
					return;
				}
				public function updateOrder($order_id, $data) {
					$order_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND order_id = '" . (int)$order_id . "'");
					if ($order_query->num_rows) {
						$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
						foreach($product_query->rows as $product) {
							if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
								$this->db->query("UPDATE `" . DB_PREFIX . "product` SET quantity = (quantity + " . (float)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
							}
							$option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$product['order_product_id'] . "'");
							foreach ($option_query->rows as $option) {
								if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
									$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity + " . (float)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
								}
							}
						}
					}
					$this->db->query("UPDATE `" . DB_PREFIX . "order` SET firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', telephone = '" . $this->db->escape($data['telephone']) . "', fax = '" . $this->db->escape($data['fax']) . "', payment_firstname = '" . $this->db->escape($data['payment_firstname']) . "', payment_lastname = '" . $this->db->escape($data['payment_lastname']) . "', payment_company = '" . $this->db->escape($data['payment_company']) . "', payment_company_id = '" . (isset($data['payment_company_id']) ? $this->db->escape($data['payment_company_id']) : '') . "', payment_tax_id = '" . (isset($data['payment_tax_id']) ? $this->db->escape($data['payment_tax_id']) : '') . "', payment_address_1 = '" . $this->db->escape($data['payment_address_1']) . "', payment_address_2 = '" . $this->db->escape($data['payment_address_2']) . "', payment_city = '" . $this->db->escape($data['payment_city']) . "', payment_postcode = '" . $this->db->escape($data['payment_postcode']) . "', payment_country = '" . $this->db->escape($data['payment_country']) . "', payment_country_id = '" . (int)$data['payment_country_id'] . "', payment_zone = '" . $this->db->escape($data['payment_zone']) . "', payment_zone_id = '" . (int)$data['payment_zone_id'] . "', payment_address_format = '" . $this->db->escape($data['payment_address_format']) . "', payment_method = '" . $this->db->escape($data['payment_method']) . "', payment_code = '" . $this->db->escape($data['payment_code']) . "', payment_date = '" . (isset($data['payment_date']) ? (int)$data['payment_date'] : 0) . "', shipping_firstname = '" . $this->db->escape($data['shipping_firstname']) . "', shipping_lastname = '" . $this->db->escape($data['shipping_lastname']) . "', shipping_company = '" . $this->db->escape($data['shipping_company']) . "', shipping_address_1 = '" . $this->db->escape($data['shipping_address_1']) . "', shipping_address_2 = '" . $this->db->escape($data['shipping_address_2']) . "', shipping_city = '" . $this->db->escape($data['shipping_city']) . "', shipping_postcode = '" . $this->db->escape($data['shipping_postcode']) . "', shipping_country = '" . $this->db->escape($data['shipping_country']) . "', shipping_country_id = '" . (int)$data['shipping_country_id'] . "', shipping_zone = '" . $this->db->escape($data['shipping_zone']) . "', shipping_zone_id = '" . (int)$data['shipping_zone_id'] . "', shipping_address_format = '" . $this->db->escape($data['shipping_address_format']) . "', shipping_method = '" . $this->db->escape($data['shipping_method']) . "', shipping_code = '" . $this->db->escape($data['shipping_code']) . "', comment = '" . $this->db->escape($data['comment']) . "', total = '" . (float)$data['total'] . "', affiliate_id = '" . (int)$data['affiliate_id'] . "', commission = '" . (float)$data['commission'] . "', language_id = '" . (int)$data['language_id'] . "', currency_id = '" . (int)$data['currency_id'] . "', currency_code = '" . $this->db->escape($data['currency_code']) . "', currency_value = '" . (float)$data['currency_value'] . "', ip = '" . $this->db->escape($data['ip']) . "', tracking_number = '" . (isset($data['tracking_numbers']) ? $this->db->escape($data['tracking_numbers']) : '') . "', forwarded_ip = '" .  $this->db->escape($data['forwarded_ip']) . "', user_agent = '" . $this->db->escape($data['user_agent']) . "', accept_language = '" . $this->db->escape($data['accept_language']) . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");
					$this->db->query("DELETE FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
					$this->db->query("DELETE FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "'");
					$this->db->query("DELETE FROM " . DB_PREFIX . "order_download WHERE order_id = '" . (int)$order_id . "'");
					foreach ($data['products'] as $product) {
						$sku_upc = $this->db->query("SELECT sku, upc, location, weight, weight_class_id FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product['product_id'] . "'");
						$ship = 0;
						if ($sku_upc->num_rows) {
							$sku = $sku_upc->row['sku'];
							$upc = $sku_upc->row['upc'];
							$location = $sku_upc->row['location'];
							$weight = $sku_upc->row['weight'];
							$weight_class_id = $sku_upc->row['weight_class_id'];
						} else {
							$sku = "";
							$upc = "";
							$location = "";
							$weight = "";
							$weight_class_id = "";
						}
						if (isset($this->session->data['customer_info'])) {
							$sku = $product['sku'];
							$upc = $product['upc'];
							$location = $product['location'];
							$weight = $product['weight'];
							$weight_class_id = $product['weight_class_id'];
							$ship = $product['ship'];
						}
						$this->db->query("INSERT INTO " . DB_PREFIX . "order_product SET order_id = '" . (int)$order_id . "', product_id = '" . (int)$product['product_id'] . "', name = '" . $this->db->escape($product['name']) . "', model = '" . $this->db->escape($product['model']) . "', quantity = '" . (float)$product['quantity'] . "', price = '" . (float)$product['price'] . "', total = '" . (float)$product['total'] . "', tax = '" . (float)$product['tax'] . "', reward = '" . (int)$product['reward'] . "', location = '" . $this->db->escape($location) . "', sku = '" . $this->db->escape($sku) . "', upc = '" . $this->db->escape($upc) . "', weight = '" . (float)$weight . "', weight_class_id = '" . (int)$weight_class_id . "', ship = '" . (int)$ship . "'");
						$order_product_id = $this->db->getLastId();
						if (((isset($this->session->data['quote']) || isset($this->session->data['oe_quote'])) && $this->config->get('config_quote_subtract')) || (!isset($this->session->data['quote']) && !isset($this->session->data['oe_quote'])) && (!isset($this->session->data['convert']) || (isset($this->session->data['convert']) && $this->config->get('config_quote_subtract')))) {
							$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (float)$product['quantity'] . ") WHERE product_id = '" . (int)$product['product_id'] . "' AND subtract = '1'");
							if (isset($product['option']) && !empty($product['option'])) {
								foreach ($product['option'] as $option) {
									$this->db->query("INSERT INTO " . DB_PREFIX . "order_option SET order_id = '" . (int)$order_id . "', order_product_id = '" . (int)$order_product_id . "', product_option_id = '" . (int)$option['product_option_id'] . "', product_option_value_id = '" . (int)$option['product_option_value_id'] . "', name = '" . $this->db->escape($option['name']) . "', `value` = '" . $this->db->escape($option['value']) . "', `type` = '" . $this->db->escape($option['type']) . "'");
									$this->db->query("UPDATE " . DB_PREFIX . "product_option_value SET quantity = (quantity - " . (float)$product['quantity'] . ") WHERE product_option_value_id = '" . (int)$option['product_option_value_id'] . "' AND subtract = '1'");
								}
							}
						}
						foreach ($product['download'] as $download) {
							$this->db->query("INSERT INTO " . DB_PREFIX . "order_download SET order_id = '" . (int)$order_id . "', order_product_id = '" . (int)$order_product_id . "', name = '" . $this->db->escape($download['name']) . "', filename = '" . $this->db->escape($download['filename']) . "', mask = '" . $this->db->escape($download['mask']) . "', remaining = '" . (int)($download['remaining'] * $product['quantity']) . "'");
						}
					}
					$this->db->query("DELETE FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");
					foreach ($data['vouchers'] as $voucher) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "order_voucher SET order_id = '" . (int)$order_id . "', description = '" . $this->db->escape($voucher['description']) . "', code = '" . $this->db->escape($voucher['code']) . "', from_name = '" . $this->db->escape($voucher['from_name']) . "', from_email = '" . $this->db->escape($voucher['from_email']) . "', to_name = '" . $this->db->escape($voucher['to_name']) . "', to_email = '" . $this->db->escape($voucher['to_email']) . "', voucher_theme_id = '" . (int)$voucher['voucher_theme_id'] . "', message = '" . $this->db->escape($voucher['message']) . "', amount = '" . (float)$voucher['amount'] . "'");
					}
					$this->db->query("DELETE FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int)$order_id . "'");
					foreach ($data['totals'] as $total) {
						$this->db->query("INSERT INTO " . DB_PREFIX . "order_total SET order_id = '" . (int)$order_id . "', code = '" . $this->db->escape($total['code']) . "', title = '" . $this->db->escape($total['title']) . "', text = '" . $this->db->escape($total['text']) . "', `value` = '" . (float)$total['value'] . "', sort_order = '" . (int)$total['sort_order'] . "'");
					}
					if ($data['payment_code'] != "pp_standard") {
						$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int)$this->config->get($this->session->data['payment_method']['code'] . '_order_status_id') . "', payment_method = '" . $this->db->escape($this->session->data['payment_method']['title']) . "', payment_code = '" . $this->db->escape($this->session->data['payment_method']['code']) . "', order_paid = 1 WHERE order_id = '" . (int)$this->session->data['payorder'] . "'");
						$this->db->query("INSERT INTO `" . DB_PREFIX . "order_history` SET order_id = '" . (int)$this->session->data['payorder'] . "', order_status_id = '" . (int)$this->config->get($this->session->data['payment_method']['code'] . '_order_status_id') . "', notify = 1, comment = '" . (isset($data['comment']) ? $this->db->escape($data['comment']) : '') . "', date_added = NOW()");
					}
					if ($this->config->get('config_alert_mail')) {
						$order_info = $this->getOrder($order_id);
						$language = new Language($order_info['language_directory']);
						$language->load($order_info['language_filename']);
						$language->load('mail/order');
						$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
						if (version_compare(VERSION, '1.5.1.3.1', '>')) {
							$this->load->model('checkout/voucher');
							$order_voucher_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");
						}
						$order_total_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_total` WHERE order_id = '" . (int)$order_id . "' ORDER BY sort_order ASC");
						$subject = sprintf($language->get('text_quote_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);
						$text  = $language->get('text_quote_received') . "\n\n";
						$text .= $language->get('text_new_order_id') . ' ' . $order_id . "\n";
						$text .= $language->get('text_new_date_added') . ' ' . date($language->get('date_format_short'), strtotime($order_info['date_added'])) . "\n";
						$order_status_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_info['order_status_id'] . "'");
						if ($order_status_name->num_rows) {
							$order_status = $order_status_name->row['name'];
						} else {
							$order_status = '';
						}
						$text .= $language->get('text_new_order_status') . ' ' . $order_status . "\n\n";
						$text .= $language->get('text_new_products') . "\n";
						foreach ($order_product_query->rows as $product) {
							$text .= $product['quantity'] . 'x ' . $product['name'] . ' (' . $product['model'] . ') ' . html_entity_decode($this->currency->format($product['total'] + ($this->config->get('config_tax') ? ($product['tax'] * $product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8') . "\n";
							$order_option_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . $product['order_product_id'] . "'");
							foreach ($order_option_query->rows as $option) {
								if ($option['type'] != 'file') {
									$value = $option['value'];
								} else {
									$value = utf8_substr($option['value'], 0, utf8_strrpos($option['value'], '.'));
								}
								$text .= chr(9) . '-' . $option['name'] . ' ' . (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value) . "\n";
							}
						}
						if (version_compare(VERSION, '1.5.1.3.1', '>')) {
							foreach ($order_voucher_query->rows as $voucher) {
								$text .= '1x ' . $voucher['description'] . ' ' . $this->currency->format($voucher['amount'], $order_info['currency_code'], $order_info['currency_value']);
							}
						}
						$text .= "\n";
						$text .= $language->get('text_new_order_total') . "\n";
						foreach ($order_total_query->rows as $total) {
							$text .= $total['title'] . ': ' . html_entity_decode($total['text'], ENT_NOQUOTES, 'UTF-8') . "\n";
						}
						$text .= "\n";
						if ($order_info['comment']) {
							$text .= $language->get('text_new_comment') . "\n\n";
							$text .= $order_info['comment'] . "\n\n";
						}
						$mail = new Mail();
						$mail->protocol = $this->config->get('config_mail_protocol');
						$mail->parameter = $this->config->get('config_mail_parameter');
						$mail->hostname = $this->config->get('config_smtp_host');
						$mail->username = $this->config->get('config_smtp_username');
						$mail->password = $this->config->get('config_smtp_password');
						$mail->port = $this->config->get('config_smtp_port');
						$mail->timeout = $this->config->get('config_smtp_timeout');
						$mail->setTo($this->config->get('config_email'));
						$mail->setFrom($this->config->get('config_email'));
						$mail->setSender($order_info['store_name']);
						$mail->setSubject(html_entity_decode($subject, ENT_QUOTES, 'UTF-8'));
						$mail->setText(html_entity_decode($text, ENT_QUOTES, 'UTF-8'));
						$mail->send();
						$emails = explode(',', $this->config->get('config_alert_emails'));
						foreach ($emails as $email) {
							if ($email && preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $email)) {
								$mail->setTo($email);
								$mail->send();
							}
						}
					}
					return;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/checkout/voucher.php">
		<operation>
			<search position="before"><![CDATA[
				$voucher_history_query = $this->db->query("SELECT SUM(amount) AS total FROM `" . DB_PREFIX . "voucher_history` vh WHERE vh.voucher_id = '" . (int)$voucher_query->row['voucher_id'] . "' GROUP BY vh.voucher_id");
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['edit_order']) && !isset($this->session->data['payorder'])) {
			]]></add>
		</operation>
		<operation>
			<search position="after" offset="2"><![CDATA[
				if ($amount <= 0) {
			]]></search>
			<add><![CDATA[
				} else {
					$voucher_history_query = $this->db->query("SELECT SUM(amount) AS total FROM `" . DB_PREFIX . "voucher_history` vh WHERE vh.voucher_id = '" . (int)$voucher_query->row['voucher_id'] . "' GROUP BY vh.voucher_id");
					if ($voucher_history_query->num_rows) {
						$amount = -$voucher_history_query->row['total'];
					} else {
						$amount = 0;
					}
					if ($amount <= 0) {
						$status = false;
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/module/restrict_payment.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$address = $this->session->data['payment_address'];
				} else {
					if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) 										$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$address = $this->session->data['payment_address'];
				} else {
					if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" index="2"><![CDATA[
				$geozone_comparison = ($this->name == 'restrict_shipping') ? 'shipping' : 'payment';
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = $this->customer->getCustomerGroupId();
				}
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				if (isset($this->session->data['selected_currency'])) {
					$currency_code = $this->session->data['selected_currency']['code'];
				} else {
					$currency_code = $this->session->data['currency'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="2"><![CDATA[
				$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="3"><![CDATA[
				$this->session->data['currency']
			]]></search>
			<add><![CDATA[
				$currency_code
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="2"><![CDATA[
				$this->customer->getCustomerGroupId()
			]]></search>
			<add><![CDATA[
				$customer_group_id
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/module/restrict_total.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
				} else {
					if (isset($this->session->data['payment_address_id'])) {
						$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$geozone_comparison = ($this->name == 'restrict_shipping') ? 'shipping' : 'payment';
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->customer->getCustomerGroupId();
				} else {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				!in_array((int)$this->customer->getCustomerGroupId(), $row['customer_groups']) ||
			]]></search>
			<add><![CDATA[
				!in_array((int)$customer_group_id, $row['customer_groups']) ||
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/oca/manufacturernotification.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->language->load('mail/order');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentrymail/order');
				} else {
					$this->language->load('mail/order');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="4"><![CDATA[
				if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl')) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl')) {
						$html = $template->fetch($this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl');
					} else {
						$html = $template->fetch('default/template/mail/ocamanufacturernotification.tpl');
					}
				} else {
					if (defined('DIR_CATALOG')) {
						if (file_exists(DIR_CATALOG . 'view/theme/' . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl')) {
							$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl');
						} else {
							$html = $template->fetch('oentrydefault/template/mail/ocamanufacturernotification.tpl');
						}
					} else {
						if (file_exists(DIR_APPLICATION . 'view/theme/' . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl')) {
							$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/ocamanufacturernotification.tpl');
						} else {
							$html = $template->fetch('oentrydefault/template/mail/ocamanufacturernotification.tpl');
						}
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/*.php">
		<operation error="skip">
			<search position="before"><![CDATA[
				if ($status) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$payment_title = $this->language->get('text_title');
					if (strpos($payment_title, "<img ") !== false) {
						$payment_title = $this->language->get('text_backup_title');
						if (!$payment_title) {
							$payment_title = 'Payment Method text is an image';
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->language->get('text_title'),
			]]></search>
			<add><![CDATA[
				(isset($payment_title) ? $payment_title : $this->language->get('text_title')),
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/authorizenet_aim_simple.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->simple->add_error('payment');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$this->simple->add_error('payment');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ($status && $get_route == 'checkout/simplecheckout') {
			]]></search>
			<add><![CDATA[
				if (($status && $get_route == 'checkout/simplecheckout') || ($status && isset($this->session->data['customer_info']))) {
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/billme.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				// only allow billing if customer is in one of the allowed groups
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/cash.php" error="skip">
		<operation error="skip">
			<search position="replace" offset="4"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					if ($this->customer->isLogged()) {
						$customer_group_id = $this->customer->getCustomerGroupId();
					} else {
						$customer_group_id = $this->config->get('config_customer_group_id');
					}	
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/cashprof.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if ($this->config->get('config_customer_group_cash') == null) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if ($status) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['shipping_method']) && $this->session->data['shipping_method']['code'] == "pickup.pickup") {
						$status = true;
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/cheque.php">
		<operation error="skip">
			<search position="before"><![CDATA[
				$this->load->language('payment/cheque');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) || !$this->config->get('config_hide_cheque')) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				$this->language->load('payment/cheque');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) || !$this->config->get('config_hide_cheque')) {
			]]></add>
		</operation>
		<operation>
			<search position="after" offset="1"><![CDATA[
				return $method_data;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/hsbc_cpi.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				$this->name = str_replace('vq2-catalog_model_payment_', '', basename(__FILE__, '.php'));
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				$name = str_replace('vq2-catalog_model_payment_', '', basename(__FILE__, '.php'));
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/offline_cc.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$classname = str_replace('vq2-', '', str_replace(basename(DIR_APPLICATION) . '_' . strtolower(get_parent_class($this)) . '_' . $extension_type . '_', '', basename(__FILE__, '.php')));
			]]></search>
			<add><![CDATA[
				$classname = str_replace('vq2-catalog_model_payment_', '', basename(__FILE__, '.php'));
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/payu.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->load->language('payment/payu');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentrypayment/payu');
				} else {
					$this->load->language('payment/payu');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/paypal_advanced.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				$name = str_replace('vq2-catalog_model_payment_', '', basename(__FILE__, '.php'));
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/payson.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				switch ($this->config->get('payson_enable_logo')) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$method_data = array();
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->load->model('localisation/currency');
			]]></search>
			<add><![CDATA[
				if (!class_exists('ModelLocalisationCurrency')) {
					$this->load->model('localisation/currency');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/purchase_order.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				$name = "purchase_order";
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$name = str_replace('vq2-catalog_model_payment_', '', basename(__FILE__, '.php'));
			]]></search>
			<add><![CDATA[
				$name = "purchase_order";
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if (is_null($this->customer->getCustomerGroupId()) ){
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
					$customerGroupId = $this->session->data['customer_info']['customer_group_id'];
				} else {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$customerGroupId = $this->customer->getCustomerGroupId();
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->load->language('payment/' . $name);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentrypayment/purchase_order');
				} else {
					$this->load->language('payment/' . $name);
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/realex.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					$name = basename(__FILE__, '.php');
				} else {
					$name = "realex";
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/request_quote.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				$name = basename(__FILE__, '.php');
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				return $method_data;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/payment/xpayment.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if (!in_array($customer_group_id,$xpayment['customer_group'][$no_of_tab]) && $xpayment['customer_group_all'][$no_of_tab]!=1) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/rewardpoints/observer.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->customer->getId()
			]]></search>
			<add><![CDATA[
				(int)$customer_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->language->load('rewardpoints/index');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentryrewardpoints/index');
					$customer_id = $this->session->data['customer_info']['customer_id'];
				} else {
					$this->language->load('rewardpoints/index');
					$customer_id = $this->customer->getId();
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/category_product_based.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$language_text = $this->language->load('product/product');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$language_text = $this->language->load('oentryproduct/product');
				} else {
					$language_text = $this->language->load('product/product');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_id = (int)$this->customer->getId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_id = $this->session->data['customer_info']['customer_id'];
				} else {
					$customer_id = (int)$this->customer->getId();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				 } else {
					$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$store_id = (int)$this->config->get('config_store_id');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} elseif (isset($this->session->data['customer_info'])) {
					$store_id = 0;
				} else {
					$store_id = (int)$this->config->get('config_store_id');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$stocks[$product['key']] = $product_query->row['quantity'] - $product['quantity'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['product_info'])) {
					$stocks[$product['key']] = $product['quantity'];
				} else {
					$stocks[$product['key']] = $product_query->row['quantity'] - $product['quantity'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				$product_info = $this->model_catalog_product->getProduct($product['product_id']);
			]]></search>
			<add><![CDATA[
				$product_info = $this->model_catalog_product->getProduct($product['product_id']);
				if ($product_info) {
					$product_price = ($product_info['special']) ? $product_info['special'] : $product_info['price'];
				} else {
					$product_price = $product['price'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$totals[$product['key']] = $product['total'] + ($product['quantity'] * ($product_query->row['price'] - $product_price));
			]]></search>
			<add><![CDATA[
				if ($product_query->num_rows) {
					$totals[$product['key']] = $product['total'] + ($product['quantity'] * ($product_query->row['price'] - $product_price));
				} else {
					$totals[$product['key']] = $product['total'] + ($product['quantity'] * ($product['price'] - $product_price));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$totals[$product['key']] = ($product_info['special']) ? 0 : $product['total'];
			]]></search>
			<add><![CDATA[
				if ($product_info) {
					$totals[$product['key']] = ($product_info['special']) ? 0 : $product['total'];
				} else {
					$totals[$product['key']] = ($product['special']) ? 0 : $product['total'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$manufacturers[$product['key']][] = $product_query->row['manufacturer_id'];
			]]></search>
			<add><![CDATA[
				if ($product_query->num_rows) {
					$manufacturers[$product['key']][] = $product_query->row['manufacturer_id'];
				} else {
					$manufacturers[$product['key']][] = 0;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/czechpost.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "cp_custom_service cs
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['language_id'])) {
					$language_id = $this->session->data['language_id'];
				} else {
					$language_id = $this->config->get('config_language_id');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_language_id')
			]]></search>
			<add><![CDATA[
				(int)$language_id
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/fedex.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getTelephone()
			]]></search>
			<add><![CDATA[
				(isset($this->session->data['customer_info']) ? $this->session->data['customer_info']['telephone'] : $this->customer->getTelephone())
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/flatoptions.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id = '0')");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$this->session->data['shipping_address']['country_id'] . "' AND (zone_id = '" . (int)$this->session->data['shipping_address']['zone_id'] . "' OR zone_id = '0')");
				} else {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id = '0')");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id =0)");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$this->session->data['shipping_address']['country_id'] . "' AND (zone_id = '" . (int)$this->session->data['shipping_address']['zone_id'] . "' OR zone_id = '0')");
				} else {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE  country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id =0)");
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/formulabased.php" error="skip">
		<operation>
			<search position="after"><![CDATA[
				$product_query = $this->db->query("SELECT price FROM " . DB_PREFIX . "product WHERE product_id = " . (int)$product['product_id']);
			]]></search>
			<add><![CDATA[
				if ($product_query->num_rows < 1) {
					$prediscounted += $product['total'];
				} else {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$prediscounted += $product['total'] + ($product['quantity'] * ($product_query->row['price'] - $price));
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/hkpost.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				require_once('catalog/model/shipping/hkpost.class.php');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					require_once('../catalog/model/shipping/hkpost.class.php');
				} else {
					require_once('catalog/model/shipping/hkpost.class.php');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/mvweight.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE geo_zone_id = '" . (int)$geo_zone['geo_zone'] . "' AND country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id = '0')");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE geo_zone_id = '" . (int)$geo_zone['geo_zone'] . "' AND country_id = '" . (int)$this->session->data['shipping_address']['country_id'] . "' AND (zone_id = '" . (int)$this->session->data['shipping_address']['zone_id'] . "' OR zone_id = '0')");
				} else {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE geo_zone_id = '" . (int)$geo_zone['geo_zone'] . "' AND country_id = '" . (int)$address['country_id'] . "' AND (zone_id = '" . (int)$address['zone_id'] . "' OR zone_id = '0')");
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/multi_flat_rate.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$language_text = $this->language->load('product/product');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$language_text = $this->language->load('oentryproduct/product');
				} else {
					$language_text = $this->language->load('product/product');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) 										$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$address = $this->model_account_address->getAddress($this->session->data['shipping_address_id']);
				} elseif ($this->customer->isLogged()) {
					$address = $this->model_account_address->getAddress($this->customer->getAddressId());
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$currency = $this->session->data['currency'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$currency = $this->session->data['selected_currency']['code'];
				} else {
					$currency = $this->session->data['currency'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$default_currency = $this->config->get('config_currency');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_config'])) {
					$default_currency = $this->session->data['store_config']['config_currency'];
				} else {
					$default_currency = $this->config->get('config_currency');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$cust_phone_number = preg_replace("/[^0-9]/","", $this->customer->getTelephone());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$cust_phone_number = preg_replace("/[^0-9]/","", $this->session->data['customer_info']['telephone']);
				} else {
					$cust_phone_number = preg_replace("/[^0-9]/","", $this->customer->getTelephone());
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$store_id = (int)$this->config->get('config_store_id');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['store_id'])) {
						$store_id = $this->session->data['store_id'];
					} else {
						$store_id = 0;
					}
				} else {
					$store_id = (int)$this->config->get('config_store_id');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/ocaaspro.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				&& $this->customer->isLogged())
			]]></search>
			<add><![CDATA[
				&& ($this->customer->isLogged() || isset($this->session->data['customer_info'])))
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				private function checkStores($rate) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				 } else {
					$store_id = $this->config->get('config_store_id');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				private function checkStores($stores) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				 } else {
					$store_id = $this->config->get('config_store_id');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				(int)$store_id
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/shipzoneplus.php" error="skip">
		<operation>
			<search position="replace" offset="4"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					if ($this->customer->isLogged()) {
						$customer_group_id = $this->customer->getCustomerGroupId();
					} else {
						$customer_group_id = $this->config->get('config_customer_group_id');
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/totalbased.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				!in_array((int)$this->customer->getCustomerGroupId(), $row['customer_groups']) ||
			]]></search>
			<add><![CDATA[
				!in_array((int)(isset($this->session->data['customer_info']) ? $this->session->data['customer_info']['customer_group_id'] : $this->customer->getCustomerGroupId()), $row['customer_groups']) ||
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/ups.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->language->load('shipping/ups');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentryshipping/ups');
				} else {
					$this->language->load('shipping/ups');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->load->language('shipping/ups');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentryshipping/ups');
				} else {
					$this->load->language('shipping/ups');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/ultimate_shipping.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$language_text = $this->language->load('product/product');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$language_text = $this->language->load('oentryproduct/product');
				} else {
					$language_text = $this->language->load('product/product');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_id = (int)$this->customer->getId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_id = (int)$this->session->data['customer_info']['customer_id'];
				} else {
					$customer_id = (int)$this->customer->getId();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = (int)$this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$store_id = (int)$this->config->get('config_store_id');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = (int)$this->session->data['store_id'];
				} elseif (isset($this->session->data['customer_info'])) {
					$store_id = 0;
				} else {
					$store_id = (int)$this->config->get('config_store_id');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/weightbased.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$prediscounted += $product['total'] + ($product['quantity'] * ($product_query->row['price'] - $price));
			]]></search>
			<add><![CDATA[
				if (!$product_query->num_rows && isset($this->session->data['product_info'])) {
					foreach ($this->session->data['product_info'] as $prod_info) {
						if ($prod_info['product_id'] == $product['product_id']) {
							$prediscounted += $product['total'] + ($product['quantity'] * ($prod_info['price'] - $price));
							break;
						}
					}
				} elseif ($product_query->num_rows) {
					$prediscounted += $product['total'] + ($product['quantity'] * ($product_query->row['price'] - $price));
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/shipping/weight_volume_based.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$language_text = $this->language->load('product/product');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$language_text = $this->language->load('oentryproduct/product');
				} else {
					$language_text = $this->language->load('product/product');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/tool/html_email.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/html_email_common.tpl')) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				return $html;
			]]></search>
			<add><![CDATA[
				} else {
					if (defined('DIR_CATALOG')) {
						if (file_exists(DIR_CATALOG . 'view/theme/' . $this->config->get('config_template') . '/template/mail/html_email_common.tpl')) {
							$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/html_email_common.tpl');
						} else {
							$html = $template->fetch('oentrydefault/template/mail/html_email_common.tpl');
						}
					} else {
						if (file_exists(DIR_APPLICATION . 'view/theme/' . $this->config->get('config_template') . '/template/mail/html_email_common.tpl')) {
							$html = $template->fetch('oentry' . $this->config->get('config_template') . '/template/mail/html_email_common.tpl');
						} else {
							$html = $template->fetch('oentrydefault/template/mail/html_email_common.tpl');
						}
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/tool/image.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				return $this->config->get('config_ssl') . 'image/' . $new_image;
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					return $this->config->get('config_ssl') . 'image/' . $new_image;
				} else {
					return HTTPS_CATALOG . 'image/' . $new_image;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				return $this->config->get('config_url') . 'image/' . $new_image;
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
					return $this->config->get('config_url') . 'image/' . $new_image;
				} else {
					return HTTP_SERVER . 'image/' . $new_image;
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/categorybased_fee.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				(int)$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->customer->getCustomerGroupId()
			]]></search>
			<add><![CDATA[
				(int)$customer_group_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$currency = $this->session->data['currency'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
					if (isset($this->session->data['selected_currency'])) {
						$currency = $this->session->data['selected_currency']['code'];
					} else {
						$currency = $default_currency;
					}
					if (isset($this->session->data['store_id'])) {
						$store_id = $this->session->data['store_id'];
					} else {
						$store_id = 0;
					}
				} else {
					$customer_group_id = $this->customer->getCustomerGroupId();
					$currency = $this->session->data['currency'];
					$store_id = $this->config->get('config_store_id');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/coupon.php">
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format(-$discount_total, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format(-$discount_total);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format(-$discount_total),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/credit.php">
		<operation>
			<search position="after"><![CDATA[
				$balance = $this->customer->getBalance();
			]]></search>
			<add><![CDATA[
				if ($balance && !isset($this->session->data['use_store_credit']) && !isset($this->session->data['store_credit'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format(-$credit, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format(-$credit);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format(-$credit),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2"><![CDATA[
				$total -= $credit;
			]]></search>
			<add><![CDATA[
							$total -= $credit;
						}
					}
				} elseif (isset($this->session->data['store_credit'])) {
					$total_data[] = array(
						'code'       => 'credit',
						'title'      => $this->language->get('text_credit'),
						'text'       => $this->currency->format($this->session->data['store_credit'], $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']),
						'value'      => $this->session->data['store_credit'],
						'sort_order' => $this->config->get('credit_sort_order')
					);
					$total += $this->session->data['store_credit'];
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/earn_point.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->language->load('rewardpoints/index');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentryrewardpoints/index');
				} else {
					$this->language->load('rewardpoints/index');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/handling.php">
		<operation>
			<search position="after"><![CDATA[
				public function getTotal(&$total_data, &$total, &$taxes) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['oe_quote'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($this->config->get('handling_fee'), $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($this->config->get('handling_fee'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($this->config->get('handling_fee')),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $this->config->get('handling_fee');
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/invoice_fee.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->load->language('total/invoice');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentrytotal/invoice');
				} else {
					$this->load->language('total/invoice');
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/klarna_fee.php" error="skip">
		<operation>
			<search position="after"><![CDATA[
				public function getTotal(&$total_data, &$total, &$taxes) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['oe_quote'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($this->currency->format($klarna_fee[$address['iso_code_3']]['fee']), $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($this->currency->format($klarna_fee[$address['iso_code_3']]['fee']));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($klarna_fee[$address['iso_code_3']]['fee']),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $klarna_fee[$address['iso_code_3']]['fee'];
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/low_order_fee.php">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->cart->getSubTotal() && ($this->cart->getSubTotal() < $this->config->get('low_order_fee_total'))) {
			]]></search>
			<add><![CDATA[
				if ($this->cart->getSubTotal() && ($this->cart->getSubTotal() < $this->config->get('low_order_fee_total')) && !isset($this->session->data['override_total']['low_order_fee'])) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				public function getTotal(&$total_data, &$total, &$taxes) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['oe_quote'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($this->config->get('low_order_fee_fee'), $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($this->config->get('low_order_fee_fee'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($this->config->get('low_order_fee_fee')),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $this->config->get('low_order_fee_fee');
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="after" offset="1"><![CDATA[
				$total += $this->config->get('low_order_fee_fee');
			]]></search>
			<add><![CDATA[
				} elseif (isset($this->session->data['override_total']['low_order_fee'])) {
					$this->language->load('oentrytotal/low_order_fee');
					$total_data[] = array( 
						'code'       => 'low_order_fee',
						'title'      => $this->language->get('text_low_order_fee'),
						'text'       => $this->currency->format(0),
						'value'      => 0,
						'sort_order' => $this->config->get('low_order_fee_sort_order')
					);
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/ocaadf.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$language_id = isset($this->session->data['language']) ? $this->session->data['language'] : $this->config->get('config_language');
			]]></search>
			<add><![CDATA[
				$language_id = isset($this->session->data['language']) ? $this->session->data['language'] : (isset($this->session->data['language_id']) ? $this->session->data['language_id'] : $this->config->get('config_language'));
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if (!in_array((int)$this->config->get('config_store_id'), $stores)) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				if (!in_array((int)$store_id, $stores)) {
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/ocaadfpro.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->load->language($this->extensionType . '/' . $this->extension);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentry' . $this->extensionType . '/' . $this->extension);
				} else {
					$this->load->language($this->extensionType . '/' . $this->extension);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$debug .= ' | StoreId: ' . (int)$this->config->get('config_store_id');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['store_id'])) {
						$store_id = $this->session->data['store_id'];
					} else {
						$store_id = 0;
					}
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				$debug .= ' | StoreId: ' . (int)$store_id;
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if (!in_array((int)$this->config->get('config_store_id'), $stores)) {
			]]></search>
			<add><![CDATA[
				if (!in_array((int)$store_id, $stores)) {
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/paymentbased_fee.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getCustomerGroupId()
			]]></search>
			<add><![CDATA[
				$customer_group_id
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="2"><![CDATA[
				$default_currency = $this->config->get('config_currency');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$default_currency = $this->session->data['selected_currency']['code'];
					$currency = $this->session->data['selected_currency']['code'];
				} else {
					$default_currency = $this->config->get('config_currency');
					$currency = $this->session->data['currency'];
				}
				if (isset($this->session->data['language'])) {
					$language = $this->session->data['language'];
				} else {
					$language = $this->config->get('config_language');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) 								$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['shipping_address_id'])) {
					$address = $this->model_account_address->getAddress($this->session->data['shipping_address_id']);
				} elseif (isset($this->session->data['payment_address_id'])) {
					$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
				} elseif ($this->customer->isLogged()) {
					$address = $this->model_account_address->getAddress($this->customer->getAddressId());
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$geozone_comparison = ($this->type == 'shipping') ? 'shipping' : $row['geozone_comparison'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = $this->customer->getCustomerGroupId();
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/payment_typechg.php" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if ($this->customer->isLogged() || isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/redeem_point.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->language->load('rewardpoints/index');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentryrewardpoints/index');
				} else {
					$this->language->load('rewardpoints/index');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if($this->customer->isLogged())
			]]></search>
			<add><![CDATA[
				if($this->customer->isLogged() || isset($this->session->data['customer_info']))
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/reward.php">
		<operation>
			<search position="replace"><![CDATA[
				$points = $this->customer->getRewardPoints();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$points = $this->customer->getRewardPoints() + $this->session->data['reward'];
				} else {
					$points = $this->customer->getRewardPoints();
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				customer_id = '" . (int)$order_info['customer_id'] . "',
			]]></search>
			<add><![CDATA[
				customer_id = '" . (int)$order_info['customer_id'] . "', order_id = '" . (int)$order_info['order_id'] . "',
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format(-$discount_total, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format(-$discount_total);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format(-$discount_total),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/shipping.php">
		<operation>
			<search position="replace"><![CDATA[
				if ($this->session->data['shipping_method']['tax_class_id']) {
			]]></search>
			<add><![CDATA[
				if ($this->session->data['shipping_method']['tax_class_id'] && !isset($this->session->data['tax_exempt'])) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				public function getTotal(&$total_data, &$total, &$taxes) {
			]]></search>
			<add><![CDATA[
				$shipping_tax = 0;
				$shipping_tax2 = 0;
				if (!isset($this->session->data['oe_quote'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if ($this->session->data['shipping_method']['tax_class_id'] && !isset($this->session->data['tax_exempt'])) {
					$tax_rates = $this->tax->getRates($this->session->data['shipping_method']['cost'], $this->session->data['shipping_method']['tax_class_id']);
					foreach ($tax_rates as $tax_rate) {
						if ($this->config->get('config_shipping_plus_tax')) {
							$shipping_tax2 += round($tax_rate['amount'],2);
						}
						$shipping_tax += round($tax_rate['amount'],2);
					}
				}
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($this->session->data['shipping_method']['cost'] + $shipping_tax2, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($this->session->data['shipping_method']['cost'] + $shipping_tax2);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($this->session->data['shipping_method']['cost']),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $this->session->data['shipping_method']['cost'];
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/shoputils_cumulative_discounts.php" error="skip">
		<operation>
			<search position="before"><![CDATA[
				if (!$this->customer->isLogged()){
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if ($discount = $this->getLoggedCustomerDiscount()){
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				return $this->getCustomerDiscount(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['store_id'])) {
						$store_id = $this->session->data['store_id'];
					} else {
						$store_id = 0;
					}
				} else {
					$store_id = $this->config->get('config_store_id');
				}
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
					$customer_id = $this->session->data['customer_info']['customer_id'];
				} else {
					if ($this->customer->getCustomerGroupId()) {
						$customer_group_id = $this->customer->getCustomerGroupId();
					} else {
						$customer_group_id = $this->config->get('config_customer_group_id');
					}
					$customer_id = $this->customer->getId();
				}
				if (isset($this->session->data['customer_info']) && isset($this->session->data['language_id'])) {
					$language_id = $this->session->data['language_id'];
				} else {
					$langauge_id = $this->config->get('config_language_id');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_store_id'),
			]]></search>
			<add><![CDATA[
				(int)$store_id,
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getCustomerGroupId() ? $this->customer->getCustomerGroupId() : $this->config->get('config_customer_group_id'),
			]]></search>
			<add><![CDATA[
				(int)$customer_group_id,
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_language_id'),
			]]></search>
			<add><![CDATA[
				(int)$language_id,
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getId()
			]]></search>
			<add><![CDATA[
				(int)$customer_id
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/special_promotions.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->language->load('total/special_promotions');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentrytotal/special_promotions');
				} else {
					$this->language->load('total/special_promotions');
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if (!in_array($this->config->get('config_store_id'), $promotion['store'])) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['store_id'])) {
					$store_id = $this->session->data['store_id'];
				} elseif ($this->config->get('config_store_id')) {
					$store_id = $this->config->get('config_store_id');
				} else {
					$store_id = 0;
				}
				if (!in_array($store_id, $promotion['store'])) {
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="2"><![CDATA[
				$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getId()
			]]></search>
			<add><![CDATA[
				$customer_id
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="3"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_id = $this->session->data['customer_info']['customer_id'];
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} elseif ($this->customer->isLogged()) {
					$customer_id = $this->customer->getId();
					$customer_group_id = $this->customer->getCustomerGroupId();
				} else {
					$customer_id = 0;
					$customer_group_id = $this->config->get('config_customer_group_id');
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/sub_total.php">
		<operation>
			<search position="replace"><![CDATA[
				$sub_total = $this->cart->getSubTotal();
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['oe_quote'])) {
					$sub_total = $this->cart->getSubTotal();
					$subtotal_taxes = 0;
					foreach ($this->cart->getProducts() as $product) {
						if ($product['tax_class_id'] && !isset($this->session->data['tax_exempt']) && $this->config->get('config_subtotal_plus_tax')) {
							$tax_rates = $this->tax->getRates($product['total'], $product['tax_class_id']);
							foreach ($tax_rates as $tax_rate) {
								$subtotal_taxes += $tax_rate['amount'];
							}
						}
					}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($sub_total + $subtotal_taxes, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($sub_total + $subtotal_taxes);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($sub_total),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $sub_total;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/taxcloud_integration.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->config->get('config_store_id')
			]]></search>
			<add><![CDATA[
				$store_id
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$this->customer->getId()
			]]></search>
			<add><![CDATA[
				$customer_id
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$addresses = array();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_id = $this->session->data['customer_info']['customer_id'];
					if (isset($this->session->data['store_id'])) {
						$store_id = $this->session->data['store_id'];
					} else {
						$store_id = 0;
					}
				} else {
					$customer_id = $this->customer->getId();
					$store_id = $this->config->get('config_store_id');
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				if ($this->customer->isLogged()) 										$address = $this->model_account_address->getAddress($this->customer->getAddressId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) && isset($this->session->data['payment_address_id'])) {
					$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
				} elseif (isset($this->session->data['customer_info']) && isset($this->session->data['shipping_address_id'])) {
					$address = $this->model_account_address->getAddress($this->session->data['shipping_address_id']);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = (version_compare(VERSION, '2.0') < 0) ? (int)$this->customer->getCustomerGroupId() : (int)$this->customer->getGroupId();
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/tax.php">
		<operation>
			<search position="before"><![CDATA[
				foreach ($taxes as $key => $value) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['oe_quote'])) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				if ($value > 0) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info']) || $value > 0) {
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format($value, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format($value);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format($value),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$total += $value;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/total.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->load->language('total/total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language('oentrytotal/total');
				} else {
					$this->load->language('total/total');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->language->load('total/total');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->language->load('oentrytotal/total');
				} else {
					$this->language->load('total/total');
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					if (isset($this->session->data['selected_currency'])) {
						$text = $this->currency->format($total, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
					} else {
						$text = $this->currency->format(max(0, $total));
					}
					$nomax_total = $total;
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format(max(0, $total)),
			]]></search>
			<add><![CDATA[
				=> (isset($text) ? $text : $this->currency->format(max(0, $total))),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> max(0, $total),
			]]></search>
			<add><![CDATA[
				=> (isset($nomax_total) ? $nomax_total : max(0, $total)),
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/vip_customer.php" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				$this->load->language("module/vip_customer");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$this->load->language("oentrymodule/vip_customer");
				} else {
					$this->load->language("module/vip_customer");
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = $this->customer->getCustomerGroupId();
			]]></search>
			<add><![CDATA[
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$vip_customer = $this->model_module_vip_customer->getVip($this->customer->getId());
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_id = $this->session->data['customer_info']['customer_id'];
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_id = $this->customer->getId();
					$customer_group_id = $this->customer->getCustomerGroupId();
				}
				$vip_customer = $this->model_module_vip_customer->getVip($customer_id);
			]]></add>
		</operation>
	</file>

	<file name="catalog/model/total/voucher.php">
		<operation>
			<search position="before"><![CDATA[
				$total_data[] = array(
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['selected_currency'])) {
					$text = $this->currency->format(-$amount, $this->session->data['selected_currency']['code'], $this->session->data['selected_currency']['value']);
				} else {
					$text = $this->currency->format(-$amount);
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $this->currency->format(-$amount),
			]]></search>
			<add><![CDATA[
				=> $text,
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/shoppica2/template/account/order_list.tpl" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				<p class="s_id"><span class="s_999"><?php echo $text_order_id; ?></span> <span class="s_main_color">#<?php echo $order['order_id']; ?></span></p>
			]]></search>
			<add><![CDATA[
				<?php if ($order['not_paid'] == 1) { ?>
					<p class="s_id"><span class="s_999"><?php echo $text_order_id; ?></span> <span class="s_main_color">#<?php echo $order['order_id']; ?></span><br /><span style="font-weight: bold; font-size: 11px; color: red;"><?php echo $text_not_paid; ?></span></p>
				<?php } else { ?>
					<p class="s_id"><span class="s_999"><?php echo $text_order_id; ?></span> <span class="s_main_color">#<?php echo $order['order_id']; ?></span></p>
				<?php } ?>
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				<a class="s_details s_main_color right" href="<?php echo $order['href']; ?>"><strong><?php echo $button_view; ?></strong></a><br />
			]]></search>
			<add><![CDATA[
				<?php if ($order['not_paid'] == 1) { ?><a id="pay_order-<?php echo $order['order_id']; ?>" class="s_details s_main_color right" title="<?php echo $order['order_id']; ?>"><span class="pay_order"><strong><?php echo $button_pay_now; ?></strong></span></a><br /><?php } ?>
				<a class="s_details s_main_color right" href="<?php echo $order['href']; ?>"><strong><?php echo $button_view; ?></strong></a><br />
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/ribbon/template/account/order_list.tpl" error="skip">
		<operation error="skip">
			<search position="before"><![CDATA[
				<?php echo $content_bottom; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript">
					$(document).ready(function() {
						$('.pay_order').live('click', function() {
							location = 'index.php?route=account/order/payOrder&order_id=' + $(this).attr('title');
						});
					});
				</script>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/theme303/template/account/order_list.tpl" error="skip">
		<operation>
			<search position="replace"><![CDATA[
				<div class="order-id"><b><?php echo $text_order_id; ?></b> <span>#<?php echo $order['order_id']; ?></span></div>
			]]></search>
			<add><![CDATA[
				<?php if ($order['not_paid'] == 1) { ?>
					<div class="order-id">
						<b><?php echo $text_order_id; ?></b> <span>#<?php echo $order['order_id']; ?></span>
						<span style="font-weight: bold; font-size: 11px; color: red;"><?php echo $text_not_paid; ?></span>
					</div>
				<?php } else { ?>
					<div class="order-id"><b><?php echo $text_order_id; ?></b> <span>#<?php echo $order['order_id']; ?></span></div>
				<?php } ?>
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				<div class="order-info span4">
			]]></search>
			<add><![CDATA[
				<div class="order-info span4"><?php if ($order['not_paid'] == 1) { ?><a id="pay_order-<?php echo $order['order_id']; ?>" class="pay_order" title="<?php echo $order['order_id']; ?>"><img src="catalog/view/theme/default/image/dollar.png" alt="<?php echo $button_pay_now; ?>" title="<?php echo $button_pay_now; ?>" /></a><?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/*/template/account/order_list.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<div class="order-id"><b><?php echo $text_order_id; ?></b> #<?php echo $order['order_id']; ?></div>
			]]></search>
			<add><![CDATA[
				<?php if ($order['not_paid'] == 1) { ?>
					<div class="order-id">
						<b><?php echo $text_order_id; ?></b> #<?php echo $order['order_id']; ?><br />
						<span style="font-weight: bold; font-size: 11px; color: red;"><?php echo $text_not_paid; ?></span>
					</div>
				<?php } else { ?>
					<div class="order-id"><b><?php echo $text_order_id; ?></b> #<?php echo $order['order_id']; ?></div>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<div class="order-info">
			]]></search>
			<add><![CDATA[
				<div class="order-info"><?php if ($order['not_paid'] == 1) { ?><a id="pay_order-<?php echo $order['order_id']; ?>" class="pay_order" title="<?php echo $order['order_id']; ?>"><img src="catalog/view/theme/default/image/dollar.png" alt="<?php echo $button_pay_now; ?>" title="<?php echo $button_pay_now; ?>" /></a><?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript">
					$(document).ready(function() {
						$('.pay_order').live('click', function() {
							location = 'index.php?route=account/order/payOrder&order_id=' + $(this).attr('title');
						});
					});
				</script>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/shoppica2/template/account/order_info.tpl" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<a href="<?php echo $continue; ?>" class="button"><?php echo $button_continue; ?></a>
			]]></search>
			<add><![CDATA[
				<a href="<?php echo $continue; ?>" class="button"><?php echo $button_continue; ?></a><?php if (isset($not_paid) && $not_paid == 1) { ?><a id="pay_order" class="button" title="<?php echo $order_id; ?>"><?php echo $button_pay_now; ?></a><?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<a class="s_button_1 s_main_color_bgr" href="<?php echo $continue; ?>"><span class="s_text"><?php echo $button_continue; ?></span></a>
			]]></search>
			<add><![CDATA[
				<a class="s_button_1 s_main_color_bgr" href="<?php echo $continue; ?>"><span class="s_text"><?php echo $button_continue; ?></span></a><?php if ($not_paid == 1) { ?><a id="pay_order" class="s_button_1 s_main_color_bgr" title="<?php echo $order_id; ?>"><span class="s_text"><?php echo $button_pay_now; ?></span></a><?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/ribbon/template/account/order_info.tpl" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				class="btn"><?php echo $button_continue; ?></a>
			]]></search>
			<add><![CDATA[
				class="btn"><?php echo $button_continue; ?></a><?php if (isset($not_paid) && $not_paid == 1) { ?>&nbsp;&nbsp;&nbsp;<a id="pay_order" class="btn" title="<?php echo $order_id; ?>"><?php echo $button_pay_now; ?></a><?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<?php echo $content_bottom; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript">
					$(document).ready(function() {
						$('#pay_order').live('click', function() {
							location = 'index.php?route=account/order/payOrder&order_id=' + $(this).attr('title');
						});
					});
				</script>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/theme303/template/account/order_info.tpl" error="skip">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<?php echo $button_continue; ?></span></a>
			]]></search>
			<add><![CDATA[
				<?php echo $button_continue; ?></span></a><?php if (isset($not_paid) && $not_paid == 1) { ?>&nbsp;&nbsp;&nbsp;<a id="pay_order" class="button" title="<?php echo $order_id; ?>"><span><?php echo $button_pay_now; ?></span></a><?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/*/template/account/order_info.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<?php echo $button_continue; ?></a>
			]]></search>
			<add><![CDATA[
				<?php echo $button_continue; ?></a><?php if (isset($not_paid) && $not_paid == 1) { ?>&nbsp;&nbsp;&nbsp;<a id="pay_order" class="button" title="<?php echo $order_id; ?>"><span><?php echo $button_pay_now; ?></span></a><?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
				<script type="text/javascript">
					$(document).ready(function() {
						$('#pay_order').live('click', function() {
							location = 'index.php?route=account/order/payOrder&order_id=' + $(this).attr('title');
						});
					});
				</script>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/*/template/mail/order_customer.tpl" error="skip">
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				<p class="standard" align="<?php echo $text_align; ?>" style="-ms-text-size-adjust:100%; mso-line-height-rule:exactly; font-family:Helvetica, Arial, sans-serif; font-size:12px; line-height:18px; color:<?php echo $body_font_color; ?>; margin-top:0px; margin-bottom:8px;">
			]]></search>
			<add><![CDATA[
				<table>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="6"><![CDATA[
				<?php if ($customer_id) { ?>
			]]></search>
			<add><![CDATA[
				</table>
				<?php if ($customer_id) { ?>
					<?php if (isset($buy_now)) { ?>
						<table>
							<p style="margin-top: 0px; margin-bottom: 20px;"><a href="<?php echo $buy_now; ?>"><img src="<?php echo $buy_now_image; ?>" border="0" /></a></p>
						</table>
					<?php } elseif (isset($email_link)) { ?>
						<table>
							<p style="margin-top: 0px; margin-bottom: 20px;">
								<a href="<?php echo $email_link; ?>">
								<?php if (isset($email_link_image)) { ?>
									<img src="<?php echo $email_link_image; ?>" border="0" />
								<?php } elseif (isset($email_link_text)) { ?>
									<span style="font-size: 16px; font-weight: bold;"><?php echo $email_link_text; ?></span>
								<?php } ?>
								</a>
							</p>
						</table>
					<?php } else { ?>
						<table>
							<p style="margin-top: 0px; margin-bottom: 20px;">
								<b><?php echo $text_link; ?></b><br />
								<a href="<?php echo $link; ?>" style="color:<?php echo $body_link_color; ?>; text-decoration:none;" target="_blank">
									<b><span style="line-height:100%; font-size:120%;">&raquo;</span> <?php echo $link; ?></b>
								</a>
							</p>
						</table>
					<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="8"><![CDATA[
				<?php if(!empty($customer_id)){ ?>
			]]></search>
			<add><![CDATA[
				<?php if (!empty($customer_id)) { ?>
					<?php if (isset($buy_now)) { ?>
						<br />
						<div class="link">
							<a href="<?php echo $buy_now; ?>"><img src="<?php echo $buy_now_image; ?>" border="0" /></a>
						</div>
					<?php } elseif (isset($email_link)) { ?>
						<br />
						<div class="link">
							<a href="<?php echo $email_link; ?>">
							<?php if (isset($email_link_image)) { ?>
								<img src="<?php echo $email_link_image; ?>" border="0" />
							<?php } elseif (isset($email_link_text)) { ?>
								<span style="font-size: 16px; font-weight: bold;"><?php echo $email_link_text; ?></span>
							<?php } ?>
							</a>
						</div>
					<?php } else { ?>
						<br />
						<div class="link">
							<b><?php echo $text_new_link; ?></b><br />
							<span>&raquo;</span>
							<a href="<?php echo $link_tracking; ?>" target="_blank">
								<b><?php echo $link; ?></b>
							</a>
						</div>
					<?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="catalog/view/theme/*/template/mail/order.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
				<?php if ($customer_id) { ?>
			]]></search>
			<add><![CDATA[
				<?php if ($customer_id || isset($email_link) || isset($buy_now)) { ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<p style="margin-top: 0px; margin-bottom: 20px;"><?php echo $text_link; ?></p>
			]]></search>
			<add><![CDATA[
				<?php if (isset($buy_now)) { ?>
					<p style="margin-top: 0px; margin-bottom: 20px;"><a href="<?php echo $buy_now; ?>"><img src="<?php echo $buy_now_image; ?>" border="0" /></a></p>
				<?php } elseif (isset($email_link)) { ?>
					<p style="margin-top: 0px; margin-bottom: 20px;">
						<a href="<?php echo $email_link; ?>">
						<?php if (isset($email_link_image)) { ?>
							<img src="<?php echo $email_link_image; ?>" border="0" />
						<?php } elseif (isset($email_link_text)) { ?>
							<span style="font-size: 16px; font-weight: bold;"><?php echo $email_link_text; ?></span>
						<?php } ?>
						</a>
					</p>
				<?php } else { ?>
					<p style="margin-top: 0px; margin-bottom: 20px;"><?php echo $text_link; ?></p>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<p><?php echo $text_link; ?></p>
			]]></search>
			<add><![CDATA[
				<?php if (isset($buy_now)) { ?>
					<p><a href="<?php echo $buy_now; ?>"><img src="<?php echo $buy_now_image; ?>" border="0" /></a></p>
				<?php } elseif (isset($email_link)) { ?>
					<p><a href="<?php echo $email_link; ?>">
					<?php if (isset($email_link_image)) { ?>
						<img src="<?php echo $email_link_image; ?>" border="0" />
					<?php } elseif (isset($email_link_text)) { ?>
						<span style="font-size: 14px;"><?php echo $email_link_text; ?></span>
					<?php } ?>
					</a></p>
				<?php } else { ?>
					<p><?php echo $text_link; ?></p>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<p style="margin-top: 0px; margin-bottom: 20px;"><a href="<?php echo $link; ?>"><?php echo $link; ?></a></p>
			]]></search>
			<add><![CDATA[
				<?php if (!isset($buy_now) && !isset($email_link)) { ?>
					<p style="margin-top: 0px; margin-bottom: 20px;"><a href="<?php echo $link; ?>"><?php echo $link; ?></a></p>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<p><a href="<?php echo $link; ?>"><?php echo $link; ?></a></p>
			]]></search>
			<add><![CDATA[
				<?php if (!isset($buy_now) && !isset($email_link)) { ?>
					<p><a href="<?php echo $link; ?>"><?php echo $link; ?></a></p>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 12px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; background-color: #EFEFEF; font-weight: bold; text-align: left; padding: 7px; color: #222222;"><?php echo $text_product; ?></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; background-color: #EFEFEF; font-weight: bold; text-align: left; padding: 7px; color: #222222;"></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 16px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; background-color: #EFEFEF; font-weight: bold; text-align: left; padding: 7px; color: #222222;"><?php echo $text_product; ?></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; background-color: #EFEFEF; font-weight: bold; text-align: left; padding: 7px; color: #222222;"></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td class="left"><?php echo $text_product; ?></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td class="center"></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"><?php echo $product['name']; ?>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="width: 46px; font-size: 12px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: center; padding: 7px;"><img src="<?php echo $product['image']; ?>" border="0" /></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 16px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"><?php echo $product['name']; ?>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="width: 46px; font-size: 12px; border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: center; padding: 7px;"><img src="<?php echo $product['image']; ?>" border="0" /></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td class="left"><?php echo $product['name']; ?>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td class="center"><img src="<?php echo $product['image']; ?>" border="0" /></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"><?php echo $voucher['description']; ?></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				<td style="font-size: 16px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"><?php echo $voucher['description']; ?></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: left; padding: 7px;"></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="4"><b><?php echo $total['title']; ?>:</b></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="5"><b><?php echo $total['title']; ?>:</b></td>
				<?php } else { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="4"><b><?php echo $total['title']; ?>:</b></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<td style="font-size: 16px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="4"><b><?php echo $total['title']; ?>:</b></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="5"><b><?php echo $total['title']; ?>:</b></td>
				<?php } else { ?>
					<td style="font-size: 12px;	border-right: 1px solid #DDDDDD; border-bottom: 1px solid #DDDDDD; text-align: right; padding: 7px;" colspan="4"><b><?php echo $total['title']; ?>:</b></td>
				<?php } ?>
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				<td colspan="4" class="right"><b><?php echo $total['title']; ?>:</b></td>
			]]></search>
			<add><![CDATA[
				<?php if (isset($column_image)) { ?>
					<td colspan="5" class="right"><b><?php echo $total['title']; ?>:</b></td>
				<?php } else { ?>
					<td colspan="4" class="right"><b><?php echo $total['title']; ?>:</b></td>
				<?php } ?>
			]]></add>
		</operation>
	</file>

	<file name="system/engine/loader.php">
		<operation>
			<search position="before" offset="2"><![CDATA[
				$this->registry->set('model_' . str_replace('/', '_', $model), new $class($this->registry));
			]]></search>
			<add><![CDATA[
				if (!class_exists($class)) {
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				$this->registry->set('model_' . str_replace('/', '_', $model), new $class($this->registry));
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$file  = DIR_APPLICATION . 'model/' . $model . '.php';
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['catalog_model']) && defined('DIR_CATALOG')) {
					$file = DIR_CATALOG . 'model/' . $model . '.php';
					if (!file_exists($file)) {
						return;
					}
				} else {
					$file  = DIR_APPLICATION . 'model/' . $model . '.php';
					if (!file_exists($file)) {
						return;
					}
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/cart.php">
		<!--<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_language_id')
			]]></search>
			<add><![CDATA[
				(isset($this->session->data['language_id']) ? (int)$this->session->data['language_id'] : (int)$this->config->get('language_id'))
			]]></add>
		</operation>//-->
		<operation error="skip">
			<search position="before"><![CDATA[
				if ((int)$qty && ((int)$qty > 0)) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['manual_price'])) {
					$this->session->data['override_price'][$key] = $this->session->data['manual_price'];
					unset($this->session->data['manual_price']);
				}
				if (isset($this->session->data['manual_special'])) {
					$this->session->data['override_special'][$key] = 1;
					unset($this->session->data['manual_special']);
				}
				if (isset($this->session->data['manual_name'])) {
					$this->session->data['override_name'][$key] = $this->session->data['manual_name'];
					unset($this->session->data['manual_name']);
				}
				if (isset($this->session->data['manual_model'])) {
					$this->session->data['override_model'][$key] = $this->session->data['manual_model'];
					unset($this->session->data['manual_model']);
				}
				if (isset($this->session->data['manual_weight'])) {
					if (!isset($this->session->data['payorder'])) {
						$this->session->data['override_weight'][$key] = $this->session->data['manual_weight'];
					} else {
						$this->session->data['override_weight'][$key] = $this->session->data['manual_weight'] / $qty;
					}
					unset($this->session->data['manual_weight']);
				}
				if (isset($this->session->data['manual_weight_id'])) {
					$this->session->data['override_weight_id'][$key] = $this->session->data['manual_weight_id'];
					unset($this->session->data['manual_weight_id']);
				}
				if (isset($this->session->data['manual_location'])) {
					$this->session->data['override_location'][$key] = $this->session->data['manual_location'];
					unset($this->session->data['manual_location']);
				}
				if (isset($this->session->data['manual_sku'])) {
					$this->session->data['override_sku'][$key] = $this->session->data['manual_sku'];
					unset($this->session->data['manual_sku']);
				}
				if (isset($this->session->data['manual_upc'])) {
					$this->session->data['override_upc'][$key] = $this->session->data['manual_upc'];
					unset($this->session->data['manual_upc']);
				}
				if (isset($this->session->data['manual_ship'])) {
					$this->session->data['override_ship'][$key] = $this->session->data['manual_ship'];
					unset($this->session->data['manual_ship']);
				}
				$this->session->data['key'] = $key;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				if ((int) $qty && ((int) $qty > 0)) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['manual_price'])) {
					$this->session->data['override_price'][$key] = $this->session->data['manual_price'];
					unset($this->session->data['manual_price']);
				}
				if (isset($this->session->data['manual_special'])) {
					$this->session->data['override_special'][$key] = 1;
					unset($this->session->data['manual_special']);
				}
				if (isset($this->session->data['manual_name'])) {
					$this->session->data['override_name'][$key] = $this->session->data['manual_name'];
					unset($this->session->data['manual_name']);
				}
				if (isset($this->session->data['manual_model'])) {
					$this->session->data['override_model'][$key] = $this->session->data['manual_model'];
					unset($this->session->data['manual_model']);
				}
				if (isset($this->session->data['manual_weight'])) {
					if (!isset($this->session->data['payorder'])) {
						$this->session->data['override_weight'][$key] = $this->session->data['manual_weight'];
					} else {
						$this->session->data['override_weight'][$key] = $this->session->data['manual_weight'] / $qty;
					}
					unset($this->session->data['manual_weight']);
				}
				if (isset($this->session->data['manual_weight_id'])) {
					$this->session->data['override_weight_id'][$key] = $this->session->data['manual_weight_id'];
					unset($this->session->data['manual_weight_id']);
				}
				if (isset($this->session->data['manual_location'])) {
					$this->session->data['override_location'][$key] = $this->session->data['manual_location'];
					unset($this->session->data['manual_location']);
				}
				if (isset($this->session->data['manual_sku'])) {
					$this->session->data['override_sku'][$key] = $this->session->data['manual_sku'];
					unset($this->session->data['manual_sku']);
				}
				if (isset($this->session->data['manual_upc'])) {
					$this->session->data['override_upc'][$key] = $this->session->data['manual_upc'];
					unset($this->session->data['manual_upc']);
				}
				if (isset($this->session->data['manual_ship'])) {
					$this->session->data['override_ship'][$key] = $this->session->data['manual_ship'];
					unset($this->session->data['manual_ship']);
				}
				$this->session->data['key'] = $key;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ((int)$qty && ((int)$qty > 0)) {
			]]></search>
			<add><![CDATA[
				if ((float)$qty && ((float)$qty != 0)) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				if ((int) $qty && ((int) $qty > 0)) {
			]]></search>
			<add><![CDATA[
				if ((float)$qty && ((float)$qty != 0)) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$product_total += $product['quantity'];
			]]></search>
			<add><![CDATA[
				$product_total += abs($product['quantity']);
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['cart'][$key] = (int)$qty;
			]]></search>
			<add><![CDATA[
				$this->session->data['cart'][$key] = (float)$qty;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['cart'][$key] = (int) $qty;
			]]></search>
			<add><![CDATA[
				$this->session->data['cart'][$key] = (float)$qty;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['cart'][$key] += (int)$qty;
			]]></search>
			<add><![CDATA[
				$this->session->data['cart'][$key] += (float)$qty;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$this->session->data['cart'][$key] += (int) $qty;
			]]></search>
			<add><![CDATA[
				$this->session->data['cart'][$key] += (float)$qty;
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW() AND p.status = '1'");
			]]></search>
			<add><![CDATA[
				$option_cost = 0;
				$cost = 0;
				$option_sku = "";
				if (isset($this->session->data['customer_info']) || isset($this->session->data['payorder'])) {
					$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW()");
				} else {
					$product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW() AND p.status = '1'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$product_query = $this->db->query("SELECT *, wcd.unit AS weight_class, mcd.unit AS length_class FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "weight_class wc ON (p.weight_class_id = wc.weight_class_id) LEFT JOIN " . DB_PREFIX . "weight_class_description wcd ON (wc.weight_class_id = wcd.weight_class_id) LEFT JOIN " . DB_PREFIX . "length_class mc ON (p.length_class_id = mc.length_class_id) LEFT JOIN " . DB_PREFIX . "length_class_description mcd ON (mc.length_class_id = mcd.length_class_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW() AND p.status = '1'");
			]]></search>
			<add><![CDATA[
				$option_sku = "";
				if (isset($this->session->data['customer_info'])) {
					$product_query = $this->db->query("SELECT *, wcd.unit AS weight_class, mcd.unit AS length_class FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "weight_class wc ON (p.weight_class_id = wc.weight_class_id) LEFT JOIN " . DB_PREFIX . "weight_class_description wcd ON (wc.weight_class_id = wcd.weight_class_id) LEFT JOIN " . DB_PREFIX . "length_class mc ON (p.length_class_id = mc.length_class_id) LEFT JOIN " . DB_PREFIX . "length_class_description mcd ON (mc.length_class_id = mcd.length_class_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW()");
				} else {
					$product_query = $this->db->query("SELECT *, wcd.unit AS weight_class, mcd.unit AS length_class FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "weight_class wc ON (p.weight_class_id = wc.weight_class_id) LEFT JOIN " . DB_PREFIX . "weight_class_description wcd ON (wc.weight_class_id = wcd.weight_class_id) LEFT JOIN " . DB_PREFIX . "length_class mc ON (p.length_class_id = mc.length_class_id) LEFT JOIN " . DB_PREFIX . "length_class_description mcd ON (mc.length_class_id = mcd.length_class_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND wcd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.date_available <= NOW() AND p.status = '1'");
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				$customer_group_id = $this->config->get('config_customer_group_id');
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
					$customer_group_id = $this->config->get('config_customer_group_id');
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$price = $product_query->row['price'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['override_price'][$key])) {
					$price = $this->session->data['override_price'][$key];
				} else {
					$price = $product_query->row['price'];
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$price = ($product_query->row['price'] * $discount);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['override_price'][$key])) {
					$price = $this->session->data['override_price'][$key];
				} else {
					$price = ($product_query->row['price'] * $discount);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$price = $product_discount_query->row['price'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['override_price'][$key])) {
					$price = $this->session->data['override_price'][$key];
				} else {
					$price = $product_discount_query->row['price'];
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$esponi_discount = $product_discount_query->row['price'];
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['override_price'][$key])) {
					$esponi_discount = $this->session->data['override_price'][$key];
				} else {
					$esponi_discount = $product_discount_query->row['price'];
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace" offset="3"><![CDATA[
				if ($product_special_query->num_rows) {
			]]></search>
			<ignoreif><![CDATA[
				if($product_discount_query->num_rows&&$product_discount_query->row['price']<=$product_special_query->row['price']){
			]]></ignoreif>
			<add><![CDATA[
				if ($product_special_query->num_rows && !isset($this->session->data['override_special'][$key])) {
					if (isset($this->session->data['override_price'][$key])) {
						$price = $this->session->data['override_price'][$key];
					} else {
						if ($product_discount_query->num_rows && $product_discount_query->row['price'] <= $product_special_query->row['price']) {
							$price = $product_discount_query->row['price'];
						} else {
							$price = $product_special_query->row['price'];
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$price = ($product_special_query->row['price'] < $price && (int)$price) ? $product_special_query->row['price'] : $price;
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['override_price'][$key])) {
					$price = $this->session->data['override_price'][$key];
				} else {
					if (!isset($this->session->data['override_special'][$key])) {
						$price = ($product_special_query->row['price'] < $price && (int)$price) ? $product_special_query->row['price'] : $price;
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" offset="1"><![CDATA[
				if (!$product_query->row['quantity'] || ($product_query->row['quantity'] < $quantity)) {
			]]></search>
			<add><![CDATA[
				if (!$product_query->row['quantity'] || ($product_query->row['quantity'] < $quantity)) {
					if (!isset($this->session->data['payorder'])) {
						$stock = false;
					}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				=> $product_query->row['name'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_name'][$key]) ? $this->session->data['override_name'][$key] : $product_query->row['name']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $product_query->row['model'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_model'][$key]) ? $this->session->data['override_model'][$key] : $product_query->row['model']),
				'location'		  => (isset($this->session->data['override_location'][$key]) ? $this->session->data['override_location'][$key] : $product_query->row['location']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $final_model,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_model'][$key]) ? $this->session->data['override_model'][$key] : $final_model),
				'location'		  => (isset($this->session->data['override_location'][$key]) ? $this->session->data['override_location'][$key] : $product_query->row['location']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $productSku,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_model'][$key]) ? $this->session->data['override_model'][$key] : $productSku),
				'location'		  => (isset($this->session->data['override_location'][$key]) ? $this->session->data['override_location'][$key] : $product_query->row['location']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ($product_query->row['weight'] + $option_weight) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_weight'][$key]) ? $this->session->data['override_weight'][$key] * $quantity : ($product_query->row['weight'] + $option_weight) * $quantity),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ((isset($newWeight) ? $newWeight : ($product_query->row['weight'] + $option_weight))) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_weight'][$key]) ? $this->session->data['override_weight'][$key] * $quantity : (isset($newWeight) ? $newWeight : ($product_query->row['weight'] + $option_weight) * $quantity)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $product_query->row['weight_class_id'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_weight_id'][$key]) ? $this->session->data['override_weight_id'][$key] : $product_query->row['weight_class_id']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $product_query->row['weight_class'],
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['override_weight_id'][$key]) ? $this->session->data['override_weight_id'][$key] : $product_query->row['weight_class']),
				'weight_class_id'	=> (isset($this->session->data['override_weight_id'][$key]) ? $this->session->data['override_weight_id'][$key] : $product_query->row['weight_class']),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ($price + $option_price),
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $price),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : ($price + $option_price),
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $price)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : $newprice,
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $price)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : ($newprice),
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $price)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $newprice ,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $price),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ($price + ($option_price * $multiplier)),
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $price),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ($price + $option_price) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $total),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> ($price + ($option_price* $multiplier)) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $total),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : ($price + $option_price)) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $total)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] :  $newprice) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $total)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : ($newprice)) * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($product_prices[$product_query->row["product_id"]]) ? $product_prices[$product_query->row["product_id"]] : (isset($this->session->data['oe_quote']) ? 0 : $total)),
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				=> $newprice  * $quantity,
			]]></search>
			<add><![CDATA[
				=> (isset($this->session->data['oe_quote']) ? 0 : $total),
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				=> $product_query->row['product_id'],
			]]></search>
			<add><![CDATA[
				'sku'			  => (isset($this->session->data['override_sku'][$key]) ? $this->session->data['override_sku'][$key] : ((isset($option_sku) && $option_sku) ? $option_sku : $product_query->row['sku'])),
				'upc'			  => (isset($this->session->data['override_upc'][$key]) ? $this->session->data['override_upc'][$key] : $product_query->row['upc']),
				'stock_status_id' => $product_query->row['stock_status_id'],
				'tax'			  => $tax,
				'cost'			  => $cost,
				'ship'			  => (isset($this->session->data['override_ship'][$key]) ? 1 : 0),
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				unset($this->session->data['cart'][$key]);
			]]></search>
			<add><![CDATA[
				unset($this->session->data['override_model'][$key]);
				unset($this->session->data['override_weight'][$key]);
				unset($this->session->data['override_weight_id'][$key]);
				unset($this->session->data['override_name'][$key]);
				unset($this->session->data['override_price'][$key]);
				unset($this->session->data['override_special'][$key]);
				unset($this->session->data['override_location'][$key]);
				unset($this->session->data['override_sku'][$key]);
				unset($this->session->data['override_upc'][$key]);
				unset($this->session->data['override_ship'][$key]);
				unset($this->session->data['taxed'][$key]);
				if (!$this->hasProducts()) {
					$this->clear();
					unset($this->session->data['optional_fees']);
					unset($this->session->data['custom_shipping']);
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				$product_data[$key] = array(
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['override_price'][$key])) {
					if (isset($priceNew) && $priceNew > 0) {
						$price = $priceNew;
						$priceNew = 0;
					} elseif (isset($newprice) && $newprice > 0) {
						$price = $newprice;
						$newprice = 0;
					} elseif (isset($tempprice)) {
						$price = $tempprice;
					} else {
						$price += $option_price;
					}
				} else {
					$price = $this->session->data['override_price'][$key];
				}
				if (isset($product_query->row['cost'])) {
					$cost = $product_query->row['cost'];
				} else {
					$cost = 0;
				}
				$total = $price * $quantity;
				$tax = 0;
				if (!isset($this->session->data['tax_exempt']) && isset($this->session->data['taxed'][$key])) {
					if (isset($this->session->data['store_id'])) {
						if (($this->session->data['store_config']['config_customer_price'] && isset($this->session->data['customer_info'])) || !$this->session->data['store_config']['config_customer_price']) {
							$tax = $this->tax->calculate($price, $product_query->row['tax_class_id'], $this->session->data['store_config']['config_tax']);
							$tax -= $price;
						}
					} else {
						if (($this->config->get('config_customer_price') && isset($this->session->data['customer_info'])) || !$this->config->get('config_customer_price')) {
							$tax = $this->tax->calculate($price, $product_query->row['tax_class_id'], $this->config->get('config_tax'));
							$tax -= $price;
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
				$this->data[$key] = array(
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['override_price'][$key])) {
					if (isset($priceNew) && $priceNew > 0) {
						$price = $priceNew;
						$priceNew = 0;
					} elseif (isset($newprice) && $newprice > 0) {
						$price = $newprice;
						$newprice = 0;
					} elseif (isset($tempprice)) {
						$price = $tempprice;
					} else {
						$price += $option_price;
					}
				} else {
					$price = $this->session->data['override_price'][$key];
				}
				if (isset($product_query->row['cost'])) {
					$cost = $product_query->row['cost'];
				} else {
					$cost = 0;
				}
				$total = $price * $quantity;
				$tax = 0;
				if (!isset($this->session->data['tax_exempt']) && isset($this->session->data['taxed'][$key])) {
					if (isset($this->session->data['store_id'])) {
						if (($this->session->data['store_config']['config_customer_price'] && isset($this->session->data['customer_info'])) || !$this->session->data['store_config']['config_customer_price']) {
							$tax = $this->tax->calculate($price, $product_query->row['tax_class_id'], $this->session->data['store_config']['config_tax']);
							$tax -= $price;
						}
					} else {
						if (($this->config->get('config_customer_price') && isset($this->session->data['customer_info'])) || !$this->config->get('config_customer_price')) {
							$tax = $this->tax->calculate($price, $product_query->row['tax_class_id'], $this->config->get('config_tax'));
							$tax -= $price;
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$stock_qry = $this->db->query("SELECT * FROM `" . DB_PREFIX . "product_option_relation` WHERE `var` = '".(string)$var."' AND `product_id` = '".(int)$product_id."' LIMIT 1");
			]]></search>
			<add><![CDATA[
				if (isset($stock_qry->row['sku'])) {
					$option_sku = $stock_qry->row['sku'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace" index="1"><![CDATA[
				$this->remove($key);
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['product_info'])) {
					foreach ($this->session->data['product_info'] as $product_info) {
						if ($product_info['key'] == $key) {
							$tax = 0;
							if (!isset($this->session->data['tax_exempt']) && isset($this->session->data['taxed'][$key])) {
								if (isset($this->session->data['store_id'])) {
									if (($this->session->data['store_config']['config_customer_price'] && isset($this->session->data['customer_info'])) || !$this->session->data['store_config']['config_customer_price']) {
										$tax = $this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->session->data['store_config']['config_tax']);
										$tax -= $product_info['price'];
									}
								} else {
									if (($this->config->get('config_customer_price') && isset($this->session->data['customer_info'])) || !$this->config->get('config_customer_price')) {
										$tax = $this->tax->calculate($product_info['price'], $product_info['tax_class_id'], $this->config->get('config_tax'));
										$tax -= $product_info['price'];
									}
								}
							}
							$new_array[] = array(
								'key'						=> $product_info['key'],
								'product_id'				=> $product_info['product_id'],
								'name'						=> (isset($this->session->data['override_name'][$product_info['key']]) ? $this->session->data['override_name'][$product_info['key']] : $product_info['name']),
								'model'						=> (isset($this->session->data['override_model'][$product_info['key']]) ? $this->session->data['override_model'][$product_info['key']] : $product_info['model']),
								'location'				    => (isset($this->session->data['override_location'][$product_info['key']]) ? $this->session->data['override_location'][$product_info['key']] : $product_info['location']),
								'sku'						=> (isset($this->session->data['override_sku'][$product_info['key']]) ? $this->session->data['override_sku'][$product_info['key']] : $product_info['sku']),
								'upc'						=> (isset($this->session->data['override_upc'][$product_info['key']]) ? $this->session->data['override_upc'][$product_info['key']] : $product_info['upc']),
								'image'						=> (isset($this->session->data['custom_image'][$product_info['product_id']]) ? $this->session->data['custom_image'][$product_info['product_id']] : ''),
								'quantity'					=> $quantity,
								'price'						=> $product_info['price'],
								'total'						=> $product_info['price'] * $quantity,
								'tax'						=> $tax,
								'shipping'					=> $product_info['shipping'],
								'tax_class_id'				=> $product_info['tax_class_id'],
								'weight'					=> (isset($this->session->data['override_weight'][$product_info['key']]) ? $this->session->data['override_weight'][$product_info['key']] : $product_info['weight']),
								'weight_class_id' 			=> (isset($this->session->data['override_weight_id'][$product_info['key']]) ? $this->session->data['override_weight_id'][$product_info['key']] : $product_info['weight_class_id']),
								'ship'						=> (isset($this->session->data['override_ship'][$product_info['key']]) ? 1 : 0),
								'stock'						=> true,
								'profile_id'                => '',
								'profile_name'              => '',
								'recurring'                 => false,
								'recurring_frequency'       => '',
								'recurring_price'           => '',
								'recurring_cycle'           => '',
								'recurring_duration'        => '',
								'recurring_trial'           => '',
								'recurring_trial_frequency' => '',
								'recurring_trial_price'     => '',
								'recurring_trial_cycle'     => '',
								'recurring_trial_duration'  => ''
							);
							$option_data = array();
							if (!empty($options)) {
								foreach ($options as $option) {
									$option_data[] = array(
										'product_option_id'       => $option['product_option_id'],
										'product_option_value_id' => $option['product_option_value_id'],
										'option_id'               => '',
										'option_value_id'         => '',
										'name'                    => $option['name'],
										'option_value'            => $option['value'],
										'type'                    => $option['type'],
										'quantity'                => $product_info['quantity'],
										'subtract'                => '',
										'price'                   => '',
										'price_prefix'            => '',
										'points'                  => '',
										'points_prefix'           => '',
										'weight'                  => '',
										'weight_prefix'           => ''
									);
								}
							}
							$download_data = array();
							if (version_compare(VERSION, '1.5.1.3.1', '>')) {
								$this->data[$key] = array(
									'key'             			=> $key,
									'product_id'      			=> $product_info['product_id'],
									'name'						=> (isset($this->session->data['override_name'][$key]) ? $this->session->data['override_name'][$key] : $product_info['name']),
									'model'						=> (isset($this->session->data['override_model'][$key]) ? $this->session->data['override_model'][$key] : $product_info['model']),
									'location'		    		=> (isset($this->session->data['override_location'][$key]) ? $this->session->data['override_location'][$key] : $product_info['location']),
									'sku'						=> (isset($this->session->data['override_sku'][$key]) ? $this->session->data['override_sku'][$key] : $product_info['sku']),
									'upc'						=> (isset($this->session->data['override_upc'][$key]) ? $this->session->data['override_upc'][$key] : $product_info['upc']),
									'stock_status_id' 			=> '',
									'tax'			  			=> $product_info['tax'],
									'shipping'        			=> $product_info['shipping'],
									'image'           			=> (isset($this->session->data['custom_image'][$product_info['product_id']]) ? $this->session->data['custom_image'][$product_info['product_id']] : ''),
									'option'          			=> $option_data,
									'download'        			=> $download_data,
									'quantity'        			=> $quantity,
									'minimum'         			=> '',
									'subtract'        			=> '',
									'stock'           			=> true,
									'price'           			=> $product_info['price'],
									'total'           			=> $product_info['price'] * $quantity,
									'reward'          			=> '',
									'points'          			=> 0,
									'tax_class_id'    			=> $product_info['tax_class_id'],
									'weight'		  			=> (isset($this->session->data['override_weight'][$key]) ? $this->session->data['override_weight'][$key] : $product_info['weight']),
									'weight_class_id' 			=> (isset($this->session->data['override_weight_id'][$key]) ? $this->session->data['override_weight_id'][$key] : $product_info['weight_class_id']),
									'ship'			  			=> (isset($this->session->data['override_ship'][$key]) ? 1 : 0),
									'length'         			=> '',
									'width'           			=> '',
									'height'          			=> '',
									'length_class_id' 			=> '',
									'profile_id'                => '',
									'profile_name'              => '',
									'recurring'                 => false,
									'recurring_frequency'       => '',
									'recurring_price'           => '',
									'recurring_cycle'           => '',
									'recurring_duration'        => '',
									'recurring_trial'           => '',
									'recurring_trial_frequency' => '',
									'recurring_trial_price'     => '',
									'recurring_trial_cycle'     => '',
									'recurring_trial_duration'  => ''
								);
							} else {
								$product_data[$key] = array(
									'key'             			=> $key,
									'product_id'      			=> $product_info['product_id'],
									'name'						=> (isset($this->session->data['override_name'][$key]) ? $this->session->data['override_name'][$key] : $product_info['name']),
									'model'						=> (isset($this->session->data['override_model'][$key]) ? $this->session->data['override_model'][$key] : $product_info['model']),
									'location'		    		=> (isset($this->session->data['override_location'][$key]) ? $this->session->data['override_location'][$key] : $product_info['location']),
									'sku'						=> (isset($this->session->data['override_sku'][$key]) ? $this->session->data['override_sku'][$key] : $product_info['sku']),
									'upc'						=> (isset($this->session->data['override_upc'][$key]) ? $this->session->data['override_upc'][$key] : $product_info['upc']),
									'stock_status_id' 			=> '',
									'tax'			  			=> $product_info['tax'],
									'shipping'        			=> $product_info['shipping'],
									'image'           			=> (isset($this->session->data['custom_image'][$product_info['product_id']]) ? $this->session->data['custom_image'][$product_info['product_id']] : ''),
									'option'          			=> $option_data,
									'download'        			=> $download_data,
									'quantity'        			=> $quantity,
									'minimum'         			=> '',
									'subtract'        			=> '',
									'stock'           			=> true,
									'price'           			=> $product_info['price'],
									'total'           			=> $product_info['price'] * $quantity,
									'reward'          			=> '',
									'points'          			=> 0,
									'tax_class_id'    			=> $product_info['tax_class_id'],
									'weight'		  			=> (isset($this->session->data['override_weight'][$key]) ? $this->session->data['override_weight'][$key] : $product_info['weight']),
									'weight_class_id' 			=> (isset($this->session->data['override_weight_id'][$key]) ? $this->session->data['override_weight_id'][$key] : $product_info['weight_class_id']),
									'ship'			  			=> (isset($this->session->data['override_ship'][$key]) ? 1 : 0),
									'length'          			=> '',
									'width'           			=> '',
									'height'          			=> '',
									'length_class_id' 			=> '',
									'profile_id'                => '',
									'profile_name'              => '',
									'recurring'                 => false,
									'recurring_frequency'       => '',
									'recurring_price'           => '',
									'recurring_cycle'           => '',
									'recurring_duration'        => '',
									'recurring_trial'           => '',
									'recurring_trial_frequency' => '',
									'recurring_trial_price'     => '',
									'recurring_trial_cycle'     => '',
									'recurring_trial_duration'  => ''
								);
							}
						} else {
							$new_array[] = array(
								'key'						=> $product_info['key'],
								'product_id'				=> $product_info['product_id'],
								'name'						=> (isset($this->session->data['override_name'][$product_info['key']]) ? $this->session->data['override_name'][$product_info['key']] : $product_info['name']),
								'model'						=> (isset($this->session->data['override_model'][$product_info['key']]) ? $this->session->data['override_model'][$product_info['key']] : $product_info['model']),
								'location'		    		=> (isset($this->session->data['override_location'][$product_info['key']]) ? $this->session->data['override_location'][$product_info['key']] : $product_info['location']),
								'sku'						=> (isset($this->session->data['override_sku'][$product_info['key']]) ? $this->session->data['override_sku'][$product_info['key']] : $product_info['sku']),
								'upc'						=> (isset($this->session->data['override_upc'][$product_info['key']]) ? $this->session->data['override_upc'][$product_info['key']] : $product_info['upc']),
								'image'						=> (isset($this->session->data['custom_image'][$product_info['product_id']]) ? $this->session->data['custom_image'][$product_info['product_id']] : ''),
								'quantity'					=> $product_info['quantity'],
								'price'						=> $product_info['price'],
								'total'						=> $product_info['total'],
								'tax'						=> $product_info['tax'],
								'shipping'					=> $product_info['shipping'],
								'tax_class_id'				=> $product_info['tax_class_id'],
								'weight'					=> (isset($this->session->data['override_weight'][$product_info['key']]) ? $this->session->data['override_weight'][$product_info['key']] : $product_info['weight']),
								'weight_class_id'			=> (isset($this->session->data['override_weight_id'][$product_info['key']]) ? $this->session->data['override_weight_id'][$product_info['key']] : $product_info['weight_class_id']),
								'ship'						=> (isset($this->session->data['override_ship'][$product_info['key']]) ? 1 : 0),
								'stock'						=> true,
								'profile_id'                => '',
								'profile_name'              => '',
								'recurring'                 => false,
								'recurring_frequency'       => '',
								'recurring_price'           => '',
								'recurring_cycle'           => '',
								'recurring_duration'        => '',
								'recurring_trial'           => '',
								'recurring_trial_frequency' => '',
								'recurring_trial_price'     => '',
								'recurring_trial_cycle'     => '',
								'recurring_trial_duration'  => ''
							);
						}
					}
					$this->session->data['product_info'] = $new_array;
					$new_array = null;
					unset($new_array);
				} else {
					$this->remove($key);
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				if ($product['tax_class_id']) {
			]]></search>
			<add><![CDATA[
				if (!isset($this->session->data['customer_info'])) {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
				$this->tax = $registry->get('tax');
			]]></search>
			<add><![CDATA[
				$this->currency = $registry->get('currency');
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="2"><![CDATA[
				return $tax_data;
			]]></search>
			<add><![CDATA[
				} else {
					if (isset($this->session->data['taxed'][$product['key']]) && $product['tax_class_id'] > 0) {
						if (version_compare(VERSION, '1.5.2.1', '>')) {
							$tax_rates = $this->tax->getRates($product['price'], $product['tax_class_id']);
							foreach ($tax_rates as $tax_rate) {
								if (!isset($tax_data[$tax_rate['tax_rate_id']])) {
									$tax_data[$tax_rate['tax_rate_id']] = ($tax_rate['amount'] * $product['quantity']);
								} else {
									$tax_data[$tax_rate['tax_rate_id']] += ($tax_rate['amount'] * $product['quantity']);
								}
							}
						} else {
							$tax_rates = $this->tax->getRates($product['total'], $product['tax_class_id']);
							foreach ($tax_rates as $tax_rate) {
								if ($tax_rate['type'] == 'F') {
									$amount = ($tax_rate['amount'] * $product['quantity']);
								} elseif ($tax_rate['type'] == 'P') {
									$amount = $tax_rate['amount'];
								}
								if (!isset($tax_data[$tax_rate['tax_rate_id']])) {
									$tax_data[$tax_rate['tax_rate_id']] = $amount;
								} else {
									$tax_data[$tax_rate['tax_rate_id']] += $amount;
								}
							}
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before" offset="2"><![CDATA[
				return $taxes;
			]]></search>
			<add><![CDATA[
				} else {
					if (isset($this->session->data['taxed'][$product['key']]) && $product['tax_class_id'] > 0) {
						if (isset($this->session->data['override_tax'][$tax_rate['name']])) {
							$taxes[$product['tax_class_id']] = $this->session->data['override_tax'][$tax_rate['name']];
						} else {
							if (!isset($taxes[$product['tax_class_id']])) {
								$taxes[$product['tax_class_id']] = $product['total'] / 100 * $this->tax->getRate($product['tax_class_id']);
							} else {
								$taxes[$product['tax_class_id']] += $product['total'] / 100 * $this->tax->getRate($product['tax_class_id']);
							}
						}
					}
				}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[
				public function getWeight() {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['cart_weight'])) {
					$weight = $this->session->data['cart_weight'];
				} else {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$weight += $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
			]]></search>
			<add><![CDATA[
				if ($product['weight'] > 0) {
					$weight += $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$weight += $this->weight->convert($product['weight'], $product['weight_class'], $this->config->get('config_weight_class'));
			]]></search>
			<add><![CDATA[
				if ($product['weight'] > 0) {
					$weight += $this->weight->convert($product['weight'], $product['weight_class'], $this->config->get('config_weight_class'));
				}
			]]></add>
		</operation>
		<operation>
			<search position="before"><![CDATA[
				return $weight;
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				(int)$this->config->get('config_language_id')
			]]></search>
			<add><![CDATA[
				(isset($this->session->data['language_id']) ? (int)$this->session->data['language_id'] : (int)$this->config->get('config_language_id'))
			]]></add>
		</operation>
	</file>

	<file name="system/library/currency.php">
		<operation>
			<search position="before"><![CDATA[
				if ($currency && $this->has($currency)) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$currency = $this->session->data['selected_currency']['code'];
				}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				} elseif ((isset($this->session->data['currency'])) && (array_key_exists($this->session->data['currency'], $this->currencies))) {
			]]></search>
			<add><![CDATA[
				} elseif ((isset($this->session->data['currency'])) && (array_key_exists($this->session->data['currency'], $this->currencies)) && (!isset($this->session->data['customer_info']))) {
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[
				} elseif ((isset($this->request->cookie['currency'])) && (array_key_exists($this->request->cookie['currency'], $this->currencies))) {
			]]></search>
			<add><![CDATA[
				} elseif ((isset($this->request->cookie['currency'])) && (array_key_exists($this->request->cookie['currency'], $this->currencies)) && (!isset($this->session->data['customer_info']))) {
			]]></add>
		</operation>
	</file>

	<file name="system/library/customer.php">
		<operation>
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT SUM(amount) AS total FROM " . DB_PREFIX . "customer_transaction WHERE customer_id = '" . (int)$this->customer_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT SUM(amount) AS total FROM " . DB_PREFIX . "customer_transaction WHERE customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "'");
				} else {
					$query = $this->db->query("SELECT SUM(amount) AS total FROM " . DB_PREFIX . "customer_transaction WHERE customer_id = '" . (int)$this->customer_id . "'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->customer_id . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "'");
				} else {
					$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->customer_id . "'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->customer_id . "' AND status = 1");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "' AND status = 1");
				} else {
					$query = $this->db->query("SELECT SUM(points) AS total FROM " . DB_PREFIX . "customer_reward WHERE customer_id = '" . (int)$this->customer_id . "' AND status = 1");
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/language.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = DIR_LANGUAGE . $this->directory . '/' . $filename . '.php';
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = substr($filename, 6);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'language/' . $this->directory . '/' . $filename . '.php';
					} else {
						$file = DIR_APPLICATION . 'language/' . $this->directory . '/' . $filename . '.php';
					}
					if (!file_exists($file)) {
						return;
					}
				} else {
					$file = DIR_LANGUAGE . $this->directory . '/' . $filename . '.php';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = $this->path . $this->directory . '/' . $filename . '.php';
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = substr($filename, 6);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'language/' . $this->directory . '/' . $filename . '.php';
					} else {
						$file = DIR_APPLICATION . 'language/' . $this->directory . '/' . $filename . '.php';
					}
					if (!file_exists($file)) {
						return;
					}
				} else {
					$file = $this->path . $this->directory . '/' . $filename . '.php';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = DIR_LANGUAGE . $this->default . '/' . $filename . '.php';
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = substr($filename, 6);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'language/' . $this->default . '/' . $filename . '.php';
					} else {
						$file = DIR_APPLICATION . 'language/' . $this->default . '/' . $filename . '.php';
					}
					if (!file_exists($file)) {
						return;
					}
				} else {
					$file = DIR_LANGUAGE . $this->default . '/' . $filename . '.php';
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = $this->path . $this->default . '/' . $filename . '.php';
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = substr($filename, 6);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'language/' . $this->default . '/' . $filename . '.php';
					} else {
						$file = DIR_APPLICATION . 'language/' . $this->default . '/' . $filename . '.php';
					}
					if (!file_exists($file)) {
						return;
					}
				} else {
					$file = $this->path . $this->default . '/' . $filename . '.php';
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/tax.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['shipping_address_id'] . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['shipping_address_id'] . "' AND customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "'");
				} else {
					$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['shipping_address_id'] . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['payment_address_id'] . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['payment_address_id'] . "' AND customer_id = '" . (int)$this->session->data['customer_info']['customer_id'] . "'");
				} else {
					$address_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "address WHERE address_id = '" . (int)$this->session->data['payment_address_id'] . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				if ($this->customer->isLogged()) {
			]]></search>
			<add><![CDATA[
				if (isset($this->session->data['customer_info'])) {
					$customer_group_id = $this->session->data['customer_info']['customer_group_id'];
				} else {
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
				if ($this->shipping_address) {
			]]></search>
			<add><![CDATA[
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/template.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = DIR_TEMPLATE . $filename;
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = str_replace("oentry", "", $filename);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'view/theme/' . $filename;
					} else {
						$file = DIR_APPLICATION . 'view/theme/' . $filename;
					}
				} else {
					$file = DIR_TEMPLATE . $filename;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="replace"><![CDATA[
				$file = ($prefix_dir ? DIR_TEMPLATE : '') . $filename;
			]]></search>
			<add><![CDATA[
				if (strpos($filename, "oentry") !== false) {
					$filename = str_replace("oentry", "", $filename);
					if (defined('DIR_CATALOG')) {
						$file = DIR_CATALOG . 'view/theme/' . $filename;
					} else {
						$file = DIR_APPLICATION . 'view/theme/' . $filename;
					}
				} elseif (strpos($filename, "default/template/default/template") !== false) {
					$file = str_replace("default/template/default/template", "default/template", $filename);
				} else {
					$file = ($prefix_dir ? DIR_TEMPLATE : '') . $filename;
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/user.php">
		<operation>
			<search position="before"><![CDATA[
				public function getUserName() {
			]]></search>
			<ignoreif><![CDATA[
				public function getUserGroupId() {
			]]></ignoreif>
			<add><![CDATA[
				public function getUserGroupId() {
					$group_id = 0;
					$query = $this->db->query("SELECT user_group_id FROM `" . DB_PREFIX . "user` WHERE user_id = '" . $this->user_id . "'");
					if ($query->num_rows) {
						$group_id = $query->row['user_group_id'];
					}
					return $group_id;
				}
			]]></add>
		</operation>
	</file>

	<file name="system/library/weight.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
				return $value * ($to / $from);
			]]></search>
			<add><![CDATA[
				if ($to == 0 || $from == 0) {
					return 0;
				} else {
					return $value * ($to / $from);
				}
			]]></add>
		</operation>
	</file>

</modification>
